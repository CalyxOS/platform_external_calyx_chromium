{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3783ecbd_67c6bd99",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1000062
      },
      "writtenOn": "2025-01-15T22:06:33Z",
      "side": 1,
      "message": "Let\u0027s try to find a way to name patches the same way Cromite does, to mitigate the manual renaming [referenced here](https://review.calyxos.org/c/CalyxOS/platform_external_calyx_chromium/+/34215/5//COMMIT_MSG#17), aiding in Cromite syncs.\n\nIf it can\u0027t be done cleanly, maybe we can ask Cromite about renaming the patch files to match what is generated by `format-patch`, but first I want to see if there\u0027s something we\u0027re *not* doing that Cromite *is* doing, that will just fix it.",
      "revId": "1989c3884b81e06dd668f63d5c20375cbf898752",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f707b10_04d0d9d9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1000062
      },
      "writtenOn": "2025-01-16T21:10:30Z",
      "side": 1,
      "message": "Cromite\u0027s patch application process adds \"FILE: \" to the commit message as part of `cromite/tools/images/cromite-source/apply-cromite-patches.sh`, followed by the file name of the patch. This part of the commit message is then parsed back later (`cromite/tools/export-single-patch.sh`) in order to determine the patch filename, and the line removed from the patch\u0027s commit message.\n\nI would rather avoid this complexity if possible.",
      "parentUuid": "3783ecbd_67c6bd99",
      "revId": "1989c3884b81e06dd668f63d5c20375cbf898752",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2eaeeae8_d9bc4d3a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1000062
      },
      "writtenOn": "2025-01-16T21:25:45Z",
      "side": 1,
      "message": "https://github.com/uazo/cromite/discussions/1742#discussion-7832798",
      "parentUuid": "5f707b10_04d0d9d9",
      "revId": "1989c3884b81e06dd668f63d5c20375cbf898752",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a4d3d60b_7c0ba472",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1000062
      },
      "writtenOn": "2025-02-06T00:00:08Z",
      "side": 1,
      "message": "Ack, I don\u0027t want this to be a blocker. The initial `sync_cromite()` will simply deal with these patches on an individual basis.",
      "parentUuid": "2eaeeae8_d9bc4d3a",
      "revId": "1989c3884b81e06dd668f63d5c20375cbf898752",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f790082_b32ddefd",
        "filename": "build/tools/helpers.sh",
        "patchSetId": 11
      },
      "lineNbr": 25,
      "author": {
        "id": 1000062
      },
      "writtenOn": "2025-01-08T15:31:55Z",
      "side": 1,
      "message": "The `git_` functions should have their respective `find_` functions called, at the top, bailing out when not found. Yes, there\u0027s the potential for redundant calls, but currently, if the *user* tries to use one of these `git_` functions, there\u0027s no guarantee the paths have been initialized.\n\nFor example, I tried to use `git_cromite status` and it did not reflect the cromite repo! The command was treated as `git -C \"\" status`, which is apparently valid and makes git use the current directory. Not desirable!",
      "revId": "1989c3884b81e06dd668f63d5c20375cbf898752",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3e4109ff_7a2591c5",
        "filename": "build/tools/helpers.sh",
        "patchSetId": 11
      },
      "lineNbr": 25,
      "author": {
        "id": 1000062
      },
      "writtenOn": "2025-02-05T18:47:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9f790082_b32ddefd",
      "revId": "1989c3884b81e06dd668f63d5c20375cbf898752",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c0fad76_d8020a36",
        "filename": "build/tools/helpers.sh",
        "patchSetId": 11
      },
      "lineNbr": 683,
      "author": {
        "id": 1000062
      },
      "writtenOn": "2025-01-08T13:00:33Z",
      "side": 1,
      "message": "These `${1:-..}` constructions were added to support outputting and updating patches when working in a different src dir (src2). It can be supplied as an argument to update_patches, etc. But in retrospect, maybe `CHROMIUM_SRC_PATH\u003d\"$(pwd)\" update_patches` or something would be cleaner.",
      "revId": "1989c3884b81e06dd668f63d5c20375cbf898752",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    }
  ]
}