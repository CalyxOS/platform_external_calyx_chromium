From: uazo <uazo@users.noreply.github.com>
Date: Sat, 7 Nov 2020 21:59:18 +0000
Subject: Add autoplay site setting

Original License: GPL-2.0-or-later - https://spdx.org/licenses/GPL-2.0-or-later.html
License: GPL-3.0-only - https://spdx.org/licenses/GPL-3.0-only.html
Require: Content-settings-infrastructure.patch

Change-Id: I0800ab1fc452d0a57932b7e0653a353c3fdf464c
---
 .../res/drawable-hdpi/settings_autoplay.png   | Bin 0 -> 456 bytes
 .../res/drawable-mdpi/settings_autoplay.png   | Bin 0 -> 296 bytes
 .../res/drawable-xhdpi/settings_autoplay.png  | Bin 0 -> 551 bytes
 .../res/drawable-xxhdpi/settings_autoplay.png | Bin 0 -> 792 bytes
 .../drawable-xxxhdpi/settings_autoplay.png    | Bin 0 -> 1064 bytes
 .../impl/BromiteAutoplayContentSetting.java   |  93 ++++++++++++++++++
 .../bromite_content_settings/autoplay.grdp    |  21 ++++
 .../bromite_content_settings/autoplay.inc     |  12 +++
 .../core/browser/content_settings_registry.cc |   2 +-
 .../core/html/media/autoplay_policy.cc        |  14 +++
 .../core/html/media/autoplay_policy.h         |   4 +
 11 files changed, 145 insertions(+), 1 deletion(-)
 create mode 100644 components/browser_ui/site_settings/android/java/res/drawable-hdpi/settings_autoplay.png
 create mode 100644 components/browser_ui/site_settings/android/java/res/drawable-mdpi/settings_autoplay.png
 create mode 100644 components/browser_ui/site_settings/android/java/res/drawable-xhdpi/settings_autoplay.png
 create mode 100644 components/browser_ui/site_settings/android/java/res/drawable-xxhdpi/settings_autoplay.png
 create mode 100644 components/browser_ui/site_settings/android/java/res/drawable-xxxhdpi/settings_autoplay.png
 create mode 100644 components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/impl/BromiteAutoplayContentSetting.java
 create mode 100644 components/browser_ui/strings/bromite_content_settings/autoplay.grdp
 create mode 100644 components/content_settings/core/browser/bromite_content_settings/autoplay.inc

diff --git a/components/browser_ui/site_settings/android/java/res/drawable-hdpi/settings_autoplay.png b/components/browser_ui/site_settings/android/java/res/drawable-hdpi/settings_autoplay.png
new file mode 100644
index 0000000000000000000000000000000000000000..a8a9265f14cd8445ad1f55845099e60dc3c4edf1
GIT binary patch
literal 456
zcmeAS@N?(olHy`uVBq!ia0y~yU{C>J4i*Lm25-&)VFm`qeoq(2kP619(>CTEG7xCv
z)>+~8OG5G&PbH(o%V)-VT~l~&UY^;gn>=~v-3bwu4K}XrYd91)ik133%n6ultTuH|
zVt)GX(|^mq#mc=aIP+WSiDk%|wD!kq7Czd^@%(SSW1924gY!&F4$Vv7oaoL|pD2AT
z;#r$-p3^Kj9liMbPL{IW3SX7tSuPt+*|2ww?yPyDho@yd?o(auSY2zH!1+cbC)086
z-p0}=@wbJ4Zm_E^wKd~CS6-d>tXAX7xlY4iqaz!ZNpuCp<?={Anc35;*LC)cM#ZF!
zk0k#dlXKjdXCGxZ*<D#{+V@pY_j9Bkx;@kBwYW|2g)9aAW{%QCOF7M3w?pgde1sOd
z6z<Gh^Wne=jzgZRe#bM`e_=M=B^kpW*s0`Dy;k00PS478M#0XN?bn(aMSgB~`0(p{
z-{QBoH*R@%@ZScO*-Q2>QBdk!a{p=T68{#}T!E=e!i0Xg6daiS@}iLElZ#f`%6;6k
ze+PMY+aFo>h~H56U+k?w#>K(bUbZ>zthw&*q?i1jcK5IPqkqTr>;K-%+-ljM%fP_E
N;OXk;vd$@?2>^SS%i90|

literal 0
HcmV?d00001

diff --git a/components/browser_ui/site_settings/android/java/res/drawable-mdpi/settings_autoplay.png b/components/browser_ui/site_settings/android/java/res/drawable-mdpi/settings_autoplay.png
new file mode 100644
index 0000000000000000000000000000000000000000..49fa10d44f4007532d0d03d15fdcb1a715857e96
GIT binary patch
literal 296
zcmeAS@N?(olHy`uVBq!ia0y~yV2}V|4i*Lm2CurW#S9D#?>$`{Ln?0V4c^GxY#`9%
zU@~!Yhh#IS#+^UPmR^pHF$PSg!Alk<$^|K;a!+Y%+tVp>`=Hk&w)*7x@4l3O`@P}2
zmaxE$gB-$FJ*)%O;$O@-EIX}#SMobmbHQ!ei3g-Ak7}s}uSvWhvCVgjV20JX)>p~W
zZy!57T%#Io>~j1}wn?<=PU)$8#9#S7T(=~^s#{dP<y+pF2h8WzZ8YsR@U_m0ls+W&
zB}z^=+Ej6_Vo%AFbqy0{ADkd;Bz1_z`)Ev~Uh>+cl6n6G7St$CpDe}_F=^#S5vg1C
zYc*=GOZ_QmTr6l+v;VmCPTPBq@)}>d-|d;V!0NV(Te9^h1_lNOPgg&ebxsLQ03ZZ;
APXGV_

literal 0
HcmV?d00001

diff --git a/components/browser_ui/site_settings/android/java/res/drawable-xhdpi/settings_autoplay.png b/components/browser_ui/site_settings/android/java/res/drawable-xhdpi/settings_autoplay.png
new file mode 100644
index 0000000000000000000000000000000000000000..5a4128a5e02949de754f9cab2635824eda8c539c
GIT binary patch
literal 551
zcmeAS@N?(olHy`uVBq!ia0y~yU@!n-4i*LmhQHi~JPZts?>t=`Ln>~)4c}YT<RH+u
zRB-F&%|&fW{Rv04Z`_j;(ADVkl4D4#n7Cx2$Grnx?FB&}SR#&}^w}`Mppn^V4!6<H
zLz4O0H%s^L&acmV|8QSk@=Wem4h)K&Ck!WZIB~2<*86vGtDUml8&9oiK965-{&&v(
zLE3NM=qDWO>|Q;T3lo^UWwry)>eX|WGZ&oP`RoCU^@f#cD|~MD@J`K2NRRh3onXA<
z<$}e(-%i+b{a+PBny+iwH4zERE89M9lP$Ydd$!ieW?8~DA4NG&tq#8B4BKy6$Cg<d
z#)ds-*lxOIPW6rT&tsFf%{#oW=O~x|nHlf*y_9Qzu)HBce(UAQ949i>wK5la&Yzn4
zl=DFRT6dYIialTSLd-u}+Acbys9AGBcwS)YhT4UU{2~SuzlDExop(_r(Z;bwcJrEB
zoe~P-Jz6t9yb>#kdL_bFc9WllVL4aXPTta4s~Ut`m>+~R#zwIChDIc0TQK;EUggTY
zQ6lhE%lRl{!784u7u<N+_pr@qVtx=}*n0htYs1+eQVa(FqjHb6J`1*Tz0_P|>6<IF
zU=f>t@XJ=UrJ)g*SA~AbDNFd4Q}*e0>F?IhmmVLQSeJTg|Cguzx}VtfYfAo1GqCDv
zi!Xe6kVUety63%){Qa3tJ@1X=6(-FO2$F9!n!oXTsqky|y{WqU`B%JO&%nUI;OXk;
Jvd$@?2><~P_gnw~

literal 0
HcmV?d00001

diff --git a/components/browser_ui/site_settings/android/java/res/drawable-xxhdpi/settings_autoplay.png b/components/browser_ui/site_settings/android/java/res/drawable-xxhdpi/settings_autoplay.png
new file mode 100644
index 0000000000000000000000000000000000000000..7fceb8c2b546970a3720e8ab225799aa03895b7f
GIT binary patch
literal 792
zcmeAS@N?(olHy`uVBq!ia0y~yVDJE84i*LmhW}5h&oD4B-S>2H45?sz8?`a-k&l31
zs%F3v1*eIZg8u4H&|Bzer24id+xe-Oy6jx-c}%Pt0agF~1-M-tYfWRdR91Pn9O|6x
zw|w`;gU6Dcw_K{+CVTDvIdfxc>%*>!ts;w7Tc}=j;8#AA*(sWv(JZQKc$~xbYJpcg
z$I(@*^q6j4&`ZqyuxeM>*Eb0-=GFXK5_{^ar`_H8ygjRw7tF0u+#u)2x2(9iQ-+J#
z^yQs7m(0|zZ8^PtL)f#G4{RPDKj>dGfnVG=bhGxnhmvKkS1+`9+u89o-CDK$PJ&JI
zJpQ@Uj%7qXy<wrV*!6L9SnanSo1M?3Ht*HFf3bXB(BEHNwN>}6&s^DgE=Shqdyn0Q
zeAVh3+p`>QYb@yr>zdSR{#q|sY473aDLZ`D$=pm4+}3->ZwtqJwX*zFH=e(rDrTx%
z$mzdSb=s%t-Tc~MPPed!gwVC7kWSATYih0~hDEh(E`MdM{pQrieahdLZm3>eW%Zk7
z&g&&74%L6^c)YJuA-3`0c>|A@e{-!Ky^#IzH&{gd$NcoCDZA?C7Co7gvZZy?_WCVS
zPo9eZI(cjV)_o^eIM1J6;J(UhhmAr1-N<?q*DIFcHY-=;Rkh2hXBIgGy~>z#Y2#cW
z{ks<@F-!_*7pvz}k#RAt_?bG@wSnbIWNO@@m2Nhl<{kKNsbE<8WOMwNM~uBQW@)pj
zEYK6NSzNKz(s+p`o5}*enLgEW{~J}ALxh=y0+wg_luPC>yc%!1TZv6&!MSw?dqe-Q
zM_j0GlbFz8b^bx)|JH^J)0i*K+7xW{)nI?{>BDhuqQWMXH(t+|*t*y1Q~bJ&=lf$!
zb?rZiXB_Tfz4bcMD`Ly%=^JK=|2*@*_56Z|lJgxuwJY8FDc^O=ZmDU8Sp@&D?a5#A
zBVOLTba}(emBG<7%+IB#XU;iqqx?G~an->L$J-CNi{Iz|sqmUvW3$xfV1-vR<GeU!
zzuvY3tN!WtoU9DxG(RfO$+ROZbou_M46Rm?pcDSpGk!_;F4?$~fq{X+)78&qol`;+
E0JW@kg#Z8m

literal 0
HcmV?d00001

diff --git a/components/browser_ui/site_settings/android/java/res/drawable-xxxhdpi/settings_autoplay.png b/components/browser_ui/site_settings/android/java/res/drawable-xxxhdpi/settings_autoplay.png
new file mode 100644
index 0000000000000000000000000000000000000000..92a315bb00ac1f4dc675e894bf4af3ba7c68bf39
GIT binary patch
literal 1064
zcmeAS@N?(olHy`uVBq!ia0y~yU`POA4i*Lm29JsRH#0CWzxQ-;45_&FHrmib*-_-K
zNoSn8pvV#BsYeBaB9EW)Vtu&oSALnWqtE09rwx5K)SK2mShzJIx3+calcG3ro~AG^
ztqNDJyUoqob8ha~ZM?aY`SbFB#{bXm`}_I-eEU98?XWcw8yESTsohjseaUX_LTB4M
z!SjFZST1K(;`V#ZDKT?3`y~&fA4jD5Zh1NN&xDU%X4y%V*?*d6yj#BF1m6djx;>5R
zWe%?Pra_OhCBqi#{p4DFT5IbWj~@O0#L0OluN&lTjFgk!^fQMu{K;$S9ZBBK#&x-3
z%b&cKw}_oBd+gr&M~#0{*yL_xEjng?X^VK)F<HM2%tg;nTk7BTFuxSHZBFrX#~TMZ
z@3y{rZ+eMyroZrykMAythkWO%dsVyqwde{z@%MG@@+J>oi08NIvFrWpnKrxMc=l{}
z?(@u!F;&L9&dxvlwc)7T#@DG!pPfmXF2|m8a;y3B((mju`xk%JoI3OR@&XfqLp^5i
z*eA1_ziaCId6)GLi*TpfmWp`~;>Djo&CFf?%j8^heLAn4=8eKfJEmQf4t;2GW2KgS
zG~==T3Aa5RHuQ=Ynl4>@_ID5a#hPzdJv~17wluJ}GAL_2dsr6#JDj6y;u7U^3h%5r
zy)W!PFzv~szuFf+Uomn%VSMgrLbOu+fn_hgtI8~&5-fV2HRo7acG5P{w>J)b@AZG>
zK6}R2qkq1wQDWo0Xmav+eobJj0-MAdq4k$8Jayi-!tlKPhWZt2*b-{JI6m(()RG7h
z`Brbf>Rml=s8(Y5f<Qy7M!p{v_fH>VUErmvfBHH18-=Q=Z##o?t^8sbUWGVy>$keD
zdA3u#>HkS@hJa<0W{baxnCRpu-lxp$FxRW*T~C<F*7<WdOD!2*g)Fi%_qPseoU`7b
znia(V#8s1O?Nm5V_fx5yy(+uIT(7#W^~xKM2B==yk?JqwF4kZ*wcrrriZ<yD=XG}}
z^E=G-y7BPK_rtsvkHu6f8D51j72ZmJsI}kXzO_C`@}14{o1EqgzK1QHGnsvX-_oMK
z%dcBkJ(yR#C=#Ul)22D+YIiXH-LBQU#fG6&%k<J5zyHmQ4xZ)=pEXnd`QMRjlXlfq
zG|&3ym{zB8aFr)pu|_7}vork5&-!P$I7Zidbp|DAF4b7`vv5+?%1?aLwoVJ>`#Lpr
zgHGfPC+}?=S|{B*H0|M1*T>zvopshPHd*v(*H3YoSK&VGi+3g&{h#DtvTX6rw6&>C
z>mzyhzcAZ#^}vrb{=>I(dGaeZ>83Bv{k1uFdYj3<Romq@r`@@he642x*BfT_{hR*Y
zvuohsHkef1lqAo1^rZL~yThCKAM(_9t?<(*XI;CZ-|=Em__kwji(|m~FzM(|Zc|<V
Wdv)gLJs21m7(8A5T-G@yGywn}y!wd%

literal 0
HcmV?d00001

diff --git a/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/impl/BromiteAutoplayContentSetting.java b/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/impl/BromiteAutoplayContentSetting.java
new file mode 100644
--- /dev/null
+++ b/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/impl/BromiteAutoplayContentSetting.java
@@ -0,0 +1,93 @@
+/*
+    This file is part of Bromite.
+
+    Bromite is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    Bromite is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with Bromite. If not, see <https://www.gnu.org/licenses/>.
+*/
+
+package org.chromium.components.browser_ui.site_settings.impl;
+
+import org.chromium.components.browser_ui.site_settings.R;
+
+import org.chromium.components.browser_ui.site_settings.BromiteCustomContentSetting;
+import org.chromium.components.browser_ui.site_settings.ContentSettingsResources;
+import org.chromium.components.browser_ui.site_settings.SiteSettingsCategory;
+import org.chromium.components.content_settings.ContentSettingValues;
+import org.chromium.components.content_settings.ContentSettingsType;
+import org.chromium.content_public.browser.BrowserContextHandle;
+
+import androidx.annotation.Nullable;
+import androidx.preference.Preference;
+import androidx.preference.PreferenceScreen;
+
+import java.util.ArrayList;
+
+public class BromiteAutoplayContentSetting extends BromiteCustomContentSetting {
+    public BromiteAutoplayContentSetting() {
+        super(/*contentSettingsType*/ ContentSettingsType.AUTOPLAY,
+              /*defaultEnabledValue*/ ContentSettingValues.ALLOW,
+              /*defaultDisabledValue*/ ContentSettingValues.BLOCK,
+              /*allowException*/ true,
+              /*preferenceKey*/ "autoplay",
+              /*profilePrefKey*/ "autoplay");
+    }
+
+    @Override
+    public ContentSettingsResources.ResourceItem getResourceItem() {
+        return new ContentSettingsResources.ResourceItem(
+            /*icon*/ R.drawable.settings_autoplay,
+            /*title*/ R.string.autoplay_permission_title,
+            /*defaultEnabledValue*/ getDefaultEnabledValue(),
+            /*defaultDisabledValue*/ getDefaultDisabledValue(),
+            /*enabledSummary*/ R.string.website_settings_category_autoplay_enabled,
+            /*disabledSummary*/ R.string.website_settings_category_autoplay_disabled,
+            /*summaryOverrideForScreenReader*/ 0);
+    }
+
+    @Override
+    public int getCategorySummary(@Nullable @ContentSettingValues int value) {
+        switch (value) {
+            case ContentSettingValues.ALLOW:
+                return R.string.website_settings_category_autoplay_enabled;
+            case ContentSettingValues.BLOCK:
+                return R.string.website_settings_category_autoplay_disabled;
+            default:
+                return 0;
+        }
+    }
+
+    @Override
+    public int getCategoryDescription() {
+        return R.string.website_settings_add_site_description_autoplay;
+    }
+
+    @Override
+    public boolean requiresTriStateContentSetting() {
+        return false;
+    }
+
+    @Override
+    public boolean showOnlyDescriptions() {
+        return true;
+    }
+
+    @Override
+    public int getAddExceptionDialogMessage() {
+        return R.string.website_settings_category_autoplay_enabled;
+    }
+
+    @Override
+    public @Nullable Boolean considerException(SiteSettingsCategory category, @ContentSettingValues int value) {
+        return value != ContentSettingValues.BLOCK;
+    }
+}
diff --git a/components/browser_ui/strings/bromite_content_settings/autoplay.grdp b/components/browser_ui/strings/bromite_content_settings/autoplay.grdp
new file mode 100644
--- /dev/null
+++ b/components/browser_ui/strings/bromite_content_settings/autoplay.grdp
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<grit-part>
+  <message name="IDS_AUTOPLAY_PERMISSION_TITLE" desc='Title for the Autoplay settings screen [CHAR-LIMIT=32]' formatter_data="android_java">
+    Autoplay
+  </message>
+  <message name="IDS_WEBSITE_SETTINGS_ADD_SITE_DESCRIPTION_AUTOPLAY" desc="The description for the allow autoplay of muted videos for website dialog." formatter_data="android_java">
+    Allow autoplay for a specific site.
+  </message>
+  <message name="IDS_WEBSITE_SETTINGS_CATEGORY_AUTOPLAY_ENABLED" desc="Summary text explaining that sites are allowed to compile JavaScript in JIT mode." formatter_data="android_java">
+    Allow sites to automatically play muted videos
+  </message>
+  <message name="IDS_WEBSITE_SETTINGS_CATEGORY_AUTOPLAY_DISABLED" desc="Summary text explaining that sites are running JavaScript in JITless mode." formatter_data="android_java">
+    Autoplay disabled
+  </message>
+  <message name="IDS_SETTINGS_SITE_SETTINGS_AUTOPLAY_ALLOWED_EXCEPTIONS" desc="Label for the allowed exceptions site list of the autoplay setting.">
+    Allowed to autoplay
+  </message>
+  <message name="IDS_SETTINGS_SITE_SETTINGS_AUTOPLAY_BLOCKED_EXCEPTIONS" desc="Label for the blocked exceptions site list of the autoplay setting.">
+    Not allowed to autoplay
+  </message>
+</grit-part>
diff --git a/components/content_settings/core/browser/bromite_content_settings/autoplay.inc b/components/content_settings/core/browser/bromite_content_settings/autoplay.inc
new file mode 100644
--- /dev/null
+++ b/components/content_settings/core/browser/bromite_content_settings/autoplay.inc
@@ -0,0 +1,12 @@
+  content_settings::WebsiteSettingsRegistry::GetInstance()
+    ->GetMutable(ContentSettingsType::AUTOPLAY)
+    ->set_show_into_info_page()
+    .set_desktop_ui()
+    .set_is_renderer_content_setting()
+    .set_title_ui(IDS_AUTOPLAY_PERMISSION_TITLE)
+    .set_description_ui(IDS_WEBSITE_SETTINGS_ADD_SITE_DESCRIPTION_AUTOPLAY)
+    .set_allowed_ui(IDS_WEBSITE_SETTINGS_CATEGORY_AUTOPLAY_ENABLED)
+    .set_blocked_ui(IDS_WEBSITE_SETTINGS_CATEGORY_AUTOPLAY_DISABLED)
+    .set_allowed_exceptions_ui(IDS_SETTINGS_SITE_SETTINGS_AUTOPLAY_ALLOWED_EXCEPTIONS)
+    .set_blocked_exceptions_ui(IDS_SETTINGS_SITE_SETTINGS_AUTOPLAY_BLOCKED_EXCEPTIONS)
+    .set_mid_sentence_ui(IDS_AUTOPLAY_PERMISSION_TITLE);
diff --git a/components/content_settings/core/browser/content_settings_registry.cc b/components/content_settings/core/browser/content_settings_registry.cc
--- a/components/content_settings/core/browser/content_settings_registry.cc
+++ b/components/content_settings/core/browser/content_settings_registry.cc
@@ -248,7 +248,7 @@ void ContentSettingsRegistry::Init() {
            ContentSettingsInfo::INHERIT_IN_INCOGNITO,
            ContentSettingsInfo::EXCEPTIONS_ON_SECURE_ORIGINS_ONLY);
 
-  Register(ContentSettingsType::AUTOPLAY, "autoplay", CONTENT_SETTING_ALLOW,
+  Register(ContentSettingsType::AUTOPLAY, "autoplay", CONTENT_SETTING_BLOCK,
            WebsiteSettingsInfo::UNSYNCABLE, /*allowlisted_primary_schemes=*/{},
            /*valid_settings=*/{CONTENT_SETTING_ALLOW, CONTENT_SETTING_BLOCK},
            WebsiteSettingsInfo::TOP_ORIGIN_ONLY_SCOPE,
diff --git a/third_party/blink/renderer/core/html/media/autoplay_policy.cc b/third_party/blink/renderer/core/html/media/autoplay_policy.cc
--- a/third_party/blink/renderer/core/html/media/autoplay_policy.cc
+++ b/third_party/blink/renderer/core/html/media/autoplay_policy.cc
@@ -9,6 +9,7 @@
 #include "third_party/blink/public/mojom/autoplay/autoplay.mojom-blink.h"
 #include "third_party/blink/public/mojom/frame/lifecycle.mojom-blink.h"
 #include "third_party/blink/public/mojom/webpreferences/web_preferences.mojom-blink.h"
+#include "third_party/blink/public/platform/web_content_settings_client.h"
 #include "third_party/blink/public/platform/web_media_player.h"
 #include "third_party/blink/public/web/web_local_frame.h"
 #include "third_party/blink/public/web/web_local_frame_client.h"
@@ -337,6 +338,8 @@ void AutoplayPolicy::TryUnlockingUserGesture() {
 }
 
 bool AutoplayPolicy::IsGestureNeededForPlayback() const {
+  if (!IsAutoplayAllowedPerSettings())
+    return true;
   if (!IsLockedPendingUserGesture())
     return false;
 
@@ -449,6 +452,17 @@ void AutoplayPolicy::MaybeSetAutoplayInitiated() {
   }
 }
 
+bool AutoplayPolicy::IsAutoplayAllowedPerSettings() const {
+  LocalFrame* frame = element_->GetDocument().GetFrame();
+  if (!frame)
+    return false;
+  if (auto* settings_client = frame->GetContentSettingsClient()) {
+    return settings_client->AllowContentSetting(
+        ContentSettingsType::AUTOPLAY, /*default_value*/ false);
+  }
+  return true;
+}
+
 bool AutoplayPolicy::ShouldAutoplay() {
   if (!element_->GetExecutionContext() ||
       element_->GetExecutionContext()->IsSandboxed(
diff --git a/third_party/blink/renderer/core/html/media/autoplay_policy.h b/third_party/blink/renderer/core/html/media/autoplay_policy.h
--- a/third_party/blink/renderer/core/html/media/autoplay_policy.h
+++ b/third_party/blink/renderer/core/html/media/autoplay_policy.h
@@ -151,6 +151,10 @@ class CORE_EXPORT AutoplayPolicy final
   // should use, if checking to see if an action is allowed.
   bool IsLockedPendingUserGesture() const;
 
+  // Return true if and only if the settings allow autoplay of media on this
+  // frame.
+  bool IsAutoplayAllowedPerSettings() const;
+
   bool IsAutoplayingMutedInternal(bool muted) const;
   bool IsOrWillBeAutoplayingMutedInternal(bool muted) const;
 
-- 

