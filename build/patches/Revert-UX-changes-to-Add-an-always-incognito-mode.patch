From: Tommy Webb <tommy@calyxinstitute.org>
Date: Wed, 9 Oct 2024 17:57:32 +0000
Subject: Revert "UX changes to "Add an always-incognito mode""

This reverts commit ec609fb1b30a175bf10ef1825a483e55a91f03da.
---
 .../privacy/settings/IncognitoSettings.java   | 34 +++++--------------
 1 file changed, 9 insertions(+), 25 deletions(-)

diff --git a/chrome/android/java/src/org/chromium/chrome/browser/privacy/settings/IncognitoSettings.java b/chrome/android/java/src/org/chromium/chrome/browser/privacy/settings/IncognitoSettings.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/privacy/settings/IncognitoSettings.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/privacy/settings/IncognitoSettings.java
@@ -58,9 +58,6 @@ public class IncognitoSettings
     private static final String PREF_INCOGNITO_SAVE_SITE_SETTING = "incognito_save_site_setting";
 
     private final PrefService prefService = UserPrefs.get(ProfileManager.getLastUsedRegularProfile());
-    private ChromeSwitchPreference alwaysIncognitoPref;
-    private ChromeSwitchPreference historyInIncognitoPref;
-    private ChromeSwitchPreference saveSiteSettingsPref;
 
     @Override
     public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
@@ -71,10 +68,6 @@ public class IncognitoSettings
 
         setHasOptionsMenu(true);
 
-        historyInIncognitoPref =
-                (ChromeSwitchPreference) findPreference(PREF_INCOGNITO_TAB_HISTORY);
-        saveSiteSettingsPref =
-                (ChromeSwitchPreference) findPreference(PREF_INCOGNITO_SAVE_SITE_SETTING);
         updatePreferences();
     }
 
@@ -85,10 +78,10 @@ public class IncognitoSettings
     }
 
     public void updatePreferences() {
-        final boolean alwaysIncognito = prefService.getBoolean(Pref.ALWAYS_INCOGNITO_ENABLED);
-        alwaysIncognitoPref =
+        ChromeSwitchPreference alwaysIncognitoPref =
                 (ChromeSwitchPreference) findPreference(PREF_ALWAYS_INCOGNITO);
-        alwaysIncognitoPref.setChecked(alwaysIncognito);
+        alwaysIncognitoPref.setChecked(
+                prefService.getBoolean(Pref.ALWAYS_INCOGNITO_ENABLED));
         alwaysIncognitoPref.setOnPreferenceChangeListener(this);
 
         mSnackbar = Snackbar.make(getActivity().getString(R.string.ui_relaunch_notice),
@@ -106,14 +99,16 @@ public class IncognitoSettings
                         /*actionData*/null)
                 .setDuration(/*durationMs*/70000);
 
-        historyInIncognitoPref.setChecked(!alwaysIncognito ? false :
+        ChromeSwitchPreference historyInIncognitoPref =
+                (ChromeSwitchPreference) findPreference(PREF_INCOGNITO_TAB_HISTORY);
+        historyInIncognitoPref.setChecked(
                 prefService.getBoolean(Pref.INCOGNITO_TAB_HISTORY_ENABLED));
-        historyInIncognitoPref.setEnabled(alwaysIncognito);
         historyInIncognitoPref.setOnPreferenceChangeListener(this);
 
-        saveSiteSettingsPref.setChecked(!alwaysIncognito ? false :
+        ChromeSwitchPreference saveSiteSettingsPref =
+                (ChromeSwitchPreference) findPreference(PREF_INCOGNITO_SAVE_SITE_SETTING);
+        saveSiteSettingsPref.setChecked(
                 prefService.getBoolean(Pref.INCOGNITO_SAVE_SITE_SETTING_ENABLED));
-        saveSiteSettingsPref.setEnabled(alwaysIncognito);
         saveSiteSettingsPref.setOnPreferenceChangeListener(this);
     }
 
@@ -121,17 +116,6 @@ public class IncognitoSettings
     public boolean onPreferenceChange(Preference preference, Object newValue) {
         String key = preference.getKey();
         if (PREF_ALWAYS_INCOGNITO.equals(key)) {
-            if (((boolean) newValue) == false) {
-                prefService.setBoolean(Pref.INCOGNITO_TAB_HISTORY_ENABLED, false);
-                prefService.setBoolean(Pref.INCOGNITO_SAVE_SITE_SETTING_ENABLED, false);
-                historyInIncognitoPref.setChecked(false);
-                saveSiteSettingsPref.setChecked(false);
-                historyInIncognitoPref.setEnabled(false);
-                saveSiteSettingsPref.setEnabled(false);
-            } else {
-                historyInIncognitoPref.setEnabled(true);
-                saveSiteSettingsPref.setEnabled(true);
-            }
             AlwaysIncognitoLinkInterceptor.setAlwaysIncognito((boolean) newValue);
         } else if (PREF_INCOGNITO_TAB_HISTORY.equals(key)) {
             prefService.setBoolean(Pref.INCOGNITO_TAB_HISTORY_ENABLED, (boolean) newValue);
-- 

