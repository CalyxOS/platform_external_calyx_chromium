From 211df190246a2e2a4ec35cd31c8632198bdd7bdf Mon Sep 17 00:00:00 2001
From: Chirayu Desai <chirayudesai1@gmail.com>
Date: Thu, 9 Feb 2023 17:12:24 +0530
Subject: [PATCH 1/2] Revert "Reland "Android: Disable experimental vtables for
 component builds""

This reverts commit 7b1e5a59d4241360624142b1ab4c99c73d907ef7.
---
 DEPS                                          | 16 +++++++-
 build/config/android/BUILD.gn                 |  7 ++++
 build/config/compiler/BUILD.gn                |  5 ---
 build/config/compiler/compiler.gni            | 39 +++++++++----------
 third_party/gvr-android-sdk/BUILD.gn          |  7 +---
 .../libgvr_shim_static_arm.a.sha1             |  1 -
 .../libgvr_shim_static_arm64.a.sha1           |  1 -
 .../libgvr_shim_static_arm64_Cr.a.sha1        |  1 +
 .../libgvr_shim_static_arm64_vtables.a.sha1   |  1 -
 .../libgvr_shim_static_arm_Cr.a.sha1          |  1 +
 .../libgvr_shim_static_arm_vtables.a.sha1     |  1 -
 11 files changed, 42 insertions(+), 38 deletions(-)
 delete mode 100644 third_party/gvr-android-sdk/libgvr_shim_static_arm.a.sha1
 delete mode 100644 third_party/gvr-android-sdk/libgvr_shim_static_arm64.a.sha1
 create mode 100644 third_party/gvr-android-sdk/libgvr_shim_static_arm64_Cr.a.sha1
 delete mode 100644 third_party/gvr-android-sdk/libgvr_shim_static_arm64_vtables.a.sha1
 create mode 100644 third_party/gvr-android-sdk/libgvr_shim_static_arm_Cr.a.sha1
 delete mode 100644 third_party/gvr-android-sdk/libgvr_shim_static_arm_vtables.a.sha1

diff --git a/DEPS b/DEPS
index d3e42af97bf66..02dcc7df64238 100644
--- a/DEPS
+++ b/DEPS
@@ -4431,7 +4431,7 @@ hooks = [
     ],
   },
   {
-    'name': 'gvr_static_shim_android',
+    'name': 'gvr_static_shim_android_arm_Cr',
     'pattern': '\\.sha1',
     'condition': 'checkout_android',
     'action': [ 'python3',
@@ -4439,7 +4439,19 @@ hooks = [
                 '--no_resume',
                 '--no_auth',
                 '--bucket', 'chromium-gvr-static-shim',
-                '-d', 'src/third_party/gvr-android-sdk',
+                '-s', 'src/third_party/gvr-android-sdk/libgvr_shim_static_arm_Cr.a.sha1',
+    ],
+  },
+  {
+    'name': 'gvr_static_shim_android_arm64_Cr',
+    'pattern': '\\.sha1',
+    'condition': 'checkout_android',
+    'action': [ 'python3',
+                'src/third_party/depot_tools/download_from_google_storage.py',
+                '--no_resume',
+                '--no_auth',
+                '--bucket', 'chromium-gvr-static-shim',
+                '-s', 'src/third_party/gvr-android-sdk/libgvr_shim_static_arm64_Cr.a.sha1',
     ],
   },
   {
diff --git a/build/config/android/BUILD.gn b/build/config/android/BUILD.gn
index efdd3826ea470..f8d2e95c0d4b9 100644
--- a/build/config/android/BUILD.gn
+++ b/build/config/android/BUILD.gn
@@ -45,6 +45,13 @@ config("compiler") {
     # by shrinking the alignment gap between segments. This also causes all
     # segments to be mapped adjacently, which breakpad relies on.
     ldflags += [ "-Wl,-z,max-page-size=4096" ]
+
+    # Use non-standard (non-Itanium) ABI for Android64. This shrinks vtables
+    # in half and places them to .rodata, which greatly improves memory
+    # footprint. It should be safe, assuming all of C++ in Chromium is
+    # compiled with this flag.
+    cflags_cc = [ "-fexperimental-relative-c++-abi-vtables" ]
+    ldflags += [ "-fexperimental-relative-c++-abi-vtables" ]
   }
 
   if (current_cpu == "arm64") {
diff --git a/build/config/compiler/BUILD.gn b/build/config/compiler/BUILD.gn
index 944a039d066f6..6a5ddfd51977d 100644
--- a/build/config/compiler/BUILD.gn
+++ b/build/config/compiler/BUILD.gn
@@ -642,11 +642,6 @@ config("compiler") {
     cflags_cc += [ "-Wno-trigraphs" ]
   }
 
-  if (use_relative_vtables_abi) {
-    cflags_cc += [ "-fexperimental-relative-c++-abi-vtables" ]
-    ldflags += [ "-fexperimental-relative-c++-abi-vtables" ]
-  }
-
   # Add flags for link-time optimization. These flags enable
   # optimizations/transformations that require whole-program visibility at link
   # time, so they need to be applied to all translation units, and we may end up
diff --git a/build/config/compiler/compiler.gni b/build/config/compiler/compiler.gni
index e0d44eed7a760..e84f32650c2c8 100644
--- a/build/config/compiler/compiler.gni
+++ b/build/config/compiler/compiler.gni
@@ -2,7 +2,6 @@
 # Use of this source code is governed by a BSD-style license that can be
 # found in the LICENSE file.
 
-import("//build/config/c++/c++.gni")
 import("//build/config/chrome_build.gni")
 import("//build/config/chromecast_build.gni")
 import("//build/config/chromeos/args.gni")
@@ -29,17 +28,17 @@ if (is_ios) {
   import("//build/config/ios/config.gni")
 }
 
+declare_args() {
+  # Set to true to use the android unwinder V2 implementation.
+  use_android_unwinder_v2 = true
+}
+
 declare_args() {
   # Set to true to use lld, the LLVM linker.
   # In late bring-up on macOS (see docs/mac_lld.md).
   # Tentatively used on iOS.
   # The default linker everywhere else.
   use_lld = is_clang && current_os != "zos"
-
-  # If true, optimize for size.
-  # Default to favoring speed over size for platforms not listed below.
-  optimize_for_size =
-      !is_high_end_android && (is_android || is_ios || is_castos)
 }
 
 declare_args() {
@@ -134,25 +133,15 @@ declare_args() {
   # https://chromium.googlesource.com/chromium/src/+/main/docs/design/sandbox.md#cet-shadow-stack
   enable_cet_shadow_stack = target_cpu == "x64"
 
+  # If true, optimize for size.
+  # Default to favoring speed over size for platforms not listed below.
+  optimize_for_size =
+      !is_high_end_android && (is_android || is_ios || is_castos)
+
   # Set to true to enable using the ML inliner in LLVM. This currently only
   # enables the ML inliner when targeting Android.
   # Currently the ML inliner is only supported on linux hosts
   use_ml_inliner = host_os == "linux" && is_android
-
-  # Set to true to use the android unwinder V2 implementation.
-  use_android_unwinder_v2 = true
-
-  # Whether we should consider the profile we're using to be accurate. Accurate
-  # profiles have the benefit of (potentially substantial) binary size
-  # reductions, by instructing the compiler to optimize cold and uncovered
-  # functions heavily for size. This often comes at the cost of performance.
-  sample_profile_is_accurate = optimize_for_size
-
-  # Use offsets rather than pointers in vtables in order to reduce the number of
-  # relocations. This is safe to enable only when all C++ code is built with the
-  # flag set to the same value.
-  use_relative_vtables_abi = is_android && current_cpu == "arm64" &&
-                             use_custom_libcxx && !is_component_build
 }
 
 assert(!is_cfi || use_thin_lto, "CFI requires ThinLTO")
@@ -164,6 +153,14 @@ if (use_thin_lto && is_debug) {
         " (is_debug=true) build.")
 }
 
+declare_args() {
+  # Whether we should consider the profile we're using to be accurate. Accurate
+  # profiles have the benefit of (potentially substantial) binary size
+  # reductions, by instructing the compiler to optimize cold and uncovered
+  # functions heavily for size. This often comes at the cost of performance.
+  sample_profile_is_accurate = optimize_for_size
+}
+
 # Determine whether to enable or disable frame pointers, based on the platform
 # and build arguments.
 # TODO(crbug.com/1052397): Consider changing is_chromeos_ash to is_chromeos after
diff --git a/third_party/gvr-android-sdk/BUILD.gn b/third_party/gvr-android-sdk/BUILD.gn
index 2a6ded897a953..a3f115929c344 100644
--- a/third_party/gvr-android-sdk/BUILD.gn
+++ b/third_party/gvr-android-sdk/BUILD.gn
@@ -55,12 +55,7 @@ component("gvr_shim") {
   if (enable_chrome_android_internal && !is_official_build) {
     deps = [ "//clank/third_party/gvr_shim" ]
   } else {
-    if (use_relative_vtables_abi) {
-      _vtables = "_vtables"
-    } else {
-      _vtables = ""
-    }
-    library = "//third_party/gvr-android-sdk/libgvr_shim_static_${current_cpu}${_vtables}.a"
+    library = "//third_party/gvr-android-sdk/libgvr_shim_static_${current_cpu}_Cr.a"
     libs += [ library ]
 
     if (libcxx_is_shared) {
diff --git a/third_party/gvr-android-sdk/libgvr_shim_static_arm.a.sha1 b/third_party/gvr-android-sdk/libgvr_shim_static_arm.a.sha1
deleted file mode 100644
index 91e38fb18ffc2..0000000000000
--- a/third_party/gvr-android-sdk/libgvr_shim_static_arm.a.sha1
+++ /dev/null
@@ -1 +0,0 @@
-817acb93424936fbffef3fe76ac3b765de4988a0
\ No newline at end of file
diff --git a/third_party/gvr-android-sdk/libgvr_shim_static_arm64.a.sha1 b/third_party/gvr-android-sdk/libgvr_shim_static_arm64.a.sha1
deleted file mode 100644
index 89d408b1e3b32..0000000000000
--- a/third_party/gvr-android-sdk/libgvr_shim_static_arm64.a.sha1
+++ /dev/null
@@ -1 +0,0 @@
-de8672ff47439c95d8afffd4bd556af547b3ec1c
\ No newline at end of file
diff --git a/third_party/gvr-android-sdk/libgvr_shim_static_arm64_Cr.a.sha1 b/third_party/gvr-android-sdk/libgvr_shim_static_arm64_Cr.a.sha1
new file mode 100644
index 0000000000000..1fa351ccabb0f
--- /dev/null
+++ b/third_party/gvr-android-sdk/libgvr_shim_static_arm64_Cr.a.sha1
@@ -0,0 +1 @@
+46d431c43591953ba29dc62d01eb5a999a0cde0e
\ No newline at end of file
diff --git a/third_party/gvr-android-sdk/libgvr_shim_static_arm64_vtables.a.sha1 b/third_party/gvr-android-sdk/libgvr_shim_static_arm64_vtables.a.sha1
deleted file mode 100644
index 2ee9a03d6d797..0000000000000
--- a/third_party/gvr-android-sdk/libgvr_shim_static_arm64_vtables.a.sha1
+++ /dev/null
@@ -1 +0,0 @@
-a08c3591a536382538758d883b433d6e3914758a
\ No newline at end of file
diff --git a/third_party/gvr-android-sdk/libgvr_shim_static_arm_Cr.a.sha1 b/third_party/gvr-android-sdk/libgvr_shim_static_arm_Cr.a.sha1
new file mode 100644
index 0000000000000..2df24f2dd72b9
--- /dev/null
+++ b/third_party/gvr-android-sdk/libgvr_shim_static_arm_Cr.a.sha1
@@ -0,0 +1 @@
+dfec094416354f624eef6db969a1b65f03cc91ac
\ No newline at end of file
diff --git a/third_party/gvr-android-sdk/libgvr_shim_static_arm_vtables.a.sha1 b/third_party/gvr-android-sdk/libgvr_shim_static_arm_vtables.a.sha1
deleted file mode 100644
index f7cebdb2f82b4..0000000000000
--- a/third_party/gvr-android-sdk/libgvr_shim_static_arm_vtables.a.sha1
+++ /dev/null
@@ -1 +0,0 @@
-cd8523d28b256da836e47e6aae54d16d05a7f1b6
\ No newline at end of file
-- 
2.39.1

