From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: csagan5 <32685696+csagan5@users.noreply.github.com>
Date: Wed, 29 Aug 2018 11:03:44 +0200
Subject: Add custom tab intents privacy option

Add custom tab intents privacy option and force
open external links in incognito flag.

Flags are mutually exclusive.

See also: https://github.com/bromite/bromite/issues/1474

License: GPL-3.0-only - https://spdx.org/licenses/GPL-3.0-only.html
Change-Id: I0707a6083443b02ae6432485eacba224b497b1e3
---
 .../java/res/xml/privacy_preferences.xml      |  10 ++++++++
 .../browser/LaunchIntentDispatcher.java       |  21 +++++++++++++++
 .../customtabs/CustomTabsConnection.java      |   1 +
 .../IncognitoCustomTabIntentDataProvider.java |   6 +++++
 .../privacy/settings/PrivacySettings.java     |  24 ++++++++++++++++++
 .../chrome/browser/tab/TabAssociatedApp.java  |   6 ++++-
 .../strings/android_chrome_strings.grd        | Bin 529047 -> 529968 bytes
 .../core/common/language_experiments.cc       |   1 +
 .../add-custom-tab-intents-privacy-option.inc |   1 +
 9 files changed, 69 insertions(+), 1 deletion(-)
 create mode 100644 cromite_flags/chrome/browser/flags/android/chrome_feature_list_cc/add-custom-tab-intents-privacy-option.inc

diff --git a/chrome/android/java/res/xml/privacy_preferences.xml b/chrome/android/java/res/xml/privacy_preferences.xml
--- a/chrome/android/java/res/xml/privacy_preferences.xml
+++ b/chrome/android/java/res/xml/privacy_preferences.xml
@@ -55,6 +55,16 @@ found in the LICENSE file.
         android:key="do_not_track"
         android:title="@string/do_not_track_title"
         android:fragment="org.chromium.chrome.browser.privacy.settings.DoNotTrackSettings" />
+    <org.chromium.components.browser_ui.settings.ChromeSwitchPreference
+        android:key="allow_custom_tab_intents"
+        android:title="@string/allow_custom_tab_intents_title"
+        android:summary="@string/allow_custom_tab_intents_summary"
+        android:defaultValue="false" />
+    <org.chromium.components.browser_ui.settings.ChromeSwitchPreference
+        android:key="open_external_links_incognito"
+        android:title="@string/open_external_links_incognito_title"
+        android:summary="@string/open_external_links_incognito_summary"
+        android:defaultValue="false" />
     <Preference
         android:key="preload_pages"
         android:title="@string/preload_pages_title"
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/LaunchIntentDispatcher.java b/chrome/android/java/src/org/chromium/chrome/browser/LaunchIntentDispatcher.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/LaunchIntentDispatcher.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/LaunchIntentDispatcher.java
@@ -52,6 +52,9 @@ import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
 import java.util.Set;
 
+import org.chromium.chrome.browser.privacy.settings.PrivacySettings;
+import org.chromium.chrome.browser.tab.TabLaunchType;
+
 /**
  * Dispatches incoming intents to the appropriate activity based on the current configuration and
  * Intent fired.
@@ -239,6 +242,9 @@ public class LaunchIntentDispatcher {
      */
     public static boolean isCustomTabIntent(Intent intent) {
         if (intent == null) return false;
+        if (!ContextUtils.getAppSharedPreferences()
+                .getBoolean(PrivacySettings.PREF_ALLOW_CUSTOM_TAB_INTENTS, false))
+            return false;
         Log.w(
                 TAG,
                 "CustomTabsIntent#shouldAlwaysUseBrowserUI() = "
@@ -260,6 +266,10 @@ public class LaunchIntentDispatcher {
         newIntent.setData(uri);
         newIntent.setClassName(context, CustomTabActivity.class.getName());
 
+        if (ContextUtils.getAppSharedPreferences()
+                .getBoolean(PrivacySettings.PREF_OPEN_EXTERNAL_LINKS_INCOGNITO, false))
+            newIntent.putExtra(IntentHandler.EXTRA_OPEN_NEW_INCOGNITO_TAB, true);
+
         // Since configureIntentForResizableCustomTab() might change the componenet/class
         // associated with the passed intent, it needs to be called after #setClassName(context,
         // CustomTabActivity.class.getName());
@@ -407,6 +417,17 @@ public class LaunchIntentDispatcher {
 
         if (Intent.ACTION_VIEW.equals(newIntent.getAction())
                 && !IntentHandler.wasIntentSenderChrome(newIntent)) {
+
+            if (ContextUtils.getAppSharedPreferences().getBoolean(
+                    PrivacySettings.PREF_OPEN_EXTERNAL_LINKS_INCOGNITO, false)) {
+                Context applicationContext = ContextUtils.getApplicationContext();
+                newIntent = IntentHandler.createTrustedOpenNewTabIntent(applicationContext,
+                    /*incognito*/true);
+                newIntent.setData(mIntent.getData());
+                newIntent.setPackage(applicationContext.getPackageName());
+                IntentHandler.setTabLaunchType(newIntent, TabLaunchType.FROM_EXTERNAL_APP);
+                newIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+            }
             if (!chromeTabbedTaskExists()) {
                 newIntent.putExtra(IntentHandler.EXTRA_STARTED_TABBED_CHROME_TASK, true);
             }
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/customtabs/CustomTabsConnection.java b/chrome/android/java/src/org/chromium/chrome/browser/customtabs/CustomTabsConnection.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/customtabs/CustomTabsConnection.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/customtabs/CustomTabsConnection.java
@@ -867,6 +867,7 @@ public class CustomTabsConnection {
         PostTask.postTask(
                 TaskTraits.UI_DEFAULT,
                 () -> {
+                    if ((true)) return; // Disable CCTPostMessageAPI
                     // Attempt to verify origin synchronously. If successful directly initialize
                     // postMessage channel for session.
                     Uri verifiedOrigin = verifyOriginForSession(session, uid, postMessageOrigin);
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/customtabs/IncognitoCustomTabIntentDataProvider.java b/chrome/android/java/src/org/chromium/chrome/browser/customtabs/IncognitoCustomTabIntentDataProvider.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/customtabs/IncognitoCustomTabIntentDataProvider.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/customtabs/IncognitoCustomTabIntentDataProvider.java
@@ -40,6 +40,9 @@ import org.chromium.components.browser_ui.widget.TintedDrawable;
 import java.util.ArrayList;
 import java.util.List;
 
+import org.chromium.base.ContextUtils;
+import org.chromium.chrome.browser.privacy.settings.PrivacySettings;
+
 /**
  * A model class that parses the incoming intent for incognito and ephemeral Custom Tabs specific
  * customization data.
@@ -130,6 +133,9 @@ public class IncognitoCustomTabIntentDataProvider extends BrowserServicesIntentD
     }
 
     private static boolean isIntentFromThirdPartyAllowed() {
+        if (ContextUtils.getAppSharedPreferences()
+                        .getBoolean(PrivacySettings.PREF_OPEN_EXTERNAL_LINKS_INCOGNITO, false))
+            return true;
         return ChromeFeatureList.sCctIncognitoAvailableToThirdParty.isEnabled();
     }
 
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/privacy/settings/PrivacySettings.java b/chrome/android/java/src/org/chromium/chrome/browser/privacy/settings/PrivacySettings.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/privacy/settings/PrivacySettings.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/privacy/settings/PrivacySettings.java
@@ -95,6 +95,9 @@ public class PrivacySettings extends ChromeBaseSettingsFragment
     private IncognitoLockSettings mIncognitoLockSettings;
     private SettingsLauncher mSettingsLauncher;
 
+    private ChromeSwitchPreference allowCustomTabIntentsPref;
+    private ChromeSwitchPreference openExternalLinksPref;
+
     @Override
     public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
         getActivity().setTitle(R.string.prefs_privacy_security);
@@ -313,6 +316,9 @@ public class PrivacySettings extends ChromeBaseSettingsFragment
                 new SpanApplier.SpanInfo("<link2>", "</link2>", servicesLink));
     }
 
+    public static final String PREF_ALLOW_CUSTOM_TAB_INTENTS = "allow_custom_tab_intents";
+    public static final String PREF_OPEN_EXTERNAL_LINKS_INCOGNITO = "open_external_links_incognito";
+
     @Override
     public boolean onPreferenceChange(Preference preference, Object newValue) {
         String key = preference.getKey();
@@ -325,6 +331,14 @@ public class PrivacySettings extends ChromeBaseSettingsFragment
         } else if (PREF_SEARCH_SUGGESTIONS.equals(key)) {
             UserPrefs.get(getProfile())
                     .setBoolean(Pref.SEARCH_SUGGEST_ENABLED, (boolean) newValue);
+        } else if (PREF_ALLOW_CUSTOM_TAB_INTENTS.equals(key)) {
+            SharedPreferences.Editor sharedPreferencesEditor = ContextUtils.getAppSharedPreferences().edit();
+            sharedPreferencesEditor.putBoolean(PREF_ALLOW_CUSTOM_TAB_INTENTS, (boolean)newValue);
+            sharedPreferencesEditor.apply();
+        } else if (PREF_OPEN_EXTERNAL_LINKS_INCOGNITO.equals(key)) {
+            SharedPreferences.Editor sharedPreferencesEditor = ContextUtils.getAppSharedPreferences().edit();
+            sharedPreferencesEditor.putBoolean(PREF_OPEN_EXTERNAL_LINKS_INCOGNITO, (boolean)newValue);
+            sharedPreferencesEditor.apply();
         }
         return true;
     }
@@ -347,6 +361,16 @@ public class PrivacySettings extends ChromeBaseSettingsFragment
                     UserPrefs.get(getProfile()).getBoolean(Pref.CAN_MAKE_PAYMENT_ENABLED));
         }
 
+        allowCustomTabIntentsPref =
+                (ChromeSwitchPreference) findPreference(PREF_ALLOW_CUSTOM_TAB_INTENTS);
+        allowCustomTabIntentsPref.setOnPreferenceChangeListener(this);
+        allowCustomTabIntentsPref.setManagedPreferenceDelegate(mManagedPreferenceDelegate);
+
+        openExternalLinksPref =
+                (ChromeSwitchPreference) findPreference(PREF_OPEN_EXTERNAL_LINKS_INCOGNITO);
+        openExternalLinksPref.setOnPreferenceChangeListener(this);
+        openExternalLinksPref.setManagedPreferenceDelegate(mManagedPreferenceDelegate);
+
         Preference doNotTrackPref = findPreference(PREF_DO_NOT_TRACK);
         if (doNotTrackPref != null) {
             doNotTrackPref.setSummary(
diff --git a/chrome/browser/tab/java/src/org/chromium/chrome/browser/tab/TabAssociatedApp.java b/chrome/browser/tab/java/src/org/chromium/chrome/browser/tab/TabAssociatedApp.java
--- a/chrome/browser/tab/java/src/org/chromium/chrome/browser/tab/TabAssociatedApp.java
+++ b/chrome/browser/tab/java/src/org/chromium/chrome/browser/tab/TabAssociatedApp.java
@@ -87,7 +87,11 @@ public final class TabAssociatedApp extends TabWebContentsUserData implements Im
     public static boolean isOpenedFromExternalApp(Tab tab) {
         TabAssociatedApp app = get(tab);
         if (app == null) return false;
-
+        if (ContextUtils.getAppSharedPreferences()
+                        .getBoolean("open_external_links_incognito", false) &&
+                tab.isIncognito() &&
+                tab.getLaunchType() == TabLaunchType.FROM_EXTERNAL_APP)
+            return true;
         String packageName = ContextUtils.getApplicationContext().getPackageName();
         return tab.getLaunchType() == TabLaunchType.FROM_EXTERNAL_APP
                 && !TextUtils.equals(app.getAppId(), packageName);
diff --git a/chrome/browser/ui/android/strings/android_chrome_strings.grd b/chrome/browser/ui/android/strings/android_chrome_strings.grd
GIT binary patch
delta 667
zcmbQfRAIv!g@zW!7N!>F7M2#)Eo{Me#T|2U^2-&HON&eLa}`PwlN2)ZN>cMmraPK3
z%1@R{XBP|&4)OPm4{>yg_w);K^$Q7}{&qIIcz`+%jm7E;#i=DFnR)5Ox&=j<Wr@j^
z3i$;knfZBoN_JcdP=Kj<I{$lCqsj8=Y*;Kj$iyU3Uy@o;qL7wfq(BXu6AKD*GLsWQ
z&MH<Y$p^YHH4ifoiggr<GjlU@5{nc{So0OiQ<J9O_hy$<QPkB{@CWH|ttd$?%1g{q
z@X5@}E(Qjjf@fZGetKSJN&aNP#d6cvD=@M0xkiMz2KhPq#QS*qc?VBF=)fd7{m*Q6
zjyQF&89;AA%*cV6kqI+{sG!7U$aDusCS$M*cu`z1eH#;#GE!*b(od2j-13W(Qx!@w
kQo$h!jC_UsG=;>R90eS{o8HOFq}1+zmu<WMU3L#s0I^Zy`Tzg`

delta 31
ncmdn6Mq&C=g@zW!7N!>F7M2#)Eo{Me+uuB3+y3SOyNf9R%=isL

diff --git a/components/language/core/common/language_experiments.cc b/components/language/core/common/language_experiments.cc
--- a/components/language/core/common/language_experiments.cc
+++ b/components/language/core/common/language_experiments.cc
@@ -24,4 +24,5 @@ BASE_FEATURE(kCctAutoTranslate,
 // Params:
 const char kContentLanguagesDisableObserversParam[] = "disable_observers";
 
+SET_CROMITE_FEATURE_DISABLED(kCctAutoTranslate);
 }  // namespace language
diff --git a/cromite_flags/chrome/browser/flags/android/chrome_feature_list_cc/add-custom-tab-intents-privacy-option.inc b/cromite_flags/chrome/browser/flags/android/chrome_feature_list_cc/add-custom-tab-intents-privacy-option.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/chrome/browser/flags/android/chrome_feature_list_cc/add-custom-tab-intents-privacy-option.inc
@@ -0,0 +1 @@
+SET_CROMITE_FEATURE_DISABLED(kCCTIntentFeatureOverrides);
-- 
2.39.2

