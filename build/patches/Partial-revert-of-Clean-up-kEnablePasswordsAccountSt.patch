From: Tommy Webb <tommy@calyxinstitute.org>
Date: Mon, 13 Jan 2025 17:59:52 +0000
Subject: Partial revert of "Clean up
 kEnablePasswordsAccountStorageForNonSyncingUsers in src/"

Needed to prevent saved passwords from being wiped on upgrade to M132.

This reverts commit b9763794cea3000ac35a8065d03267db5b0d51c4.

Issue: uazo/cromite#1735
Change-Id: Id8bd966c2c54741069e3916249e5358bf54c21b2
---
 .../sync/IdentityErrorCardPreferenceTest.java |  1 +
 .../browser/sync/ManageSyncSettingsTest.java  |  5 ++-
 .../BookmarkManagerCoordinatorTest.java       |  1 +
 chrome/browser/about_flags.cc                 |  2 ++
 .../flags/android/chrome_feature_list.cc      |  1 +
 .../browser/flags/ChromeFeatureList.java      |  2 ++
 .../AccountStorageNoticeCoordinator.java      |  5 ++-
 ...orageNoticeCoordinatorIntegrationTest.java |  3 ++
 ...countStorageNoticeCoordinatorUnitTest.java | 21 +++++++++++++
 ...d_manager_settings_service_android_impl.cc |  7 +++--
 .../sync/test/integration/sync_test.cc        |  3 +-
 .../signin/java/res/layout/signin_view.xml    |  2 +-
 .../java/res/layout/sync_promo_view.xml       |  2 +-
 .../chrome/browser/ui/signin/SigninView.java  |  5 +++
 .../ui/signin/SyncConsentFragmentBase.java    |  8 ++++-
 .../ui/signin/SyncPromoController.java        |  9 +++++-
 .../strings/android_chrome_strings.grd        |  6 ++++
 .../IDS_SIGNIN_SYNC_TITLE.png.sha1            |  1 +
 ...S_SYNC_PROMO_DESCRIPTION_SETTINGS.png.sha1 |  1 +
 .../password_manager_features_util_common.cc  |  8 +++++
 ...password_manager_features_util_unittest.cc | 31 ++++++++++++++++---
 .../password_feature_manager_impl_unittest.cc |  2 ++
 ...password_receiver_service_impl_unittest.cc |  2 ++
 .../store_metrics_reporter_unittest.cc        |  6 ++--
 components/sync/base/features.cc              |  4 +++
 components/sync/base/features.h               |  8 +++++
 components/sync/service/sync_prefs.cc         | 10 +++++-
 .../sync/service/sync_prefs_unittest.cc       |  6 ++++
 .../sync_user_settings_impl_unittest.cc       |  1 +
 29 files changed, 147 insertions(+), 16 deletions(-)
 create mode 100644 chrome/browser/ui/android/strings/android_chrome_strings_grd/IDS_SIGNIN_SYNC_TITLE.png.sha1
 create mode 100644 chrome/browser/ui/android/strings/android_chrome_strings_grd/IDS_SYNC_PROMO_DESCRIPTION_SETTINGS.png.sha1

diff --git a/chrome/android/javatests/src/org/chromium/chrome/browser/sync/IdentityErrorCardPreferenceTest.java b/chrome/android/javatests/src/org/chromium/chrome/browser/sync/IdentityErrorCardPreferenceTest.java
--- a/chrome/android/javatests/src/org/chromium/chrome/browser/sync/IdentityErrorCardPreferenceTest.java
+++ b/chrome/android/javatests/src/org/chromium/chrome/browser/sync/IdentityErrorCardPreferenceTest.java
@@ -233,6 +233,7 @@ public class IdentityErrorCardPreferenceTest {
     @Test
     @LargeTest
     @Feature("RenderTest")
+    @EnableFeatures({ChromeFeatureList.ENABLE_PASSWORDS_ACCOUNT_STORAGE_FOR_NON_SYNCING_USERS})
     public void testIdentityErrorCardForUpmBackendOutdated() throws Exception {
         when(mPasswordManagerUtilBridgeJniMock.isGmsCoreUpdateRequired(any(), any()))
                 .thenReturn(true);
diff --git a/chrome/android/javatests/src/org/chromium/chrome/browser/sync/ManageSyncSettingsTest.java b/chrome/android/javatests/src/org/chromium/chrome/browser/sync/ManageSyncSettingsTest.java
--- a/chrome/android/javatests/src/org/chromium/chrome/browser/sync/ManageSyncSettingsTest.java
+++ b/chrome/android/javatests/src/org/chromium/chrome/browser/sync/ManageSyncSettingsTest.java
@@ -286,7 +286,6 @@ public class ManageSyncSettingsTest {
                 new HashSet<>(
                         Arrays.asList(
                                 ManageSyncSettings.PREF_ACCOUNT_SECTION_PAYMENTS_TOGGLE,
-                                ManageSyncSettings.PREF_ACCOUNT_SECTION_PASSWORDS_TOGGLE,
                                 ManageSyncSettings.PREF_ACCOUNT_SECTION_SETTINGS_TOGGLE));
         if (SyncFeatureMap.isEnabled(SyncFeatureMap.SYNC_ENABLE_BOOKMARKS_IN_TRANSPORT_MODE)) {
             expectedEnabledTypes.add(ManageSyncSettings.PREF_ACCOUNT_SECTION_BOOKMARKS_TOGGLE);
@@ -295,6 +294,10 @@ public class ManageSyncSettingsTest {
                 ChromeFeatureList.READING_LIST_ENABLE_SYNC_TRANSPORT_MODE_UPON_SIGNIN)) {
             expectedEnabledTypes.add(ManageSyncSettings.PREF_ACCOUNT_SECTION_READING_LIST_TOGGLE);
         }
+        if (ChromeFeatureList.isEnabled(
+                ChromeFeatureList.ENABLE_PASSWORDS_ACCOUNT_STORAGE_FOR_NON_SYNCING_USERS)) {
+            expectedEnabledTypes.add(ManageSyncSettings.PREF_ACCOUNT_SECTION_PASSWORDS_TOGGLE);
+        }
         if (ChromeFeatureList.isEnabled(
                 ChromeFeatureList.SYNC_ENABLE_CONTACT_INFO_DATA_TYPE_IN_TRANSPORT_MODE)) {
             expectedEnabledTypes.add(ManageSyncSettings.PREF_ACCOUNT_SECTION_ADDRESSES_TOGGLE);
diff --git a/chrome/android/junit/src/org/chromium/chrome/browser/bookmarks/BookmarkManagerCoordinatorTest.java b/chrome/android/junit/src/org/chromium/chrome/browser/bookmarks/BookmarkManagerCoordinatorTest.java
--- a/chrome/android/junit/src/org/chromium/chrome/browser/bookmarks/BookmarkManagerCoordinatorTest.java
+++ b/chrome/android/junit/src/org/chromium/chrome/browser/bookmarks/BookmarkManagerCoordinatorTest.java
@@ -61,6 +61,7 @@ import org.chromium.ui.base.TestActivity;
 })
 @EnableFeatures({
     SyncFeatureMap.SYNC_ENABLE_BOOKMARKS_IN_TRANSPORT_MODE,
+    ChromeFeatureList.ENABLE_PASSWORDS_ACCOUNT_STORAGE_FOR_NON_SYNCING_USERS,
     ChromeFeatureList.REPLACE_SYNC_PROMOS_WITH_SIGN_IN_PROMOS
 })
 // TODO(crbug.com/327387704): Add tests with this flag enabled.
diff --git a/chrome/browser/about_flags.cc b/chrome/browser/about_flags.cc
--- a/chrome/browser/about_flags.cc
+++ b/chrome/browser/about_flags.cc
@@ -3642,6 +3642,7 @@ const char kReplaceSyncPromosWithSignInPromosFeatures[] =
     "SyncEnableContactInfoDataTypeForCustomPassphraseUsers,"
     "SyncEnableWalletMetadataInTransportMode,"
     "SyncEnableWalletOfferInTransportMode,"
+    "EnablePasswordsAccountStorageForNonSyncingUsers,"
     "HideSettingsSignInPromo,"
     "EnableBatchUploadFromSettings";
 
@@ -3653,6 +3654,7 @@ const char kFastFollowFeatures[] =
     "SyncEnableContactInfoDataTypeForCustomPassphraseUsers,"
     "SyncEnableWalletMetadataInTransportMode,"
     "SyncEnableWalletOfferInTransportMode,"
+    "EnablePasswordsAccountStorageForNonSyncingUsers,"
     "HideSettingsSignInPromo,"
     "EnableBatchUploadFromSettings,"
     "UnoPhase2FollowUp";
diff --git a/chrome/browser/flags/android/chrome_feature_list.cc b/chrome/browser/flags/android/chrome_feature_list.cc
--- a/chrome/browser/flags/android/chrome_feature_list.cc
+++ b/chrome/browser/flags/android/chrome_feature_list.cc
@@ -390,6 +390,7 @@ const base::Feature* const kFeaturesExposedToJava[] = {
     &switches::kForceDisableExtendedSyncPromos,
     &sync_sessions::kOptimizeAssociateWindowsAndroid,
     &syncer::kEnableBatchUploadFromSettings,
+    &syncer::kEnablePasswordsAccountStorageForNonSyncingUsers,
     &syncer::kReadingListEnableSyncTransportModeUponSignIn,
     &syncer::kReplaceSyncPromosWithSignInPromos,
     &syncer::kSyncEnableContactInfoDataTypeInTransportMode,
diff --git a/chrome/browser/flags/android/java/src/org/chromium/chrome/browser/flags/ChromeFeatureList.java b/chrome/browser/flags/android/java/src/org/chromium/chrome/browser/flags/ChromeFeatureList.java
--- a/chrome/browser/flags/android/java/src/org/chromium/chrome/browser/flags/ChromeFeatureList.java
+++ b/chrome/browser/flags/android/java/src/org/chromium/chrome/browser/flags/ChromeFeatureList.java
@@ -323,6 +323,8 @@ public abstract class ChromeFeatureList {
     public static final String EDUCATIONAL_TIP_MODULE = "EducationalTipModule";
     public static final String ENABLE_DISCOUNT_INFO_API = "EnableDiscountInfoApi";
     public static final String ESB_AI_STRING_UPDATE = "EsbAiStringUpdate";
+    public static final String ENABLE_PASSWORDS_ACCOUNT_STORAGE_FOR_NON_SYNCING_USERS =
+            "EnablePasswordsAccountStorageForNonSyncingUsers";
     public static final String FEED_CONTAINMENT = "FeedContainment";
     public static final String FEED_FOLLOW_UI_UPDATE = "FeedFollowUiUpdate";
     public static final String FEED_IMAGE_MEMORY_CACHE_SIZE_PERCENTAGE =
diff --git a/chrome/browser/password_manager/android/account_storage_notice/java/src/org/chromium/chrome/browser/password_manager/account_storage_notice/AccountStorageNoticeCoordinator.java b/chrome/browser/password_manager/android/account_storage_notice/java/src/org/chromium/chrome/browser/password_manager/account_storage_notice/AccountStorageNoticeCoordinator.java
--- a/chrome/browser/password_manager/android/account_storage_notice/java/src/org/chromium/chrome/browser/password_manager/account_storage_notice/AccountStorageNoticeCoordinator.java
+++ b/chrome/browser/password_manager/android/account_storage_notice/java/src/org/chromium/chrome/browser/password_manager/account_storage_notice/AccountStorageNoticeCoordinator.java
@@ -17,6 +17,7 @@ import org.jni_zero.CalledByNative;
 import org.jni_zero.NativeMethods;
 
 import org.chromium.base.metrics.RecordHistogram;
+import org.chromium.chrome.browser.flags.ChromeFeatureList;
 import org.chromium.chrome.browser.password_manager.account_storage_toggle.AccountStorageToggleFragmentArgs;
 import org.chromium.chrome.browser.preferences.Pref;
 import org.chromium.chrome.browser.settings.SettingsNavigationFactory;
@@ -87,7 +88,9 @@ class AccountStorageNoticeCoordinator extends EmptyBottomSheetObserver {
                 && !prefService.getBoolean(Pref.ACCOUNT_STORAGE_NOTICE_SHOWN)
                 && windowAndroid != null
                 && BottomSheetControllerProvider.from(windowAndroid) != null
-                && windowAndroid.getContext().get() != null;
+                && windowAndroid.getContext().get() != null
+                && ChromeFeatureList.isEnabled(
+                        ChromeFeatureList.ENABLE_PASSWORDS_ACCOUNT_STORAGE_FOR_NON_SYNCING_USERS);
     }
 
     @CalledByNative
diff --git a/chrome/browser/password_manager/android/account_storage_notice/javatests/src/org/chromium/chrome/browser/password_manager/account_storage_notice/AccountStorageNoticeCoordinatorIntegrationTest.java b/chrome/browser/password_manager/android/account_storage_notice/javatests/src/org/chromium/chrome/browser/password_manager/account_storage_notice/AccountStorageNoticeCoordinatorIntegrationTest.java
--- a/chrome/browser/password_manager/android/account_storage_notice/javatests/src/org/chromium/chrome/browser/password_manager/account_storage_notice/AccountStorageNoticeCoordinatorIntegrationTest.java
+++ b/chrome/browser/password_manager/android/account_storage_notice/javatests/src/org/chromium/chrome/browser/password_manager/account_storage_notice/AccountStorageNoticeCoordinatorIntegrationTest.java
@@ -33,8 +33,10 @@ import org.chromium.base.test.util.Batch;
 import org.chromium.base.test.util.CommandLineFlags;
 import org.chromium.base.test.util.CriteriaHelper;
 import org.chromium.base.test.util.Feature;
+import org.chromium.base.test.util.Features.EnableFeatures;
 import org.chromium.base.test.util.HistogramWatcher;
 import org.chromium.base.test.util.JniMocker;
+import org.chromium.chrome.browser.flags.ChromeFeatureList;
 import org.chromium.chrome.browser.flags.ChromeSwitches;
 import org.chromium.chrome.browser.password_manager.account_storage_notice.AccountStorageNoticeCoordinator.CloseReason;
 import org.chromium.chrome.browser.preferences.Pref;
@@ -58,6 +60,7 @@ import java.io.IOException;
 @Batch(Batch.PER_CLASS)
 @CommandLineFlags.Add(ChromeSwitches.DISABLE_FIRST_RUN_EXPERIENCE)
 @RunWith(ChromeJUnit4ClassRunner.class)
+@EnableFeatures(ChromeFeatureList.ENABLE_PASSWORDS_ACCOUNT_STORAGE_FOR_NON_SYNCING_USERS)
 public class AccountStorageNoticeCoordinatorIntegrationTest {
     @Rule public ChromeTabbedActivityTestRule mActivityRule = new ChromeTabbedActivityTestRule();
 
diff --git a/chrome/browser/password_manager/android/account_storage_notice/junit/src/org/chromium/chrome/browser/password_manager/account_storage_notice/AccountStorageNoticeCoordinatorUnitTest.java b/chrome/browser/password_manager/android/account_storage_notice/junit/src/org/chromium/chrome/browser/password_manager/account_storage_notice/AccountStorageNoticeCoordinatorUnitTest.java
--- a/chrome/browser/password_manager/android/account_storage_notice/junit/src/org/chromium/chrome/browser/password_manager/account_storage_notice/AccountStorageNoticeCoordinatorUnitTest.java
+++ b/chrome/browser/password_manager/android/account_storage_notice/junit/src/org/chromium/chrome/browser/password_manager/account_storage_notice/AccountStorageNoticeCoordinatorUnitTest.java
@@ -25,6 +25,9 @@ import org.robolectric.annotation.Implementation;
 import org.robolectric.annotation.Implements;
 
 import org.chromium.base.test.BaseRobolectricTestRunner;
+import org.chromium.base.test.util.Features.DisableFeatures;
+import org.chromium.base.test.util.Features.EnableFeatures;
+import org.chromium.chrome.browser.flags.ChromeFeatureList;
 import org.chromium.chrome.browser.preferences.Pref;
 import org.chromium.components.browser_ui.bottomsheet.BottomSheetController;
 import org.chromium.components.browser_ui.bottomsheet.BottomSheetControllerProvider;
@@ -43,6 +46,7 @@ import java.lang.ref.WeakReference;
         shadows = {
             AccountStorageNoticeCoordinatorUnitTest.ShadowBottomSheetControllerProvider.class
         })
+@EnableFeatures(ChromeFeatureList.ENABLE_PASSWORDS_ACCOUNT_STORAGE_FOR_NON_SYNCING_USERS)
 public class AccountStorageNoticeCoordinatorUnitTest {
     @Implements(BottomSheetControllerProvider.class)
     public static class ShadowBottomSheetControllerProvider {
@@ -135,6 +139,23 @@ public class AccountStorageNoticeCoordinatorUnitTest {
         Assert.assertFalse(canShow);
     }
 
+    @Test
+    @SmallTest
+    @DisableFeatures(ChromeFeatureList.ENABLE_PASSWORDS_ACCOUNT_STORAGE_FOR_NON_SYNCING_USERS)
+    public void testShouldNotCreateIfFlagDisabled() {
+        when(mPrefService.getBoolean(Pref.ACCOUNT_STORAGE_NOTICE_SHOWN)).thenReturn(false);
+
+        boolean canShow =
+                AccountStorageNoticeCoordinator.canShow(
+                        /* hasSyncConsent= */ false,
+                        /* hasChosenToSyncPasswords= */ true,
+                        /* isGmsCoreUpdateRequired= */ false,
+                        mPrefService,
+                        mWindowAndroid);
+
+        Assert.assertFalse(canShow);
+    }
+
     @Test
     @SmallTest
     public void testShouldNotCreateIfNoWindowAndroid() {
diff --git a/chrome/browser/password_manager/android/password_manager_settings_service_android_impl.cc b/chrome/browser/password_manager/android/password_manager_settings_service_android_impl.cc
--- a/chrome/browser/password_manager/android/password_manager_settings_service_android_impl.cc
+++ b/chrome/browser/password_manager/android/password_manager_settings_service_android_impl.cc
@@ -504,8 +504,11 @@ void PasswordManagerSettingsServiceAndroidImpl::FetchSettings() {
     // account has just signed out. So the account can't be queried via
     // `sync_service_->GetAccountInfo().email` but instead needs to be retrieved
     // via kGoogleServices*Last*SignedInUsername.
-    std::string last_account_pref =
-        pref_service_->GetString(prefs::kGoogleServicesLastSignedInUsername);
+    std::string last_account_pref = pref_service_->GetString(
+        base::FeatureList::IsEnabled(
+            syncer::kEnablePasswordsAccountStorageForNonSyncingUsers)
+            ? prefs::kGoogleServicesLastSignedInUsername
+            : prefs::kGoogleServicesLastSyncingUsername);
     account = SyncingAccount(last_account_pref);
   }
   for (PasswordManagerSetting setting : GetAllPasswordSettings()) {
diff --git a/chrome/browser/sync/test/integration/sync_test.cc b/chrome/browser/sync/test/integration/sync_test.cc
--- a/chrome/browser/sync/test/integration/sync_test.cc
+++ b/chrome/browser/sync/test/integration/sync_test.cc
@@ -1125,7 +1125,8 @@ syncer::DataTypeSet AllowedTypesInStandaloneTransportMode() {
     allowed_types.Put(syncer::AUTOFILL_WALLET_OFFER);
   }
 
-  bool allow_passwords = true;
+  bool allow_passwords = base::FeatureList::IsEnabled(
+      syncer::kEnablePasswordsAccountStorageForNonSyncingUsers);
 #if !BUILDFLAG(IS_ANDROID)
   // This is an approximation because passwords are only enabled if the signin
   // is explicit (they are not enabled for users who signed in through Dice).
diff --git a/chrome/browser/ui/android/signin/java/res/layout/signin_view.xml b/chrome/browser/ui/android/signin/java/res/layout/signin_view.xml
--- a/chrome/browser/ui/android/signin/java/res/layout/signin_view.xml
+++ b/chrome/browser/ui/android/signin/java/res/layout/signin_view.xml
@@ -83,7 +83,7 @@ found in the LICENSE file.
                 android:layout_marginTop="16dp"
                 android:layout_marginEnd="16dp"
                 android:textAppearance="@style/TextAppearance.TextLarge.Primary"
-                tools:text="@string/signin_sync_title_without_passwords"/>
+                tools:text="@string/signin_sync_title"/>
             <TextView
                 android:id="@+id/signin_sync_description"
                 android:layout_width="match_parent"
diff --git a/chrome/browser/ui/android/signin/java/res/layout/sync_promo_view.xml b/chrome/browser/ui/android/signin/java/res/layout/sync_promo_view.xml
--- a/chrome/browser/ui/android/signin/java/res/layout/sync_promo_view.xml
+++ b/chrome/browser/ui/android/signin/java/res/layout/sync_promo_view.xml
@@ -76,7 +76,7 @@ found in the LICENSE file.
             android:lineSpacingMultiplier="1.25"
             android:textAppearance="@style/TextAppearance.TextSmall.Secondary"
             android:includeFontPadding="false"
-            tools:text="@string/sync_promo_description_settings_without_passwords"/>
+            tools:text="@string/sync_promo_description_settings"/>
 
         <org.chromium.ui.widget.ButtonCompat
             android:id="@+id/sync_promo_signin_button"
diff --git a/chrome/browser/ui/android/signin/java/src/org/chromium/chrome/browser/ui/signin/SigninView.java b/chrome/browser/ui/android/signin/java/src/org/chromium/chrome/browser/ui/signin/SigninView.java
--- a/chrome/browser/ui/android/signin/java/src/org/chromium/chrome/browser/ui/signin/SigninView.java
+++ b/chrome/browser/ui/android/signin/java/src/org/chromium/chrome/browser/ui/signin/SigninView.java
@@ -17,6 +17,7 @@ import android.widget.TextView;
 import androidx.annotation.Nullable;
 import androidx.appcompat.content.res.AppCompatResources;
 
+import org.chromium.chrome.browser.flags.ChromeFeatureList;
 import org.chromium.chrome.browser.ui.signin.MinorModeHelper.ScreenMode;
 import org.chromium.components.browser_ui.widget.DualControlLayout;
 import org.chromium.components.signin.metrics.SyncButtonClicked;
@@ -70,6 +71,10 @@ class SigninView extends LinearLayout {
         mAccountTextSecondary = findViewById(R.id.account_text_secondary);
         mAccountPickerEndImage = findViewById(R.id.account_picker_end_image);
         mSyncTitle = findViewById(R.id.signin_sync_title);
+        if (ChromeFeatureList.isEnabled(
+                ChromeFeatureList.ENABLE_PASSWORDS_ACCOUNT_STORAGE_FOR_NON_SYNCING_USERS)) {
+            mSyncTitle.setText(R.string.signin_sync_title_without_passwords);
+        }
         mSyncDescription = findViewById(R.id.signin_sync_description);
         mDetailsDescription = findViewById(R.id.signin_details_description);
         mMoreButton = findViewById(R.id.more_button);
diff --git a/chrome/browser/ui/android/signin/java/src/org/chromium/chrome/browser/ui/signin/SyncConsentFragmentBase.java b/chrome/browser/ui/android/signin/java/src/org/chromium/chrome/browser/ui/signin/SyncConsentFragmentBase.java
--- a/chrome/browser/ui/android/signin/java/src/org/chromium/chrome/browser/ui/signin/SyncConsentFragmentBase.java
+++ b/chrome/browser/ui/android/signin/java/src/org/chromium/chrome/browser/ui/signin/SyncConsentFragmentBase.java
@@ -27,6 +27,7 @@ import androidx.lifecycle.Lifecycle;
 
 import org.chromium.base.metrics.RecordUserAction;
 import org.chromium.chrome.browser.consent_auditor.ConsentAuditorFeature;
+import org.chromium.chrome.browser.flags.ChromeFeatureList;
 import org.chromium.chrome.browser.preferences.Pref;
 import org.chromium.chrome.browser.profiles.Profile;
 import org.chromium.chrome.browser.signin.services.DisplayableProfileData;
@@ -578,7 +579,12 @@ public abstract class SyncConsentFragmentBase extends Fragment
         mConsentTextTracker.setText(mSigninView.getTitleView(), R.string.signin_title);
 
         mConsentTextTracker.setText(
-                mSigninView.getSyncTitleView(), R.string.signin_sync_title_without_passwords);
+                mSigninView.getSyncTitleView(),
+                ChromeFeatureList.isEnabled(
+                                ChromeFeatureList
+                                        .ENABLE_PASSWORDS_ACCOUNT_STORAGE_FOR_NON_SYNCING_USERS)
+                        ? R.string.signin_sync_title_without_passwords
+                        : R.string.signin_sync_title);
         mConsentTextTracker.setText(
                 mSigninView.getSyncDescriptionView(), R.string.signin_sync_description);
 
diff --git a/chrome/browser/ui/android/signin/java/src/org/chromium/chrome/browser/ui/signin/SyncPromoController.java b/chrome/browser/ui/android/signin/java/src/org/chromium/chrome/browser/ui/signin/SyncPromoController.java
--- a/chrome/browser/ui/android/signin/java/src/org/chromium/chrome/browser/ui/signin/SyncPromoController.java
+++ b/chrome/browser/ui/android/signin/java/src/org/chromium/chrome/browser/ui/signin/SyncPromoController.java
@@ -313,7 +313,14 @@ public class SyncPromoController {
                 mSyncPromoDismissedPreferenceTracker =
                         ChromePreferenceKeys.SIGNIN_PROMO_SETTINGS_PERSONALIZED_DISMISSED;
                 mTitleStringId = R.string.sync_promo_title_settings;
-                mDescriptionStringId = R.string.sync_promo_description_settings_without_passwords;
+                boolean isAccountStorageEnabled =
+                        ChromeFeatureList.isEnabled(
+                                ChromeFeatureList
+                                        .ENABLE_PASSWORDS_ACCOUNT_STORAGE_FOR_NON_SYNCING_USERS);
+                mDescriptionStringId =
+                        isAccountStorageEnabled
+                                ? R.string.sync_promo_description_settings_without_passwords
+                                : R.string.sync_promo_description_settings;
                 mShouldSuppressSecondaryButton = false;
                 mHistoryOptInMode = HistorySyncConfig.OptInMode.NONE;
                 // TODO(b/332704829): Move delegate creation outside of this constructor.
diff --git a/chrome/browser/ui/android/strings/android_chrome_strings.grd b/chrome/browser/ui/android/strings/android_chrome_strings.grd
--- a/chrome/browser/ui/android/strings/android_chrome_strings.grd
+++ b/chrome/browser/ui/android/strings/android_chrome_strings.grd
@@ -3815,6 +3815,9 @@ To change this setting, <ph name="BEGIN_LINK">BEGIN_LINK</ph>delete the Chrome d
       <message name="IDS_HISTORY_SYNC_SUBTITLE" desc="Text of a page that asks users to start syncing their tabs and browsing history, so they can get back to sites they visited more quickly without having to type them, for example by seeing these sites suggested in the Omnibox.">
         To quickly get back to sites you’ve visited, sync your tabs and history
       </message>
+      <message name="IDS_SIGNIN_SYNC_TITLE" desc="Title of Sync feature for the screen that asks users to sign-in and turn on Sync.">
+        Sync your passwords, history &amp; more on all devices
+      </message>
       <message name="IDS_SIGNIN_SYNC_TITLE_WITHOUT_PASSWORDS" desc="Same as IDS_SIGNIN_SYNC_TITLE but without mentioning passwords. Title of Sync feature for the screen that asks users to sign-in and turn on Sync.">
         Sync your bookmarks, history &amp; more on all devices
       </message>
@@ -3970,6 +3973,9 @@ To change this setting, <ph name="BEGIN_LINK">BEGIN_LINK</ph>delete the Chrome d
       <message name="IDS_SYNC_PROMO_TITLE_SETTINGS" desc="This string is the headline of a card that appears when the user opens Chrome's settings; the user may be signed in to Chrome, but isn't syncing their Chrome data. The line below this string is 'Sync to get your passwords, bookmarks and more on all your devices'. [CHAR_LIMIT=70]" meaning="This headline means that the user can use Chrome more easily by syncing their passwords, bookmarks, settings, and more.. We want users to read this card and tap the 'Continue' button and turn on sync. The tone should be inviting.">
         Use Chrome your way
       </message>
+      <message name="IDS_SYNC_PROMO_DESCRIPTION_SETTINGS" desc="This string is the body of a card that appears when the user opens Chrome's settings; the user may be signed in to Chrome, but isn't syncing their Chrome data. The headline above this string is 'Browse more easily'. There's no character limit but try to keep the translation under 120 characters." meaning="This message means that the user can use Chrome more easily by syncing their passwords, bookmarks, settings, and more.. We want users to read this card and tap the 'Continue' button and turn on sync. The tone should be inviting.">
+        Sync to get your passwords, bookmarks and more on your other devices
+      </message>
       <message name="IDS_SYNC_PROMO_DESCRIPTION_SETTINGS_WITHOUT_PASSWORDS" desc="Same as IDS_SYNC_PROMO_DESCRIPTION_SETTINGS but without mentioning passwords. This string is the body of a card that appears when the user opens Chrome's settings; the user may be signed in to Chrome, but isn't syncing their Chrome data. The headline above this string is 'Browse more easily'. There's no character limit but try to keep the translation under 120 characters." meaning="This message means that the user can use Chrome more easily by syncing their passwords, bookmarks, settings, and more.. We want users to read this card and tap the 'Continue' button and turn on sync. The tone should be inviting.">
         Sync to get your bookmarks, history and more on your other devices
       </message>
diff --git a/chrome/browser/ui/android/strings/android_chrome_strings_grd/IDS_SIGNIN_SYNC_TITLE.png.sha1 b/chrome/browser/ui/android/strings/android_chrome_strings_grd/IDS_SIGNIN_SYNC_TITLE.png.sha1
new file mode 100644
--- /dev/null
+++ b/chrome/browser/ui/android/strings/android_chrome_strings_grd/IDS_SIGNIN_SYNC_TITLE.png.sha1
@@ -0,0 +1 @@
+67e09901a6e663a7d8b931c7ba6ac19d301e22c3
\ No newline at end of file
diff --git a/chrome/browser/ui/android/strings/android_chrome_strings_grd/IDS_SYNC_PROMO_DESCRIPTION_SETTINGS.png.sha1 b/chrome/browser/ui/android/strings/android_chrome_strings_grd/IDS_SYNC_PROMO_DESCRIPTION_SETTINGS.png.sha1
new file mode 100644
--- /dev/null
+++ b/chrome/browser/ui/android/strings/android_chrome_strings_grd/IDS_SYNC_PROMO_DESCRIPTION_SETTINGS.png.sha1
@@ -0,0 +1 @@
+6ecaf0e451c39f4330ff1535c529d0f7d32d6476
\ No newline at end of file
diff --git a/components/password_manager/core/browser/features/password_manager_features_util_common.cc b/components/password_manager/core/browser/features/password_manager_features_util_common.cc
--- a/components/password_manager/core/browser/features/password_manager_features_util_common.cc
+++ b/components/password_manager/core/browser/features/password_manager_features_util_common.cc
@@ -61,11 +61,19 @@ bool IsUserEligibleForAccountStorage(const PrefService* pref_service,
 
   // TODO(crbug.com/40067058): Delete this when ConsentLevel::kSync is deleted.
   // See ConsentLevel::kSync documentation for details.
+  // Eligibility for account storage is controlled by separate flags for syncing
+  // and non-syncing users. Enabling the flag is a necessary condition but not
+  // sufficient, other checks follow below.
   if (sync_service->IsSyncFeatureEnabled()) {
     if (!base::FeatureList::IsEnabled(
             syncer::kEnablePasswordsAccountStorageForSyncingUsers)) {
       return false;
     }
+  } else {
+    if (!base::FeatureList::IsEnabled(
+            syncer::kEnablePasswordsAccountStorageForNonSyncingUsers)) {
+      return false;
+    }
   }
 
   switch (sync_service->GetTransportState()) {
diff --git a/components/password_manager/core/browser/features/password_manager_features_util_unittest.cc b/components/password_manager/core/browser/features/password_manager_features_util_unittest.cc
--- a/components/password_manager/core/browser/features/password_manager_features_util_unittest.cc
+++ b/components/password_manager/core/browser/features/password_manager_features_util_unittest.cc
@@ -65,8 +65,11 @@ class PasswordManagerFeaturesUtilWithAccountStorageForNonSyncingTest
     : public PasswordManagerFeaturesUtilTestBase {
  public:
   PasswordManagerFeaturesUtilWithAccountStorageForNonSyncingTest() {
-    feature_list_.InitAndDisableFeature(
-        syncer::kEnablePasswordsAccountStorageForSyncingUsers);
+    feature_list_.InitWithFeatures(
+        /*enabled_features=*/
+        {syncer::kEnablePasswordsAccountStorageForNonSyncingUsers},
+        /*disabled_features=*/{
+            syncer::kEnablePasswordsAccountStorageForSyncingUsers});
 #if BUILDFLAG(IS_ANDROID)
     pref_service_.registry()->RegisterIntegerPref(
         prefs::kPasswordsUseUPMLocalAndSeparateStores,
@@ -89,8 +92,11 @@ class PasswordManagerFeaturesUtilWithAccountStorageForSyncingUsersTest
     : public PasswordManagerFeaturesUtilTestBase {
  public:
   PasswordManagerFeaturesUtilWithAccountStorageForSyncingUsersTest() {
-    feature_list_.InitAndEnableFeature(
-        syncer::kEnablePasswordsAccountStorageForSyncingUsers);
+    feature_list_.InitWithFeatures(
+        /*enabled_features=*/
+        {syncer::kEnablePasswordsAccountStorageForSyncingUsers},
+        /*disabled_features=*/{
+            syncer::kEnablePasswordsAccountStorageForNonSyncingUsers});
 #if BUILDFLAG(IS_ANDROID)
     pref_service_.registry()->RegisterIntegerPref(
         prefs::kPasswordsUseUPMLocalAndSeparateStores,
@@ -551,4 +557,21 @@ TEST_F(PasswordManagerFeaturesUtilWithAccountStorageForSyncingUsersTest,
   EXPECT_FALSE(IsOptedInForAccountStorage(&pref_service_, &sync_service_));
 }
 
+TEST_F(PasswordManagerFeaturesUtilWithAccountStorageForSyncingUsersTest,
+       OptedOutIfNonSyncing) {
+  sync_service_.SetSignedOut();
+
+  EXPECT_FALSE(IsOptedInForAccountStorage(&pref_service_, &sync_service_));
+
+  CoreAccountInfo account;
+  account.email = "foo@account.com";
+  account.gaia = "foo";
+  account.account_id = CoreAccountId::FromGaiaId(account.gaia);
+  sync_service_.SetSignedIn(signin::ConsentLevel::kSignin, account);
+  sync_service_.GetUserSettings()->SetSelectedType(
+      syncer::UserSelectableType::kPasswords, true);
+
+  EXPECT_FALSE(IsOptedInForAccountStorage(&pref_service_, &sync_service_));
+}
+
 }  // namespace password_manager::features_util
diff --git a/components/password_manager/core/browser/password_feature_manager_impl_unittest.cc b/components/password_manager/core/browser/password_feature_manager_impl_unittest.cc
--- a/components/password_manager/core/browser/password_feature_manager_impl_unittest.cc
+++ b/components/password_manager/core/browser/password_feature_manager_impl_unittest.cc
@@ -61,6 +61,8 @@ class PasswordFeatureManagerImplTest : public ::testing::Test {
 
 TEST_F(PasswordFeatureManagerImplTest,
        GenerationEnabledIfNonSyncingAndUsingAccountStorage) {
+  base::test::ScopedFeatureList feature_list(
+      syncer::kEnablePasswordsAccountStorageForNonSyncingUsers);
 #if BUILDFLAG(IS_ANDROID)
   pref_service_.registry()->RegisterIntegerPref(
       password_manager::prefs::kPasswordsUseUPMLocalAndSeparateStores,
diff --git a/components/password_manager/core/browser/sharing/password_receiver_service_impl_unittest.cc b/components/password_manager/core/browser/sharing/password_receiver_service_impl_unittest.cc
--- a/components/password_manager/core/browser/sharing/password_receiver_service_impl_unittest.cc
+++ b/components/password_manager/core/browser/sharing/password_receiver_service_impl_unittest.cc
@@ -361,6 +361,8 @@ TEST_P(PasswordReceiverServiceImplTest,
 
   // Set up an account store user (a non-syncing one, but that doesn't really
   // matter).
+  base::test::ScopedFeatureList feature_list(
+      syncer::kEnablePasswordsAccountStorageForNonSyncingUsers);
   sync_service().SetSignedIn(signin::ConsentLevel::kSignin);
 #if !BUILDFLAG(IS_IOS) && !BUILDFLAG(IS_ANDROID)
   pref_service().registry()->RegisterDictionaryPref(
diff --git a/components/password_manager/core/browser/store_metrics_reporter_unittest.cc b/components/password_manager/core/browser/store_metrics_reporter_unittest.cc
--- a/components/password_manager/core/browser/store_metrics_reporter_unittest.cc
+++ b/components/password_manager/core/browser/store_metrics_reporter_unittest.cc
@@ -1336,8 +1336,10 @@ TEST_F(StoreMetricsReporterTest, DuplicatesMetrics_MismatchedDuplicates) {
 // StoreMetricsReporter directly.
 TEST_F(StoreMetricsReporterTest, MultiStoreMetrics) {
   base::test::ScopedFeatureList feature_list;
-  feature_list.InitAndEnableFeature(
-      syncer::kEnablePasswordsAccountStorageForSyncingUsers);
+  feature_list.InitWithFeatures(
+      {syncer::kEnablePasswordsAccountStorageForNonSyncingUsers,
+       syncer::kEnablePasswordsAccountStorageForSyncingUsers},
+      {});
 #if BUILDFLAG(IS_ANDROID)
   prefs_.SetInteger(
       prefs::kPasswordsUseUPMLocalAndSeparateStores,
diff --git a/components/sync/base/features.cc b/components/sync/base/features.cc
--- a/components/sync/base/features.cc
+++ b/components/sync/base/features.cc
@@ -71,6 +71,10 @@ BASE_FEATURE(kEnablePasswordsAccountStorageForSyncingUsers,
 #endif
 );
 
+BASE_FEATURE(kEnablePasswordsAccountStorageForNonSyncingUsers,
+             "EnablePasswordsAccountStorageForNonSyncingUsers",
+             base::FEATURE_ENABLED_BY_DEFAULT);
+
 BASE_FEATURE(kSyncEnableContactInfoDataTypeForDasherUsers,
              "SyncEnableContactInfoDataTypeForDasherUsers",
              base::FEATURE_DISABLED_BY_DEFAULT);
diff --git a/components/sync/base/features.h b/components/sync/base/features.h
--- a/components/sync/base/features.h
+++ b/components/sync/base/features.h
@@ -71,6 +71,14 @@ BASE_DECLARE_FEATURE(kSyncEnableContactInfoDataTypeForDasherUsers);
 //   saves always happen to the profile store.
 // - The account store is synced. When the flag is disabled, the profile one is.
 BASE_DECLARE_FEATURE(kEnablePasswordsAccountStorageForSyncingUsers);
+// For users who support separate "profile" and "account" password stores -
+// see password_manager::features_util::CanCreateAccountStore() - and have
+// sync-the-transport on, enabling this flag means:
+// - New passwords are saved to the account store if the passwords data type is
+//   "selected", and to the profile store otherwise. When the flag is disabled,
+//   saves always happen to the profile store.
+// - The account store is synced. When the flag is disabled, no store is.
+BASE_DECLARE_FEATURE(kEnablePasswordsAccountStorageForNonSyncingUsers);
 
 // Enables a separate account-scoped storage for preferences, for syncing users.
 // (Note that opposed to other "account storage" features, this one does not
diff --git a/components/sync/service/sync_prefs.cc b/components/sync/service/sync_prefs.cc
--- a/components/sync/service/sync_prefs.cc
+++ b/components/sync/service/sync_prefs.cc
@@ -725,7 +725,15 @@ bool SyncPrefs::IsTypeSupportedInTransportMode(UserSelectableType type) {
       return base::FeatureList::IsEnabled(kReplaceSyncPromosWithSignInPromos) &&
              base::FeatureList::IsEnabled(kEnablePreferencesAccountStorage);
     case UserSelectableType::kPasswords:
-      return false;
+      // WARNING: This should actually be checking
+      // password_manager::features_util::CanCreateAccountStore() too, otherwise
+      // a crash can happen. But a) it would require a cyclic dependency, and
+      // b) by the time kEnablePasswordsAccountStorageForNonSyncingUsers is
+      // rolled out on Android, CanCreateAccountStore() should always return
+      // true (or at least it can be some trivial GmsCore version check and live
+      // in components/sync/).
+      return base::FeatureList::IsEnabled(
+          kEnablePasswordsAccountStorageForNonSyncingUsers);
     case UserSelectableType::kAutofill:
       return base::FeatureList::IsEnabled(
           kSyncEnableContactInfoDataTypeInTransportMode);
diff --git a/components/sync/service/sync_prefs_unittest.cc b/components/sync/service/sync_prefs_unittest.cc
--- a/components/sync/service/sync_prefs_unittest.cc
+++ b/components/sync/service/sync_prefs_unittest.cc
@@ -461,6 +461,7 @@ TEST_F(SyncPrefsTest,
 #if !BUILDFLAG(IS_IOS)
                             kReadingListEnableSyncTransportModeUponSignIn,
 #endif  // !BUILDFLAG(IS_IOS)
+                            kEnablePasswordsAccountStorageForNonSyncingUsers,
                             kSyncEnableContactInfoDataTypeInTransportMode,
                             kEnablePreferencesAccountStorage,
                             kSyncEnableExtensionsInTransportMode},
@@ -495,6 +496,7 @@ TEST_F(SyncPrefsTest,
 #if !BUILDFLAG(IS_IOS)
                             kReadingListEnableSyncTransportModeUponSignIn,
 #endif  // !BUILDFLAG(IS_IOS)
+                            kEnablePasswordsAccountStorageForNonSyncingUsers,
                             kSyncEnableContactInfoDataTypeInTransportMode,
                             kEnablePreferencesAccountStorage,
                             kSyncEnableExtensionsInTransportMode},
@@ -593,6 +595,9 @@ TEST_F(SyncPrefsTest, SetSelectedTypesForAccountInTransportMode) {
 
 TEST_F(SyncPrefsTest,
        SetSelectedTypesForAccountInTransportModeWithPolicyRestrictedType) {
+  base::test::ScopedFeatureList features(
+      kEnablePasswordsAccountStorageForNonSyncingUsers);
+
   StrictMock<MockSyncPrefObserver> mock_sync_pref_observer;
   sync_prefs_->AddObserver(&mock_sync_pref_observer);
 
@@ -862,6 +867,7 @@ class SyncPrefsMigrationTest : public testing::Test {
 #if !BUILDFLAG(IS_ANDROID) && !BUILDFLAG(IS_IOS)
                               switches::kExplicitBrowserSigninUIOnDesktop,
 #endif
+                              kEnablePasswordsAccountStorageForNonSyncingUsers,
                               kSyncEnableContactInfoDataTypeInTransportMode,
                               kEnablePreferencesAccountStorage},
         /*disabled_features=*/{});
diff --git a/components/sync/service/sync_user_settings_impl_unittest.cc b/components/sync/service/sync_user_settings_impl_unittest.cc
--- a/components/sync/service/sync_user_settings_impl_unittest.cc
+++ b/components/sync/service/sync_user_settings_impl_unittest.cc
@@ -172,6 +172,7 @@ TEST_F(SyncUserSettingsImplTest, DefaultSelectedTypesWhileSignedIn) {
 #if !BUILDFLAG(IS_ANDROID) && !BUILDFLAG(IS_IOS)
                             switches::kExplicitBrowserSigninUIOnDesktop,
 #endif
+                            kEnablePasswordsAccountStorageForNonSyncingUsers,
                             kSyncEnableContactInfoDataTypeInTransportMode,
                             kEnablePreferencesAccountStorage},
       /*disabled_features=*/{});
-- 

