From: Tommy Webb <tommy@calyxinstitute.org>
Date: Fri, 8 Sep 2023 00:04:57 +0000
Subject: fixup! Bring in Brave feature states for privacy/security

Address the items from commit message that could not be addressed
in 115.

Change-Id: I4e27e6c27337d7a62d6b0b678e17f3fcccc25621
---
 chrome/browser/companion/core/features.cc             |  4 ++--
 chrome/browser/companion/visual_search/features.cc    |  4 ++--
 chrome/common/chrome_features.cc                      |  4 ++--
 components/content_settings/core/common/features.cc   |  4 +++-
 .../core/optimization_guide_features.cc               |  4 ++--
 .../renderer/platform/runtime_enabled_features.json5  | 11 ++---------
 6 files changed, 13 insertions(+), 18 deletions(-)

diff --git a/chrome/browser/companion/core/features.cc b/chrome/browser/companion/core/features.cc
--- a/chrome/browser/companion/core/features.cc
+++ b/chrome/browser/companion/core/features.cc
@@ -27,8 +27,8 @@ BASE_FEATURE(kSidePanelCompanion,
              "SidePanelCompanion",                         // disabled by default
              base::FEATURE_DISABLED_BY_DEFAULT);           // in Brave, too
 BASE_FEATURE(kSidePanelCompanion2,
-             "SidePanelCompanion2",
-             base::FEATURE_DISABLED_BY_DEFAULT);
+             "SidePanelCompanion2",                        // disabled by default
+             base::FEATURE_DISABLED_BY_DEFAULT);           // in Brave
 // Dynamically enables the search companion if the user has experiments
 // enabled.
 BASE_FEATURE(kCompanionEnabledByObservingExpsNavigations,
diff --git a/chrome/browser/companion/visual_search/features.cc b/chrome/browser/companion/visual_search/features.cc
--- a/chrome/browser/companion/visual_search/features.cc
+++ b/chrome/browser/companion/visual_search/features.cc
@@ -13,8 +13,8 @@ namespace companion::visual_search {
 namespace features {
 
 BASE_FEATURE(kVisualSearchSuggestions,
-             "VisualSearchSuggestions",
-             base::FEATURE_DISABLED_BY_DEFAULT);
+             "VisualSearchSuggestions",                // disabled by default
+             base::FEATURE_DISABLED_BY_DEFAULT);       // in Brave
 
 }  // namespace features
 
diff --git a/chrome/common/chrome_features.cc b/chrome/common/chrome_features.cc
--- a/chrome/common/chrome_features.cc
+++ b/chrome/common/chrome_features.cc
@@ -997,8 +997,8 @@ BASE_FEATURE(kPrivacyGuideAndroid,
 
 #if BUILDFLAG(IS_ANDROID)
 BASE_FEATURE(kPrivacyGuideAndroidPostMVP,
-             "PrivacyGuideAndroidPostMVP",
-             base::FEATURE_DISABLED_BY_DEFAULT);
+             "PrivacyGuideAndroidPostMVP",             // disabled by default
+             base::FEATURE_DISABLED_BY_DEFAULT);       // in Brave
 #endif
 
 // Enables or disables push subscriptions keeping Chrome running in the
diff --git a/components/content_settings/core/common/features.cc b/components/content_settings/core/common/features.cc
--- a/components/content_settings/core/common/features.cc
+++ b/components/content_settings/core/common/features.cc
@@ -59,7 +59,9 @@ const base::FeatureParam<base::TimeDelta>
         &kSafetyCheckUnusedSitePermissions,
         "unused-site-permissions-revocation-cleanup-threshold", base::Days(30)};
 
-BASE_FEATURE(kUserBypassUI, "UserBypassUI", base::FEATURE_DISABLED_BY_DEFAULT);
+BASE_FEATURE(kUserBypassUI,
+             "UserBypassUI",                           // disabled by default
+             base::FEATURE_DISABLED_BY_DEFAULT);       // in Brave
 
 const base::FeatureParam<base::TimeDelta> kUserBypassUIExceptionExpiration{
     &kUserBypassUI, "expiration", base::Days(90)};
diff --git a/components/optimization_guide/core/optimization_guide_features.cc b/components/optimization_guide/core/optimization_guide_features.cc
--- a/components/optimization_guide/core/optimization_guide_features.cc
+++ b/components/optimization_guide/core/optimization_guide_features.cc
@@ -214,8 +214,8 @@ BASE_FEATURE(kPageContentAnnotationsPersistSalientImageMetadata,
 // Killswitch for fetching on search results from a remote Optimization Guide
 // Service.
 BASE_FEATURE(kOptimizationGuideFetchingForSRP,
-             "OptimizationHintsFetchingSRP",
-             base::FEATURE_ENABLED_BY_DEFAULT);
+             "OptimizationHintsFetchingSRP",           // disabled by default
+             base::FEATURE_DISABLED_BY_DEFAULT);       // in Brave
 
 // Enables the model store to save relative paths computed from the base model
 // store dir. Storing as relative path in the model store is needed for IOS,
diff --git a/third_party/blink/renderer/platform/runtime_enabled_features.json5 b/third_party/blink/renderer/platform/runtime_enabled_features.json5
--- a/third_party/blink/renderer/platform/runtime_enabled_features.json5
+++ b/third_party/blink/renderer/platform/runtime_enabled_features.json5
@@ -3967,15 +3967,8 @@
       base_feature: "none",
     },
     {
-      name: "WebEnvironmentIntegrity",
-      status: "experimental",
-      origin_trial_feature_name: "WebEnvironmentIntegrity",
-      // base_feature is meant as kill-switch. The RuntimeFeature should follow
-      // the `status` field or Origin Trial unless explicitly overriden by
-      // Finch / command line flags.
-      base_feature_status: "enabled",
-      copied_from_base_feature_if: "overridden",
-      origin_trial_allows_third_party: true,
+      name: "WebEnvironmentIntegrity", // disabled
+      status: {},                      // in Brave
     },
     {
       name: "WebFontResizeLCP",
-- 

