From: uazo <uazo@users.noreply.github.com>
Date: Wed, 11 Oct 2017 23:24:58 +0200
Subject: Disable omission of URL elements

Disabling some omissions of complete urls

License: GPL-2.0-or-later - https://spdx.org/licenses/GPL-2.0-or-later.html

Change-Id: Ia5e913b0c031953155077a111287446bde377cde
---
 .../ShareSheetBottomSheetContent.java         |  4 +-
 .../EphemeralTabSheetContent.java             |  3 +-
 .../chrome_location_bar_model_delegate.cc     |  2 +-
 .../ui/views/page_info/page_info_main_view.cc | 68 ++++++++++---------
 .../components/bookmarks/BookmarkItem.java    |  1 +
 .../omnibox/browser/titled_url_match_utils.cc |  2 +-
 .../page_info/PageInfoController.java         |  3 +-
 7 files changed, 42 insertions(+), 41 deletions(-)

diff --git a/chrome/browser/share/android/java/src/org/chromium/chrome/browser/share/share_sheet/ShareSheetBottomSheetContent.java b/chrome/browser/share/android/java/src/org/chromium/chrome/browser/share/share_sheet/ShareSheetBottomSheetContent.java
--- a/chrome/browser/share/android/java/src/org/chromium/chrome/browser/share/share_sheet/ShareSheetBottomSheetContent.java
+++ b/chrome/browser/share/android/java/src/org/chromium/chrome/browser/share/share_sheet/ShareSheetBottomSheetContent.java
@@ -269,9 +269,7 @@ class ShareSheetBottomSheetContent implements BottomSheetContent, OnItemClickLis
             ShareSheetLinkToggleCoordinator shareSheetLinkToggleCoordinator) {
         // Default preview is to show title + url.
         String title = mParams.getTitle();
-        String subtitle =
-                UrlFormatter.formatUrlForSecurityDisplay(
-                        mParams.getUrl(), SchemeDisplay.OMIT_HTTP_AND_HTTPS);
+        String subtitle = mParams.getUrl();
 
         if (contentTypes.contains(ContentType.IMAGE)
                 || contentTypes.contains(ContentType.IMAGE_AND_LINK)) {
diff --git a/chrome/browser/ui/android/ephemeraltab/java/src/org/chromium/chrome/browser/ephemeraltab/EphemeralTabSheetContent.java b/chrome/browser/ui/android/ephemeraltab/java/src/org/chromium/chrome/browser/ephemeraltab/EphemeralTabSheetContent.java
--- a/chrome/browser/ui/android/ephemeraltab/java/src/org/chromium/chrome/browser/ephemeraltab/EphemeralTabSheetContent.java
+++ b/chrome/browser/ui/android/ephemeraltab/java/src/org/chromium/chrome/browser/ephemeraltab/EphemeralTabSheetContent.java
@@ -235,8 +235,7 @@ public class EphemeralTabSheetContent implements BottomSheetContent {
     /** Sets the ephemeral tab URL. */
     public void updateURL(GURL url) {
         TextView originView = mToolbarView.findViewById(R.id.origin);
-        originView.setText(
-                UrlFormatter.formatUrlForSecurityDisplay(url, SchemeDisplay.OMIT_HTTP_AND_HTTPS));
+        originView.setText(url.getSpec());
     }
 
     /** Sets the security icon. */
diff --git a/chrome/browser/ui/toolbar/chrome_location_bar_model_delegate.cc b/chrome/browser/ui/toolbar/chrome_location_bar_model_delegate.cc
--- a/chrome/browser/ui/toolbar/chrome_location_bar_model_delegate.cc
+++ b/chrome/browser/ui/toolbar/chrome_location_bar_model_delegate.cc
@@ -266,5 +266,5 @@ TemplateURLService* ChromeLocationBarModelDelegate::GetTemplateURLService() {
 // static
 void ChromeLocationBarModelDelegate::RegisterProfilePrefs(
     user_prefs::PrefRegistrySyncable* registry) {
-  registry->RegisterBooleanPref(omnibox::kPreventUrlElisionsInOmnibox, false);
+  registry->RegisterBooleanPref(omnibox::kPreventUrlElisionsInOmnibox, true);
 }
diff --git a/chrome/browser/ui/views/page_info/page_info_main_view.cc b/chrome/browser/ui/views/page_info/page_info_main_view.cc
--- a/chrome/browser/ui/views/page_info/page_info_main_view.cc
+++ b/chrome/browser/ui/views/page_info/page_info_main_view.cc
@@ -600,38 +600,42 @@ void PageInfoMainView::ChildPreferredSizeChanged(views::View* child) {
 }
 
 std::unique_ptr<views::View> PageInfoMainView::CreateBubbleHeaderView() {
-  return views::Builder<views::FlexLayoutView>()
-      .SetInteriorMargin(gfx::Insets::VH(0, 20))
-      .AddChildren(
-          views::Builder<views::Label>(
-              std::make_unique<views::Label>(
-                  std::u16string(), views::style::CONTEXT_DIALOG_TITLE,
-                  views::style::STYLE_HEADLINE_4,
-                  gfx::DirectionalityMode::DIRECTIONALITY_AS_URL))
-              .CopyAddressTo(&title_)
-              .SetMultiLine(true)
-              .SetAllowCharacterBreak(true)
-              .SetHorizontalAlignment(gfx::ALIGN_LEFT)
-              .SetProperty(views::kFlexBehaviorKey,
-                           views::FlexSpecification(
-                               views::LayoutOrientation::kHorizontal,
-                               views::MinimumFlexSizeRule::kScaleToZero,
-                               views::MaximumFlexSizeRule::kUnbounded)
-                               .WithWeight(1)),
-          views::Builder<views::View>(
-              views::BubbleFrameView::CreateCloseButton(
-                  base::BindRepeating(&PageInfoNavigationHandler::CloseBubble,
-                                      base::Unretained(navigation_handler_))))
-              .SetVisible(true)
-              .SetProperty(views::kCrossAxisAlignmentKey,
-                           views::LayoutAlignment::kStart)
-              .CustomConfigure(base::BindOnce([](views::View* button) {
-                // Set views::kInternalPaddingKey for flex layout to account for
-                // internal button padding when calculating margins.
-                button->SetProperty(views::kInternalPaddingKey,
-                                    button->GetInsets());
-              })))
-      .Build();
+  auto cromite_header = std::make_unique<views::ScrollView>();
+  cromite_header->SetVerticalScrollBarMode(views::ScrollView::ScrollBarMode::kHiddenButEnabled);
+  cromite_header->SetHorizontalScrollBarMode(views::ScrollView::ScrollBarMode::kDisabled);
+  cromite_header->ClipHeightTo(0, 30);
+  auto scroll_contents = std::make_unique<views::View>();
+  scroll_contents->SetLayoutManager(std::make_unique<views::FlexLayout>())
+      ->SetInteriorMargin(gfx::Insets::VH(0, 20))
+      .SetCollapseMargins(true);
+  title_ = scroll_contents->AddChildView(std::make_unique<views::Label>(
+      std::u16string(), views::style::CONTEXT_DIALOG_TITLE,
+      views::style::STYLE_HEADLINE_4,
+      gfx::DirectionalityMode::DIRECTIONALITY_AS_URL));
+  title_->SetMultiLine(true);
+  title_->SetAllowCharacterBreak(true);
+  title_->SetHorizontalAlignment(gfx::ALIGN_LEFT);
+  title_->SetProperty(
+      views::kFlexBehaviorKey,
+      views::FlexSpecification(views::MinimumFlexSizeRule::kScaleToZero,
+                               views::MaximumFlexSizeRule::kUnbounded,
+                               /*adjust_height_for_width =*/true)
+          .WithWeight(1));
+  auto close_button = views::BubbleFrameView::CreateCloseButton(
+      base::BindRepeating(&PageInfoNavigationHandler::CloseBubble,
+                          base::Unretained(navigation_handler_)));
+
+  close_button->SetVisible(true);
+  close_button->SetProperty(views::kCrossAxisAlignmentKey,
+                            views::LayoutAlignment::kStart);
+  // Set views::kInternalPaddingKey for flex layout to account for internal
+  // button padding when calculating margins.
+  close_button->SetProperty(views::kInternalPaddingKey,
+                            close_button->GetInsets());
+  scroll_contents->AddChildView(close_button.release());
+  cromite_header->SetContents(std::move(scroll_contents));
+
+  return cromite_header;
 }
 
 std::unique_ptr<views::View> PageInfoMainView::CreateAboutThisSiteButton(
diff --git a/components/bookmarks/common/android/java/src/org/chromium/components/bookmarks/BookmarkItem.java b/components/bookmarks/common/android/java/src/org/chromium/components/bookmarks/BookmarkItem.java
--- a/components/bookmarks/common/android/java/src/org/chromium/components/bookmarks/BookmarkItem.java
+++ b/components/bookmarks/common/android/java/src/org/chromium/components/bookmarks/BookmarkItem.java
@@ -63,6 +63,7 @@ public class BookmarkItem {
 
     /** Returns the string to display for the item's url. */
     public String getUrlForDisplay() {
+        if ((true)) return getUrl().getSpec();
         return UrlFormatter.formatUrlForSecurityDisplay(
                 getUrl(), SchemeDisplay.OMIT_HTTP_AND_HTTPS);
     }
diff --git a/components/omnibox/browser/titled_url_match_utils.cc b/components/omnibox/browser/titled_url_match_utils.cc
--- a/components/omnibox/browser/titled_url_match_utils.cc
+++ b/components/omnibox/browser/titled_url_match_utils.cc
@@ -81,7 +81,7 @@ AutocompleteMatch TitledUrlMatchToAutocompleteMatch(
   // Otherwise, display the path, even if the input matches both or neither.
   bool show_path = titled_url_match.has_ancestor_match ||
                    titled_url_match.url_match_positions.empty();
-  match.contents = show_path ? path : formatted_url;
+  match.contents = /*show_path ? path :*/ formatted_url;
   // The path can become stale (when the bookmark is moved). So persist the URL
   // instead when creating shortcuts.
   if (show_path)
diff --git a/components/page_info/android/java/src/org/chromium/components/page_info/PageInfoController.java b/components/page_info/android/java/src/org/chromium/components/page_info/PageInfoController.java
--- a/components/page_info/android/java/src/org/chromium/components/page_info/PageInfoController.java
+++ b/components/page_info/android/java/src/org/chromium/components/page_info/PageInfoController.java
@@ -225,8 +225,7 @@ public class PageInfoController
                 OmniboxUrlEmphasizer.getOriginEndIndex(
                         displayUrlBuilder.toString(), autocompleteSchemeClassifier);
         autocompleteSchemeClassifier.destroy();
-        containerParams.truncatedUrl =
-                UrlFormatter.formatUrlForDisplayOmitSchemePathAndTrivialSubdomains(mFullUrl);
+        containerParams.truncatedUrl = url;
         containerParams.backButtonClickCallback = this::exitSubpage;
         containerParams.urlTitleClickCallback = mContainer::toggleUrlTruncation;
         // Long press the url text to copy it to the clipboard.
-- 

