From: Tommy Webb <tommy@calyxinstitute.org>
Date: Wed, 26 Jul 2023 16:57:20 -0400
Subject: Bring in Brave feature states for privacy/security

Reviewed Brave's feature state overrides as of brave-core tag v1.80.25,
and added any that were relevant for privacy or security and applicable
to Chromium 136. Features that were already set a particular way still
had comments added so that it will be easier to catch if upstream makes
unwanted changes to their states.

Now using cromite flags as much as possible.

Testing feature changes (two examples):
1. AnonymousIframe: https://anonymous-iframe.glitch.me
   Will show the state enabled prior to this change, disabled after.
2. AutofillServerCommunication: Install and activate Rethink as VPN,
   clear browser storage, do a test search from the omnibar, and look
   for content-autofill.googleapis.com in Rethink logs. It will be
   present before this change, absent after.

brave-core can be found here: https://github.com/brave/brave-core

app/feature_defaults_unittest.cc is a highly useful resource,
and the work of their privacy/security team is greatly appreciated.

Change-Id: Ic0e67157ff4a747bb05ceba264660bfeb1ac73ef
---
 .../browser/aw_permission_manager.cc          |   4 +
 .../browser/aw_web_contents_delegate.cc       |   2 +
 android_webview/common/aw_features.cc         |   2 +-
 base/features.cc                              |   1 +
 .../history_embeddings_utils.cc               |   4 +
 .../extension_telemetry_service_factory.cc    |  20 ++-
 .../toolbar/chrome_labs/chrome_labs_utils.cc  |   2 +
 .../privacy_budget/privacy_budget_features.cc |   1 +
 components/aggregation_service/features.cc    |   1 +
 .../payments/credit_card_access_manager.cc    |   6 +-
 .../autofill/core/common/autofill_features.cc |   1 +
 .../core/common/autofill_payments_features.cc |   1 +
 .../commerce/core/commerce_feature_list.cc    |   2 +
 .../compose/core/browser/compose_features.cc  |   1 +
 .../in_process/heap_profiler_parameters.cc    |   1 +
 components/history/core/browser/features.cc   |   1 +
 components/history_clusters/core/features.cc  |   1 +
 .../core/on_device_clustering_features.cc     |   1 +
 components/lens/lens_features.cc              |   2 +
 components/metrics/metrics_features.cc        |   1 +
 .../structured/structured_metrics_features.cc |   1 +
 .../network_time/network_time_tracker.cc      |   1 +
 components/omnibox/common/omnibox_features.cc |   1 +
 .../core/optimization_guide_features.cc       |   1 +
 components/page_image_service/features.cc     |   1 +
 .../core/common/password_manager_features.cc  |   1 +
 components/plus_addresses/features.cc         |   1 +
 .../privacy_sandbox_features.cc               |   1 +
 .../safe_browsing/core/common/features.cc     |   1 +
 components/search/ntp_features.cc             |   2 +
 .../segmentation_platform/public/features.cc  |   2 +
 .../common/shared_highlighting_features.cc    |   1 +
 .../core/common/common_features.cc            |   1 +
 components/webapps/browser/features.cc        |   1 +
 .../attribution_resolver_delegate_impl.cc     |   3 +
 .../preloading/prefetch/prefetch_features.cc  |   1 +
 .../shared_storage/shared_storage_features.cc |   1 +
 cromite_flags/BUILD.gn                        | 162 +++++++++++++++++-
 ...ve-feature-states-for-privacy-security.inc |   1 +
 .../common/aw_features_cc/placeholder.txt     |   1 +
 ...ve-feature-states-for-privacy-security.inc |   3 +
 .../base/features_cc/placeholder.txt          |   1 +
 ...ve-feature-states-for-privacy-security.inc |   2 +
 ...ve-feature-states-for-privacy-security.inc |   2 +
 ...ve-feature-states-for-privacy-security.inc |   1 +
 ...ve-feature-states-for-privacy-security.inc |   3 +
 ...ve-feature-states-for-privacy-security.inc |   1 +
 .../placeholder.txt                           |   1 +
 ...ve-feature-states-for-privacy-security.inc |   1 +
 .../features_cc/placeholder.txt               |   1 +
 ...ve-feature-states-for-privacy-security.inc |   2 +
 .../autofill_features_cc/placeholder.txt      |   1 +
 ...ve-feature-states-for-privacy-security.inc |   2 +
 .../placeholder.txt                           |   1 +
 ...ve-feature-states-for-privacy-security.inc |   7 +
 .../commerce_feature_list_cc/placeholder.txt  |   1 +
 ...ve-feature-states-for-privacy-security.inc |   1 +
 .../compose_features_cc/placeholder.txt       |   1 +
 ...ve-feature-states-for-privacy-security.inc |   1 +
 ...ve-feature-states-for-privacy-security.inc |   1 +
 .../placeholder.txt                           |   1 +
 ...ve-feature-states-for-privacy-security.inc |   1 +
 .../core/browser/features_cc/placeholder.txt  |   1 +
 ...ve-feature-states-for-privacy-security.inc |   5 +
 .../core/features_cc/placeholder.txt          |   1 +
 ...ve-feature-states-for-privacy-security.inc |   2 +
 .../placeholder.txt                           |   1 +
 ...ve-feature-states-for-privacy-security.inc |   1 +
 .../metrics_features_cc/placeholder.txt       |   1 +
 ...ve-feature-states-for-privacy-security.inc |   2 +
 .../placeholder.txt                           |   1 +
 ...ve-feature-states-for-privacy-security.inc |   1 +
 .../network_time_tracker_cc/placeholder.txt   |   1 +
 ...ve-feature-states-for-privacy-security.inc |   4 +
 .../omnibox_features_cc/placeholder.txt       |   1 +
 ...ve-feature-states-for-privacy-security.inc |   1 +
 .../placeholder.txt                           |   1 +
 ...ve-feature-states-for-privacy-security.inc |   2 +
 .../features_cc/placeholder.txt               |   1 +
 ...ve-feature-states-for-privacy-security.inc |   3 +
 .../placeholder.txt                           |   1 +
 ...ve-feature-states-for-privacy-security.inc |   2 +
 ...ve-feature-states-for-privacy-security.inc |   3 +
 .../placeholder.txt                           |   1 +
 ...ve-feature-states-for-privacy-security.inc |   2 +
 .../core/common/features_cc/placeholder.txt   |   1 +
 ...ve-feature-states-for-privacy-security.inc |   6 +
 .../search/ntp_features_cc/placeholder.txt    |   1 +
 ...ve-feature-states-for-privacy-security.inc |   3 +
 .../public/features_cc/placeholder.txt        |   1 +
 ...ve-feature-states-for-privacy-security.inc |   1 +
 .../placeholder.txt                           |   1 +
 ...ve-feature-states-for-privacy-security.inc |   1 +
 .../common/common_features_cc/placeholder.txt |   1 +
 ...ve-feature-states-for-privacy-security.inc |   1 +
 .../prefetch_features_cc/placeholder.txt      |   1 +
 ...ve-feature-states-for-privacy-security.inc |   1 +
 ...ve-feature-states-for-privacy-security.inc |   5 +
 ...ve-feature-states-for-privacy-security.inc |   3 +
 ...ve-feature-states-for-privacy-security.inc |   2 +
 ...ve-feature-states-for-privacy-security.inc |  13 ++
 ...ve-feature-states-for-privacy-security.inc |   1 +
 .../renderer/core/html/html_script_element.cc |   4 +-
 .../platform/runtime_enabled_features.json5   |  33 ++--
 104 files changed, 363 insertions(+), 32 deletions(-)
 create mode 100644 cromite_flags/android_webview/common/aw_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
 create mode 100755 cromite_flags/android_webview/common/aw_features_cc/placeholder.txt
 create mode 100644 cromite_flags/base/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
 create mode 100755 cromite_flags/base/features_cc/placeholder.txt
 create mode 100644 cromite_flags/chrome/browser/browser_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
 create mode 100644 cromite_flags/chrome/browser/flags/android/chrome_feature_list_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
 create mode 100644 cromite_flags/chrome/browser/ui/ui_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
 create mode 100644 cromite_flags/chrome/common/chrome_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
 create mode 100644 cromite_flags/chrome/common/privacy_budget/privacy_budget_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
 create mode 100755 cromite_flags/chrome/common/privacy_budget/privacy_budget_features_cc/placeholder.txt
 create mode 100644 cromite_flags/components/aggregation_service/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
 create mode 100755 cromite_flags/components/aggregation_service/features_cc/placeholder.txt
 create mode 100644 cromite_flags/components/autofill/core/common/autofill_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
 create mode 100755 cromite_flags/components/autofill/core/common/autofill_features_cc/placeholder.txt
 create mode 100644 cromite_flags/components/autofill/core/common/autofill_payments_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
 create mode 100755 cromite_flags/components/autofill/core/common/autofill_payments_features_cc/placeholder.txt
 create mode 100644 cromite_flags/components/commerce/core/commerce_feature_list_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
 create mode 100755 cromite_flags/components/commerce/core/commerce_feature_list_cc/placeholder.txt
 create mode 100644 cromite_flags/components/compose/core/browser/compose_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
 create mode 100755 cromite_flags/components/compose/core/browser/compose_features_cc/placeholder.txt
 create mode 100644 cromite_flags/components/content_settings/core/common/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
 create mode 100644 cromite_flags/components/heap_profiling/in_process/heap_profiler_parameters_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
 create mode 100755 cromite_flags/components/heap_profiling/in_process/heap_profiler_parameters_cc/placeholder.txt
 create mode 100644 cromite_flags/components/history/core/browser/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
 create mode 100755 cromite_flags/components/history/core/browser/features_cc/placeholder.txt
 create mode 100644 cromite_flags/components/history_clusters/core/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
 create mode 100755 cromite_flags/components/history_clusters/core/features_cc/placeholder.txt
 create mode 100644 cromite_flags/components/history_clusters/core/on_device_clustering_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
 create mode 100755 cromite_flags/components/history_clusters/core/on_device_clustering_features_cc/placeholder.txt
 create mode 100644 cromite_flags/components/metrics/metrics_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
 create mode 100755 cromite_flags/components/metrics/metrics_features_cc/placeholder.txt
 create mode 100644 cromite_flags/components/metrics/structured/structured_metrics_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
 create mode 100755 cromite_flags/components/metrics/structured/structured_metrics_features_cc/placeholder.txt
 create mode 100644 cromite_flags/components/network_time/network_time_tracker_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
 create mode 100755 cromite_flags/components/network_time/network_time_tracker_cc/placeholder.txt
 create mode 100644 cromite_flags/components/omnibox/common/omnibox_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
 create mode 100755 cromite_flags/components/omnibox/common/omnibox_features_cc/placeholder.txt
 create mode 100644 cromite_flags/components/optimization_guide/core/optimization_guide_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
 create mode 100755 cromite_flags/components/optimization_guide/core/optimization_guide_features_cc/placeholder.txt
 create mode 100644 cromite_flags/components/page_image_service/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
 create mode 100755 cromite_flags/components/page_image_service/features_cc/placeholder.txt
 create mode 100644 cromite_flags/components/password_manager/core/common/password_manager_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
 create mode 100755 cromite_flags/components/password_manager/core/common/password_manager_features_cc/placeholder.txt
 create mode 100644 cromite_flags/components/permissions/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
 create mode 100644 cromite_flags/components/privacy_sandbox/privacy_sandbox_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
 create mode 100755 cromite_flags/components/privacy_sandbox/privacy_sandbox_features_cc/placeholder.txt
 create mode 100644 cromite_flags/components/safe_browsing/core/common/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
 create mode 100755 cromite_flags/components/safe_browsing/core/common/features_cc/placeholder.txt
 create mode 100644 cromite_flags/components/search/ntp_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
 create mode 100755 cromite_flags/components/search/ntp_features_cc/placeholder.txt
 create mode 100644 cromite_flags/components/segmentation_platform/public/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
 create mode 100755 cromite_flags/components/segmentation_platform/public/features_cc/placeholder.txt
 create mode 100644 cromite_flags/components/shared_highlighting/core/common/shared_highlighting_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
 create mode 100755 cromite_flags/components/shared_highlighting/core/common/shared_highlighting_features_cc/placeholder.txt
 create mode 100644 cromite_flags/components/subresource_filter/core/common/common_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
 create mode 100755 cromite_flags/components/subresource_filter/core/common/common_features_cc/placeholder.txt
 create mode 100644 cromite_flags/content/browser/preloading/prefetch/prefetch_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
 create mode 100755 cromite_flags/content/browser/preloading/prefetch/prefetch_features_cc/placeholder.txt
 create mode 100644 cromite_flags/content/common/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
 create mode 100644 cromite_flags/content/public/common/content_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
 create mode 100644 cromite_flags/net/base/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
 create mode 100644 cromite_flags/services/network/public/cpp/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
 create mode 100644 cromite_flags/third_party/blink/common/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
 create mode 100644 cromite_flags/ui/base/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc

diff --git a/android_webview/browser/aw_permission_manager.cc b/android_webview/browser/aw_permission_manager.cc
--- a/android_webview/browser/aw_permission_manager.cc
+++ b/android_webview/browser/aw_permission_manager.cc
@@ -789,6 +789,8 @@ void AwPermissionManager::CancelPermissionRequests() {
 void AwPermissionManager::SetOriginCanReadEnumerateDevicesAudioLabels(
     const url::Origin& origin,
     bool audio) {
+  // Stubbed out as of brave-core 3672721d9e6e530f97656e4072910e685c397aca
+  if ((true)) return;
   auto it = enumerate_devices_labels_cache_.find(origin);
   if (it == enumerate_devices_labels_cache_.end()) {
     enumerate_devices_labels_cache_[origin] = std::make_pair(audio, false);
@@ -800,6 +802,8 @@ void AwPermissionManager::SetOriginCanReadEnumerateDevicesAudioLabels(
 void AwPermissionManager::SetOriginCanReadEnumerateDevicesVideoLabels(
     const url::Origin& origin,
     bool video) {
+  // Stubbed out as of brave-core 3672721d9e6e530f97656e4072910e685c397aca
+  if ((true)) return;
   auto it = enumerate_devices_labels_cache_.find(origin);
   if (it == enumerate_devices_labels_cache_.end())
     enumerate_devices_labels_cache_[origin] = std::make_pair(false, video);
diff --git a/android_webview/browser/aw_web_contents_delegate.cc b/android_webview/browser/aw_web_contents_delegate.cc
--- a/android_webview/browser/aw_web_contents_delegate.cc
+++ b/android_webview/browser/aw_web_contents_delegate.cc
@@ -294,6 +294,8 @@ bool AwWebContentsDelegate::CheckMediaAccessPermission(
     content::RenderFrameHost* render_frame_host,
     const url::Origin& security_origin,
     blink::mojom::MediaStreamType type) {
+  // Returning false as of brave-core 3672721d9e6e530f97656e4072910e685c397aca
+  if ((true)) return false;
   WebContents* web_contents =
       WebContents::FromRenderFrameHost(render_frame_host);
   if (!web_contents) {
diff --git a/android_webview/common/aw_features.cc b/android_webview/common/aw_features.cc
--- a/android_webview/common/aw_features.cc
+++ b/android_webview/common/aw_features.cc
@@ -74,7 +74,7 @@ BASE_FEATURE(kWebViewMediaIntegrityApiBlinkExtension,
              "WebViewMediaIntegrityApiBlinkExtension",
              base::FEATURE_ENABLED_BY_DEFAULT);
 SET_CROMITE_FEATURE_DISABLED(kWebViewMediaIntegrityApiBlinkExtension);
-
+#include "cromite_flags/android_webview_common_aw_features_cc.inc"
 // When enabled, passive mixed content (Audio/Video/Image subresources loaded
 // over HTTP on HTTPS sites) will be autoupgraded to HTTPS, and the load will be
 // blocked if the resource fails to load over HTTPS. This only affects apps that
diff --git a/base/features.cc b/base/features.cc
--- a/base/features.cc
+++ b/base/features.cc
@@ -160,4 +160,5 @@ void Init(EmitThreadControllerProfilerMetadata
 #endif
 }
 
+#include "cromite_flags/base_features_cc.inc"
 }  // namespace base::features
diff --git a/chrome/browser/history_embeddings/history_embeddings_utils.cc b/chrome/browser/history_embeddings/history_embeddings_utils.cc
--- a/chrome/browser/history_embeddings/history_embeddings_utils.cc
+++ b/chrome/browser/history_embeddings/history_embeddings_utils.cc
@@ -208,4 +208,8 @@ bool IsHistoryEmbeddingsAnswersFeatureEnabled() {
          base::FeatureList::IsEnabled(kLaunchedHistoryEmbeddingsAnswers);
 }
 
+SET_CROMITE_FEATURE_DISABLED(kHistoryEmbeddings);                // disabled in Brave
+SET_CROMITE_FEATURE_DISABLED(kHistoryEmbeddingsAnswers);         // disabled in Brave
+SET_CROMITE_FEATURE_DISABLED(kLaunchedHistoryEmbeddings);        // disabled in Brave
+SET_CROMITE_FEATURE_DISABLED(kLaunchedHistoryEmbeddingsAnswers); // disabled in Brave
 }  // namespace history_embeddings
diff --git a/chrome/browser/safe_browsing/extension_telemetry/extension_telemetry_service_factory.cc b/chrome/browser/safe_browsing/extension_telemetry/extension_telemetry_service_factory.cc
--- a/chrome/browser/safe_browsing/extension_telemetry/extension_telemetry_service_factory.cc
+++ b/chrome/browser/safe_browsing/extension_telemetry/extension_telemetry_service_factory.cc
@@ -26,9 +26,13 @@
 
 namespace safe_browsing {
 
+// We attempt to turn off all of this, now that the kExtensionTelemetry flag is removed.
+// See brave-core 1d8262e0f94031472bb1419ddac1bdfbce6cbffb
+
 // static
 ExtensionTelemetryService* ExtensionTelemetryServiceFactory::GetForProfile(
     Profile* profile) {
+  if ((true)) return nullptr;
   return static_cast<ExtensionTelemetryService*>(
       GetInstance()->GetServiceForBrowserContext(profile, /* create= */ true));
 }
@@ -45,16 +49,14 @@ ExtensionTelemetryServiceFactory::ExtensionTelemetryServiceFactory()
           // AshInternals should be 'kNone' since ExtensionTelemetryService
           // should not be initialized for internal profiles on ChromeOS Ash.
           "ExtensionTelemetryService",
-          ProfileSelections::BuildForRegularProfile()) {
-  DependsOn(NetworkContextServiceFactory::GetInstance());
-  DependsOn(extensions::ExtensionPrefsFactory::GetInstance());
-  DependsOn(extensions::ExtensionRegistryFactory::GetInstance());
-  DependsOn(extensions::ExtensionManagementFactory::GetInstance());
-  DependsOn(extensions::ChromeExtensionSystemFactory::GetInstance());
+          ProfileSelections::BuildNoProfilesSelected()) {
+}
+
+content::BrowserContext*
+ExtensionTelemetryServiceFactory::GetBrowserContextToUse(
+    content::BrowserContext* context) const {
 #if BUILDFLAG(ENTERPRISE_CLOUD_CONTENT_ANALYSIS)
-  DependsOn(enterprise_connectors::ConnectorsServiceFactory::GetInstance());
-  DependsOn(enterprise_connectors::ExtensionTelemetryEventRouterFactory::
-                GetInstance());
+  return nullptr;
 #endif  // BUILDFLAG(ENTERPRISE_CLOUD_CONTENT_ANALYSIS)
 }
 
diff --git a/chrome/browser/ui/toolbar/chrome_labs/chrome_labs_utils.cc b/chrome/browser/ui/toolbar/chrome_labs/chrome_labs_utils.cc
--- a/chrome/browser/ui/toolbar/chrome_labs/chrome_labs_utils.cc
+++ b/chrome/browser/ui/toolbar/chrome_labs/chrome_labs_utils.cc
@@ -144,6 +144,8 @@ bool AreNewChromeLabsExperimentsAvailable(const ChromeLabsModel* model,
 }
 
 bool IsChromeLabsEnabled() {
+  // Returning false as of brave-core bd895969015762e9981b6fb30ed8c9995e48487d
+  if ((true)) return false;
   // Always early out on the stable channel regardless of other conditions.
   if (chrome::GetChannel() == version_info::Channel::STABLE) {
     return false;
diff --git a/chrome/common/privacy_budget/privacy_budget_features.cc b/chrome/common/privacy_budget/privacy_budget_features.cc
--- a/chrome/common/privacy_budget/privacy_budget_features.cc
+++ b/chrome/common/privacy_budget/privacy_budget_features.cc
@@ -62,4 +62,5 @@ const base::FeatureParam<std::string> kIdentifiabilityStudyBlocks = {
 const base::FeatureParam<std::string> kIdentifiabilityStudyBlockWeights = {
     &kIdentifiabilityStudy, "BlockWeights", ""};
 
+#include "cromite_flags/chrome_common_privacy_budget_privacy_budget_features_cc.inc"
 }  // namespace features
diff --git a/components/aggregation_service/features.cc b/components/aggregation_service/features.cc
--- a/components/aggregation_service/features.cc
+++ b/components/aggregation_service/features.cc
@@ -18,4 +18,5 @@ BASE_FEATURE(kAggregationServiceMultipleCloudProviders,
 const base::FeatureParam<std::string> kAggregationServiceCoordinatorAllowlist{
     &kAggregationServiceMultipleCloudProviders, "allowlist", ""};
 
+#include "cromite_flags/components_aggregation_service_features_cc.inc"
 }  // namespace aggregation_service
diff --git a/components/autofill/core/browser/payments/credit_card_access_manager.cc b/components/autofill/core/browser/payments/credit_card_access_manager.cc
--- a/components/autofill/core/browser/payments/credit_card_access_manager.cc
+++ b/components/autofill/core/browser/payments/credit_card_access_manager.cc
@@ -1625,8 +1625,10 @@ bool CreditCardAccessManager::ShouldLogServerCardUnmaskAttemptMetrics(
   // be attempted to be unmasked.
   CHECK_NE(record_type, CreditCard::RecordType::kFullServerCard);
 
-  return record_type == CreditCard::RecordType::kMaskedServerCard ||
-         record_type == CreditCard::RecordType::kVirtualCard;
+  // Only log virtual card metrics in Brave after removal of kAutofillEnableRemadeDownstreamMetrics
+  // flag (brave-core commit 7fa23a1d354f04d1f9496bc12b0ba361748a848b).
+  // Side note, are we even logging metrics at all right now? If so, why?
+  return record_type == CreditCard::RecordType::kVirtualCard;
 }
 
 void CreditCardAccessManager::StartDeviceAuthenticationForFilling(
diff --git a/components/autofill/core/common/autofill_features.cc b/components/autofill/core/common/autofill_features.cc
--- a/components/autofill/core/common/autofill_features.cc
+++ b/components/autofill/core/common/autofill_features.cc
@@ -962,4 +962,5 @@ BASE_FEATURE(kAutofillUploadThrottling,
 
 }  // namespace test
 
+#include "cromite_flags/components_autofill_core_common_autofill_features_cc.inc"
 }  // namespace autofill::features
diff --git a/components/autofill/core/common/autofill_payments_features.cc b/components/autofill/core/common/autofill_payments_features.cc
--- a/components/autofill/core/common/autofill_payments_features.cc
+++ b/components/autofill/core/common/autofill_payments_features.cc
@@ -276,4 +276,5 @@ bool ShouldShowImprovedUserConsentForCreditCardSave() {
 #endif
 }
 
+#include "cromite_flags/components_autofill_core_common_autofill_payments_features_cc.inc"
 }  // namespace autofill::features
diff --git a/components/commerce/core/commerce_feature_list.cc b/components/commerce/core/commerce_feature_list.cc
--- a/components/commerce/core/commerce_feature_list.cc
+++ b/components/commerce/core/commerce_feature_list.cc
@@ -451,4 +451,6 @@ SET_CROMITE_FEATURE_DISABLED(kShoppingListRegionLaunched);
 
 SET_CROMITE_FEATURE_DISABLED(kEnableDiscountInfoApi);
 SET_CROMITE_FEATURE_DISABLED(kEnableDiscountInfoApiRegionLaunched);
+
+#include "cromite_flags/components_commerce_core_commerce_feature_list_cc.inc"
 }  // namespace commerce
diff --git a/components/compose/core/browser/compose_features.cc b/components/compose/core/browser/compose_features.cc
--- a/components/compose/core/browser/compose_features.cc
+++ b/components/compose/core/browser/compose_features.cc
@@ -104,4 +104,5 @@ BASE_FEATURE(kComposeUpfrontInputModes,
              "ComposeUpfrontInputModes",
              base::FEATURE_ENABLED_BY_DEFAULT);
 
+#include "cromite_flags/components_compose_core_browser_compose_features_cc.inc"
 }  // namespace compose::features
diff --git a/components/heap_profiling/in_process/heap_profiler_parameters.cc b/components/heap_profiling/in_process/heap_profiler_parameters.cc
--- a/components/heap_profiling/in_process/heap_profiler_parameters.cc
+++ b/components/heap_profiling/in_process/heap_profiler_parameters.cc
@@ -213,4 +213,5 @@ float GetHashSetLoadFactorForProcess(
   }
 }
 
+#include "cromite_flags/components_heap_profiling_in_process_heap_profiler_parameters_cc.inc"
 }  // namespace heap_profiling
diff --git a/components/history/core/browser/features.cc b/components/history/core/browser/features.cc
--- a/components/history/core/browser/features.cc
+++ b/components/history/core/browser/features.cc
@@ -92,4 +92,5 @@ const char kMvtScoringParamRecencyFactor_Default[] = "default";
 const char kMvtScoringParamRecencyFactor_Decay[] = "decay";
 const char kMvtScoringParamRecencyFactor_DecayStaircase[] = "decay_staircase";
 
+#include "cromite_flags/components_history_core_browser_features_cc.inc"
 }  // namespace history
diff --git a/components/history_clusters/core/features.cc b/components/history_clusters/core/features.cc
--- a/components/history_clusters/core/features.cc
+++ b/components/history_clusters/core/features.cc
@@ -75,4 +75,5 @@ BASE_FEATURE(kSearchesFindUngroupedVisits,
              "GroupedHistorySearchesFindUngroupedVisits",
              base::FEATURE_ENABLED_BY_DEFAULT);
 
+#include "cromite_flags/components_history_clusters_core_features_cc.inc"
 }  // namespace history_clusters
diff --git a/components/history_clusters/core/on_device_clustering_features.cc b/components/history_clusters/core/on_device_clustering_features.cc
--- a/components/history_clusters/core/on_device_clustering_features.cc
+++ b/components/history_clusters/core/on_device_clustering_features.cc
@@ -30,5 +30,6 @@ BASE_FEATURE(kOnDeviceClusteringVisitRanking,
              "JourneysOnDeviceClusteringVisitRanking",
              base::FEATURE_DISABLED_BY_DEFAULT);
 
+#include "cromite_flags/components_history_clusters_core_on_device_clustering_features_cc.inc"
 }  // namespace features
 }  // namespace history_clusters
diff --git a/components/lens/lens_features.cc b/components/lens/lens_features.cc
--- a/components/lens/lens_features.cc
+++ b/components/lens/lens_features.cc
@@ -1022,4 +1022,6 @@ bool ShouldLensOverlayRecontextualizeOnQuery() {
   return base::FeatureList::IsEnabled(kLensOverlayRecontextualizeOnQuery);
 }
 
+SET_CROMITE_FEATURE_DISABLED(kLensOverlay);    // disabled in Brave
+SET_CROMITE_FEATURE_DISABLED(kLensOverlayOmniboxEntryPoint); // disabled in Brave
 }  // namespace lens::features
diff --git a/components/metrics/metrics_features.cc b/components/metrics/metrics_features.cc
--- a/components/metrics/metrics_features.cc
+++ b/components/metrics/metrics_features.cc
@@ -22,4 +22,5 @@ BASE_FEATURE(kMetricsLogTrimming,
              "MetricsLogTrimming",
              base::FEATURE_ENABLED_BY_DEFAULT);
 
+#include "cromite_flags/components_metrics_metrics_features_cc.inc"
 }  // namespace metrics::features
diff --git a/components/metrics/structured/structured_metrics_features.cc b/components/metrics/structured/structured_metrics_features.cc
--- a/components/metrics/structured/structured_metrics_features.cc
+++ b/components/metrics/structured/structured_metrics_features.cc
@@ -108,4 +108,5 @@ double GetMaxDiskSizeRatio() {
   return kMaxDiskSizeQuota.Get();
 }
 
+#include "cromite_flags/components_metrics_structured_structured_metrics_features_cc.inc"
 }  // namespace metrics::structured
diff --git a/components/network_time/network_time_tracker.cc b/components/network_time/network_time_tracker.cc
--- a/components/network_time/network_time_tracker.cc
+++ b/components/network_time/network_time_tracker.cc
@@ -615,4 +615,5 @@ void NetworkTimeTracker::NotifyObservers() {
   }
 }
 
+#include "cromite_flags/components_network_time_network_time_tracker_cc.inc"
 }  // namespace network_time
diff --git a/components/omnibox/common/omnibox_features.cc b/components/omnibox/common/omnibox_features.cc
--- a/components/omnibox/common/omnibox_features.cc
+++ b/components/omnibox/common/omnibox_features.cc
@@ -448,4 +448,5 @@ BASE_FEATURE(kEnableSearchAggregatorPolicy,
              "EnableSearchAggregatorPolicy",
              ENABLED);
 
+#include "cromite_flags/components_omnibox_common_omnibox_features_cc.inc"
 }  // namespace omnibox
diff --git a/components/optimization_guide/core/optimization_guide_features.cc b/components/optimization_guide/core/optimization_guide_features.cc
--- a/components/optimization_guide/core/optimization_guide_features.cc
+++ b/components/optimization_guide/core/optimization_guide_features.cc
@@ -902,5 +902,6 @@ SET_CROMITE_FEATURE_DISABLED(kOptimizationGuideModelDownloading);
 SET_CROMITE_FEATURE_DISABLED(kPushNotifications);
 SET_CROMITE_FEATURE_DISABLED(kPreventLongRunningPredictionModels);
 SET_CROMITE_FEATURE_DISABLED(kOptimizationGuideFetchingForSRP);
+#include "cromite_flags/components_optimization_guide_core_optimization_guide_features_cc.inc"
 }  // namespace features
 }  // namespace optimization_guide
diff --git a/components/page_image_service/features.cc b/components/page_image_service/features.cc
--- a/components/page_image_service/features.cc
+++ b/components/page_image_service/features.cc
@@ -19,4 +19,5 @@ BASE_FEATURE(kImageServiceOptimizationGuideSalientImages,
              "ImageServiceOptimizationGuideSalientImages",
              base::FEATURE_ENABLED_BY_DEFAULT);
 
+#include "cromite_flags/components_page_image_service_features_cc.inc"
 }  // namespace page_image_service
diff --git a/components/password_manager/core/common/password_manager_features.cc b/components/password_manager/core/common/password_manager_features.cc
--- a/components/password_manager/core/common/password_manager_features.cc
+++ b/components/password_manager/core/common/password_manager_features.cc
@@ -92,4 +92,5 @@ const char kGenerationRequirementsPrefixLength[] = "prefix_length";
 // Default to 5000 ms.
 const char kGenerationRequirementsTimeout[] = "timeout";
 
+#include "cromite_flags/components_password_manager_core_common_password_manager_features_cc.inc"
 }  // namespace password_manager::features
diff --git a/components/plus_addresses/features.cc b/components/plus_addresses/features.cc
--- a/components/plus_addresses/features.cc
+++ b/components/plus_addresses/features.cc
@@ -91,4 +91,5 @@ BASE_FEATURE(kPlusAddressSuggestionsOnUsernameFields,
              "PlusAddressSuggestionsOnUsernameFields",
              base::FEATURE_DISABLED_BY_DEFAULT);
 
+SET_CROMITE_FEATURE_DISABLED(kPlusAddressesEnabled);  // disabled in Brave
 }  // namespace plus_addresses::features
diff --git a/components/privacy_sandbox/privacy_sandbox_features.cc b/components/privacy_sandbox/privacy_sandbox_features.cc
--- a/components/privacy_sandbox/privacy_sandbox_features.cc
+++ b/components/privacy_sandbox/privacy_sandbox_features.cc
@@ -291,4 +291,5 @@ BASE_FEATURE(kPrivacySandboxFirstTimeNoticeV2,
 SET_CROMITE_FEATURE_DISABLED(kPrivacySandboxSettings4);
 SET_CROMITE_FEATURE_ENABLED(kDisablePrivacySandboxPrompts);
 SET_CROMITE_FEATURE_DISABLED(kEnforcePrivacySandboxAttestations);
+#include "cromite_flags/components_privacy_sandbox_privacy_sandbox_features_cc.inc"
 }  // namespace privacy_sandbox
diff --git a/components/safe_browsing/core/common/features.cc b/components/safe_browsing/core/common/features.cc
--- a/components/safe_browsing/core/common/features.cc
+++ b/components/safe_browsing/core/common/features.cc
@@ -415,4 +415,5 @@ base::Value::List GetFeatureStatusList() {
   return param_list;
 }
 
+#include "cromite_flags/components_safe_browsing_core_common_features_cc.inc"
 }  // namespace safe_browsing
diff --git a/components/search/ntp_features.cc b/components/search/ntp_features.cc
--- a/components/search/ntp_features.cc
+++ b/components/search/ntp_features.cc
@@ -503,4 +503,6 @@ std::string GetMobilePromoTargetURL() {
       ntp_features::kNtpMobilePromoTargetUrlParam);
   return (field_trial_url.empty()) ? kMobilePromoQRCodeURL : field_trial_url;
 }
+
+#include "cromite_flags/components_search_ntp_features_cc.inc"
 }  // namespace ntp_features
diff --git a/components/segmentation_platform/public/features.cc b/components/segmentation_platform/public/features.cc
--- a/components/segmentation_platform/public/features.cc
+++ b/components/segmentation_platform/public/features.cc
@@ -267,4 +267,6 @@ BASE_FEATURE(kSegmentationPlatformFedCmUser,
 SET_CROMITE_FEATURE_DISABLED(kSegmentationPlatformFeature);
 SET_CROMITE_FEATURE_DISABLED(kSegmentationPlatformFeedSegmentFeature);
 SET_CROMITE_FEATURE_DISABLED(kSegmentationPlatformAdaptiveToolbarV2Feature);
+
+#include "cromite_flags/components_segmentation_platform_public_features_cc.inc"
 }  // namespace segmentation_platform::features
diff --git a/components/shared_highlighting/core/common/shared_highlighting_features.cc b/components/shared_highlighting/core/common/shared_highlighting_features.cc
--- a/components/shared_highlighting/core/common/shared_highlighting_features.cc
+++ b/components/shared_highlighting/core/common/shared_highlighting_features.cc
@@ -27,4 +27,5 @@ int GetPreemptiveLinkGenTimeoutLengthMs() {
 #endif
 }
 
+#include "cromite_flags/components_shared_highlighting_core_common_shared_highlighting_features_cc.inc"
 }  // namespace shared_highlighting
diff --git a/components/subresource_filter/core/common/common_features.cc b/components/subresource_filter/core/common/common_features.cc
--- a/components/subresource_filter/core/common/common_features.cc
+++ b/components/subresource_filter/core/common/common_features.cc
@@ -16,4 +16,5 @@ const base::FeatureParam<bool> kCheckFor3pcException{
     &kTPCDAdHeuristicSubframeRequestTagging, /*name=*/"check_exceptions",
     /*default_value=*/true};
 
+#include "cromite_flags/components_subresource_filter_core_common_common_features_cc.inc"
 }  // namespace subresource_filter
diff --git a/components/webapps/browser/features.cc b/components/webapps/browser/features.cc
--- a/components/webapps/browser/features.cc
+++ b/components/webapps/browser/features.cc
@@ -48,5 +48,6 @@ extern const base::FeatureParam<int> kMaxDaysForMLPromotionGuardrailStorage(
 BASE_FEATURE(kCheckWebAppExistenceAsync,
              "CheckWebAppExistenceAsync",
              base::FEATURE_ENABLED_BY_DEFAULT);
+SET_CROMITE_FEATURE_DISABLED(kWebAppsEnableMLModelForPromotion);  // disabled in Brave
 }  // namespace features
 }  // namespace webapps
diff --git a/content/browser/attribution_reporting/attribution_resolver_delegate_impl.cc b/content/browser/attribution_reporting/attribution_resolver_delegate_impl.cc
--- a/content/browser/attribution_reporting/attribution_resolver_delegate_impl.cc
+++ b/content/browser/attribution_reporting/attribution_resolver_delegate_impl.cc
@@ -195,6 +195,9 @@ bool AttributionResolverDelegateImpl::
             source_registration_time_config) const {
   DCHECK_CALLED_ON_VALID_SEQUENCE(sequence_checker_);
 
+  // See brave-core da32f5c44b1563e408eabe2f8e9ed263d28ce468
+  if ((true)) return {};
+
   switch (noise_mode_) {
     case AttributionNoiseMode::kDefault:
       break;
diff --git a/content/browser/preloading/prefetch/prefetch_features.cc b/content/browser/preloading/prefetch/prefetch_features.cc
--- a/content/browser/preloading/prefetch/prefetch_features.cc
+++ b/content/browser/preloading/prefetch/prefetch_features.cc
@@ -98,4 +98,5 @@ const base::FeatureParam<size_t>
         &kPrefetchSchedulerTesting,
         "kPrefetchSchedulerTestingActiveSetSizeLimitForBurst", 1};
 
+#include "cromite_flags/content_browser_preloading_prefetch_prefetch_features_cc.inc"
 }  // namespace features
diff --git a/content/browser/shared_storage/shared_storage_features.cc b/content/browser/shared_storage/shared_storage_features.cc
--- a/content/browser/shared_storage/shared_storage_features.cc
+++ b/content/browser/shared_storage/shared_storage_features.cc
@@ -20,4 +20,5 @@ BASE_FEATURE_PARAM(double,
                    "SharedStorageSelectURLBitBudgetPerSitePerPageLoad",
                    6.0);
 
+SET_CROMITE_FEATURE_DISABLED(kSharedStorageSelectURLLimit);
 }  // namespace content::features
diff --git a/cromite_flags/BUILD.gn b/cromite_flags/BUILD.gn
--- a/cromite_flags/BUILD.gn
+++ b/cromite_flags/BUILD.gn
@@ -18,6 +18,16 @@
 # this file is intentionally empty
 #
 
+cpp_bromite_include("android_webview_common_aw_features_cc") {
+  inputs = [ "//cromite_flags/android_webview/common/aw_features_cc/placeholder.txt" ]
+  output_file = "android_webview_common_aw_features_cc.inc"
+}
+
+cpp_bromite_include("base_features_cc") {
+  inputs = [ "//cromite_flags/base/features_cc/placeholder.txt" ]
+  output_file = "base_features_cc.inc"
+}
+
 cpp_bromite_include("chrome_browser_about_flags_cc") {
   inputs = [ "//cromite_flags/chrome/browser/about_flags_cc/placeholder.txt" ]
   output_file = "chrome_browser_about_flags_cc.inc"
@@ -28,6 +38,11 @@ cpp_bromite_include("chrome_common_chrome_features_cc") {
   output_file = "chrome_common_chrome_features_cc.inc"
 }
 
+cpp_bromite_include("chrome_common_privacy_budget_privacy_budget_features_cc") {
+  inputs = [ "//cromite_flags/chrome/common/privacy_budget/privacy_budget_features_cc/placeholder.txt" ]
+  output_file = "chrome_common_privacy_budget_privacy_budget_features_cc.inc"
+}
+
 cpp_bromite_include("content_common_features_cc") {
   inputs = [ "//cromite_flags/content/common/features_cc/placeholder.txt" ]
   output_file = "content_common_features_cc.inc"
@@ -88,14 +103,64 @@ cpp_bromite_include("media_base_media_switches_h") {
   output_file = "media_base_media_switches_h.inc"
 }
 
+cpp_bromite_include("components_aggregation_service_features_cc") {
+  inputs = [ "//cromite_flags/components/aggregation_service/features_cc/placeholder.txt" ]
+  output_file = "components_aggregation_service_features_cc.inc"
+}
+
+cpp_bromite_include("components_autofill_core_common_autofill_features_cc") {
+  inputs = [ "//cromite_flags/components/autofill/core/common/autofill_features_cc/placeholder.txt" ]
+  output_file = "components_autofill_core_common_autofill_features_cc.inc"
+}
+
+cpp_bromite_include("components_autofill_core_common_autofill_payments_features_cc") {
+  inputs = [ "//cromite_flags/components/autofill/core/common/autofill_payments_features_cc/placeholder.txt" ]
+  output_file = "components_autofill_core_common_autofill_payments_features_cc.inc"
+}
+
+cpp_bromite_include("components_commerce_core_commerce_feature_list_cc") {
+  inputs = [ "//cromite_flags/components/commerce/core/commerce_feature_list_cc/placeholder.txt" ]
+  output_file = "components_commerce_core_commerce_feature_list_cc.inc"
+}
+
+cpp_bromite_include("components_compose_core_browser_compose_features_cc") {
+  inputs = [ "//cromite_flags/components/compose/core/browser/compose_features_cc/placeholder.txt" ]
+  output_file = "components_compose_core_browser_compose_features_cc.inc"
+}
+
 cpp_bromite_include("components_content_settings_core_common_features_cc") {
   inputs = [ "//cromite_flags/components/content_settings/core/common/features_cc/placeholder.txt" ]
   output_file = "components_content_settings_core_common_features_cc.inc"
 }
 
-cpp_bromite_include("components_permissions_features_cc") {
-  inputs = [ "//cromite_flags/components/permissions/features_cc/placeholder.txt" ]
-  output_file = "components_permissions_features_cc.inc"
+cpp_bromite_include("components_history_core_browser_features_cc") {
+  inputs = [ "//cromite_flags/components/history/core/browser/features_cc/placeholder.txt" ]
+  output_file = "components_history_core_browser_features_cc.inc"
+}
+
+cpp_bromite_include("components_history_clusters_core_features_cc") {
+  inputs = [ "//cromite_flags/components/history_clusters/core/features_cc/placeholder.txt" ]
+  output_file = "components_history_clusters_core_features_cc.inc"
+}
+
+cpp_bromite_include("components_history_clusters_core_on_device_clustering_features_cc") {
+  inputs = [ "//cromite_flags/components/history_clusters/core/on_device_clustering_features_cc/placeholder.txt" ]
+  output_file = "components_history_clusters_core_on_device_clustering_features_cc.inc"
+}
+
+cpp_bromite_include("components_metrics_metrics_features_cc") {
+  inputs = [ "//cromite_flags/components/metrics/metrics_features_cc/placeholder.txt" ]
+  output_file = "components_metrics_metrics_features_cc.inc"
+}
+
+cpp_bromite_include("components_metrics_structured_structured_metrics_features_cc") {
+  inputs = [ "//cromite_flags/components/metrics/structured/structured_metrics_features_cc/placeholder.txt" ]
+  output_file = "components_metrics_structured_structured_metrics_features_cc.inc"
+}
+
+cpp_bromite_include("components_network_time_network_time_tracker_cc") {
+  inputs = [ "//cromite_flags/components/network_time/network_time_tracker_cc/placeholder.txt" ]
+  output_file = "components_network_time_network_time_tracker_cc.inc"
 }
 
 cpp_bromite_include("components_offline_pages_core_offline_page_feature_cc") {
@@ -108,6 +173,41 @@ cpp_bromite_include("components_offline_pages_core_offline_page_feature_h") {
   output_file = "components_offline_pages_core_offline_page_feature_h.inc"
 }
 
+cpp_bromite_include("components_page_image_service_features_cc") {
+  inputs = [ "//cromite_flags/components/page_image_service/features_cc/placeholder.txt" ]
+  output_file = "components_page_image_service_features_cc.inc"
+}
+
+cpp_bromite_include("components_permissions_features_cc") {
+  inputs = [ "//cromite_flags/components/permissions/features_cc/placeholder.txt" ]
+  output_file = "components_permissions_features_cc.inc"
+}
+
+cpp_bromite_include("components_safe_browsing_core_common_features_cc") {
+  inputs = [ "//cromite_flags/components/safe_browsing/core/common/features_cc/placeholder.txt" ]
+  output_file = "components_safe_browsing_core_common_features_cc.inc"
+}
+
+cpp_bromite_include("components_search_ntp_features_cc") {
+  inputs = [ "//cromite_flags/components/search/ntp_features_cc/placeholder.txt" ]
+  output_file = "components_search_ntp_features_cc.inc"
+}
+
+cpp_bromite_include("components_segmentation_platform_public_features_cc") {
+  inputs = [ "//cromite_flags/components/segmentation_platform/public/features_cc/placeholder.txt" ]
+  output_file = "components_segmentation_platform_public_features_cc.inc"
+}
+
+cpp_bromite_include("components_shared_highlighting_core_common_shared_highlighting_features_cc") {
+  inputs = [ "//cromite_flags/components/shared_highlighting/core/common/shared_highlighting_features_cc/placeholder.txt" ]
+  output_file = "components_shared_highlighting_core_common_shared_highlighting_features_cc.inc"
+}
+
+cpp_bromite_include("components_subresource_filter_core_common_common_features_cc") {
+  inputs = [ "//cromite_flags/components/subresource_filter/core/common/common_features_cc/placeholder.txt" ]
+  output_file = "components_subresource_filter_core_common_common_features_cc.inc"
+}
+
 cpp_bromite_include("net_base_features_cc") {
   inputs = [ "//cromite_flags/net/base/features_cc/placeholder.txt" ]
   output_file = "net_base_features_cc.inc"
@@ -143,21 +243,77 @@ cpp_bromite_include("components_password_manager_core_browser_features_password_
   output_file = "components_password_manager_core_browser_features_password_features_cc.inc"
 }
 
+cpp_bromite_include("components_heap_profiling_in_process_heap_profiler_parameters_cc") {
+  inputs = [ "//cromite_flags/components/heap_profiling/in_process/heap_profiler_parameters_cc/placeholder.txt" ]
+  output_file = "components_heap_profiling_in_process_heap_profiler_parameters_cc.inc"
+}
+
+cpp_bromite_include("components_omnibox_common_omnibox_features_cc") {
+  inputs = [ "//cromite_flags/components/omnibox/common/omnibox_features_cc/placeholder.txt" ]
+  output_file = "components_omnibox_common_omnibox_features_cc.inc"
+}
+
+cpp_bromite_include("components_optimization_guide_core_optimization_guide_features_cc") {
+  inputs = [ "//cromite_flags/components/optimization_guide/core/optimization_guide_features_cc/placeholder.txt" ]
+  output_file = "components_optimization_guide_core_optimization_guide_features_cc.inc"
+}
+
+cpp_bromite_include("components_password_manager_core_common_password_manager_features_cc") {
+  inputs = [ "//cromite_flags/components/password_manager/core/common/password_manager_features_cc/placeholder.txt" ]
+  output_file = "components_password_manager_core_common_password_manager_features_cc.inc"
+}
+
+cpp_bromite_include("components_privacy_sandbox_privacy_sandbox_features_cc") {
+  inputs = [ "//cromite_flags/components/privacy_sandbox/privacy_sandbox_features_cc/placeholder.txt" ]
+  output_file = "components_privacy_sandbox_privacy_sandbox_features_cc.inc"
+}
+
+cpp_bromite_include("content_browser_preloading_prefetch_prefetch_features_cc") {
+  inputs = [ "//cromite_flags/content/browser/preloading/prefetch/prefetch_features_cc/placeholder.txt" ]
+  output_file = "content_browser_preloading_prefetch_prefetch_features_cc.inc"
+}
+
 component("cromite_flags") {
   deps = [
+    ":android_webview_common_aw_features_cc",
+    ":base_features_cc",
+    ":content_browser_preloading_prefetch_prefetch_features_cc",
     ":content_common_features_cc",
     ":content_public_common_content_features_cc",
     ":content_public_common_content_features_h",
+    ":components_aggregation_service_features_cc",
+    ":components_autofill_core_common_autofill_features_cc",
+    ":components_autofill_core_common_autofill_payments_features_cc",
+    ":components_commerce_core_commerce_feature_list_cc",
+    ":components_compose_core_browser_compose_features_cc",
     ":components_content_settings_core_common_features_cc",
+    ":components_heap_profiling_in_process_heap_profiler_parameters_cc",
+    ":components_history_core_browser_features_cc",
+    ":components_history_clusters_core_features_cc",
+    ":components_history_clusters_core_on_device_clustering_features_cc",
     ":components_permissions_features_cc",
+    ":components_metrics_metrics_features_cc",
+    ":components_metrics_structured_structured_metrics_features_cc",
+    ":components_network_time_network_time_tracker_cc",
     ":components_offline_pages_core_offline_page_feature_cc",
     ":components_offline_pages_core_offline_page_feature_h",
     ":components_password_manager_core_browser_features_password_features_cc",
+    ":components_omnibox_common_omnibox_features_cc",
+    ":components_optimization_guide_core_optimization_guide_features_cc",
+    ":components_page_image_service_features_cc",
+    ":components_password_manager_core_common_password_manager_features_cc",
+    ":components_privacy_sandbox_privacy_sandbox_features_cc",
+    ":components_safe_browsing_core_common_features_cc",
+    ":components_search_ntp_features_cc",
+    ":components_segmentation_platform_public_features_cc",
+    ":components_shared_highlighting_core_common_shared_highlighting_features_cc",
+    ":components_subresource_filter_core_common_common_features_cc",
     ":media_base_media_switches_cc",
     ":media_base_media_switches_h",
     ":net_base_features_cc",
     ":net_base_features_h",
     ":chrome_common_chrome_features_cc",
+    ":chrome_common_privacy_budget_privacy_budget_features_cc",
     ":chrome_browser_about_flags_cc",
     ":chrome_browser_flags_android_chrome_feature_list_cc",
     ":chrome_browser_flags_android_chrome_feature_list_h",
diff --git a/cromite_flags/android_webview/common/aw_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc b/cromite_flags/android_webview/common/aw_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/android_webview/common/aw_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
@@ -0,0 +1 @@
+// nothing for now
diff --git a/cromite_flags/android_webview/common/aw_features_cc/placeholder.txt b/cromite_flags/android_webview/common/aw_features_cc/placeholder.txt
new file mode 100755
--- /dev/null
+++ b/cromite_flags/android_webview/common/aw_features_cc/placeholder.txt
@@ -0,0 +1 @@
+this file is intentionally empty
diff --git a/cromite_flags/base/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc b/cromite_flags/base/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/base/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
@@ -0,0 +1,3 @@
+#if BUILDFLAG(IS_ANDROID)
+SET_CROMITE_FEATURE_DISABLED(kCollectAndroidFrameTimelineMetrics);
+#endif
diff --git a/cromite_flags/base/features_cc/placeholder.txt b/cromite_flags/base/features_cc/placeholder.txt
new file mode 100755
--- /dev/null
+++ b/cromite_flags/base/features_cc/placeholder.txt
@@ -0,0 +1 @@
+this file is intentionally empty
diff --git a/cromite_flags/chrome/browser/browser_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc b/cromite_flags/chrome/browser/browser_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/chrome/browser/browser_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
@@ -0,0 +1,2 @@
+SET_CROMITE_FEATURE_DISABLED(kDestroyProfileOnBrowserClose);
+// in Enable-Certificate-Transparency.inc: SET_CROMITE_FEATURE_ENABLED(kCertificateTransparencyAskBeforeEnabling);
diff --git a/cromite_flags/chrome/browser/flags/android/chrome_feature_list_cc/Bring-in-Brave-feature-states-for-privacy-security.inc b/cromite_flags/chrome/browser/flags/android/chrome_feature_list_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/chrome/browser/flags/android/chrome_feature_list_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
@@ -0,0 +1,2 @@
+SET_CROMITE_FEATURE_DISABLED(kClearBrowsingDataAndroidSurvey);
+SET_CROMITE_FEATURE_DISABLED(kMagicStackAndroid);
diff --git a/cromite_flags/chrome/browser/ui/ui_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc b/cromite_flags/chrome/browser/ui/ui_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/chrome/browser/ui/ui_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
@@ -0,0 +1 @@
+// nothing for now
diff --git a/cromite_flags/chrome/common/chrome_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc b/cromite_flags/chrome/common/chrome_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/chrome/common/chrome_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
@@ -0,0 +1,3 @@
+SET_CROMITE_FEATURE_DISABLED(kChromeStructuredMetrics);
+SET_CROMITE_FEATURE_DISABLED(kKAnonymityService);
+SET_CROMITE_FEATURE_DISABLED(kKAnonymityServiceOHTTPRequests);
diff --git a/cromite_flags/chrome/common/privacy_budget/privacy_budget_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc b/cromite_flags/chrome/common/privacy_budget/privacy_budget_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/chrome/common/privacy_budget/privacy_budget_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
@@ -0,0 +1 @@
+SET_CROMITE_FEATURE_DISABLED(kIdentifiabilityStudyMetaExperiment);
diff --git a/cromite_flags/chrome/common/privacy_budget/privacy_budget_features_cc/placeholder.txt b/cromite_flags/chrome/common/privacy_budget/privacy_budget_features_cc/placeholder.txt
new file mode 100755
--- /dev/null
+++ b/cromite_flags/chrome/common/privacy_budget/privacy_budget_features_cc/placeholder.txt
@@ -0,0 +1 @@
+this file is intentionally empty
diff --git a/cromite_flags/components/aggregation_service/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc b/cromite_flags/components/aggregation_service/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/components/aggregation_service/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
@@ -0,0 +1 @@
+SET_CROMITE_FEATURE_DISABLED(kAggregationServiceMultipleCloudProviders);
diff --git a/cromite_flags/components/aggregation_service/features_cc/placeholder.txt b/cromite_flags/components/aggregation_service/features_cc/placeholder.txt
new file mode 100755
--- /dev/null
+++ b/cromite_flags/components/aggregation_service/features_cc/placeholder.txt
@@ -0,0 +1 @@
+this file is intentionally empty
diff --git a/cromite_flags/components/autofill/core/common/autofill_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc b/cromite_flags/components/autofill/core/common/autofill_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/components/autofill/core/common/autofill_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
@@ -0,0 +1,2 @@
+SET_CROMITE_FEATURE_DISABLED(kAutofillAiServerModel);
+SET_CROMITE_FEATURE_DISABLED_W_NAMESPACE(test, kAutofillServerCommunication);
diff --git a/cromite_flags/components/autofill/core/common/autofill_features_cc/placeholder.txt b/cromite_flags/components/autofill/core/common/autofill_features_cc/placeholder.txt
new file mode 100755
--- /dev/null
+++ b/cromite_flags/components/autofill/core/common/autofill_features_cc/placeholder.txt
@@ -0,0 +1 @@
+this file is intentionally empty
diff --git a/cromite_flags/components/autofill/core/common/autofill_payments_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc b/cromite_flags/components/autofill/core/common/autofill_payments_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/components/autofill/core/common/autofill_payments_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
@@ -0,0 +1,2 @@
+SET_CROMITE_FEATURE_DISABLED(kAutofillEnableCardBenefitsForAmericanExpress);
+SET_CROMITE_FEATURE_DISABLED(kAutofillEnableCardBenefitsForBmo);
diff --git a/cromite_flags/components/autofill/core/common/autofill_payments_features_cc/placeholder.txt b/cromite_flags/components/autofill/core/common/autofill_payments_features_cc/placeholder.txt
new file mode 100755
--- /dev/null
+++ b/cromite_flags/components/autofill/core/common/autofill_payments_features_cc/placeholder.txt
@@ -0,0 +1 @@
+this file is intentionally empty
diff --git a/cromite_flags/components/commerce/core/commerce_feature_list_cc/Bring-in-Brave-feature-states-for-privacy-security.inc b/cromite_flags/components/commerce/core/commerce_feature_list_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/components/commerce/core/commerce_feature_list_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
@@ -0,0 +1,7 @@
+SET_CROMITE_FEATURE_DISABLED(kCommerceAllowOnDemandBookmarkUpdates);
+SET_CROMITE_FEATURE_DISABLED(kCommerceDeveloper);
+SET_CROMITE_FEATURE_DISABLED(kCommerceMerchantViewer);
+SET_CROMITE_FEATURE_DISABLED(kPriceAnnotations);
+SET_CROMITE_FEATURE_DISABLED(kRetailCoupons);
+SET_CROMITE_FEATURE_DISABLED(kShoppingList);
+SET_CROMITE_FEATURE_DISABLED(kShoppingPDPMetrics);
diff --git a/cromite_flags/components/commerce/core/commerce_feature_list_cc/placeholder.txt b/cromite_flags/components/commerce/core/commerce_feature_list_cc/placeholder.txt
new file mode 100755
--- /dev/null
+++ b/cromite_flags/components/commerce/core/commerce_feature_list_cc/placeholder.txt
@@ -0,0 +1 @@
+this file is intentionally empty
diff --git a/cromite_flags/components/compose/core/browser/compose_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc b/cromite_flags/components/compose/core/browser/compose_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/components/compose/core/browser/compose_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
@@ -0,0 +1 @@
+SET_CROMITE_FEATURE_DISABLED(kEnableCompose);
diff --git a/cromite_flags/components/compose/core/browser/compose_features_cc/placeholder.txt b/cromite_flags/components/compose/core/browser/compose_features_cc/placeholder.txt
new file mode 100755
--- /dev/null
+++ b/cromite_flags/components/compose/core/browser/compose_features_cc/placeholder.txt
@@ -0,0 +1 @@
+this file is intentionally empty
diff --git a/cromite_flags/components/content_settings/core/common/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc b/cromite_flags/components/content_settings/core/common/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/components/content_settings/core/common/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
@@ -0,0 +1 @@
+SET_CROMITE_FEATURE_DISABLED(kUserBypassUI);
diff --git a/cromite_flags/components/heap_profiling/in_process/heap_profiler_parameters_cc/Bring-in-Brave-feature-states-for-privacy-security.inc b/cromite_flags/components/heap_profiling/in_process/heap_profiler_parameters_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/components/heap_profiling/in_process/heap_profiler_parameters_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
@@ -0,0 +1 @@
+SET_CROMITE_FEATURE_DISABLED(kHeapProfilerReporting);
diff --git a/cromite_flags/components/heap_profiling/in_process/heap_profiler_parameters_cc/placeholder.txt b/cromite_flags/components/heap_profiling/in_process/heap_profiler_parameters_cc/placeholder.txt
new file mode 100755
--- /dev/null
+++ b/cromite_flags/components/heap_profiling/in_process/heap_profiler_parameters_cc/placeholder.txt
@@ -0,0 +1 @@
+this file is intentionally empty
diff --git a/cromite_flags/components/history/core/browser/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc b/cromite_flags/components/history/core/browser/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/components/history/core/browser/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
@@ -0,0 +1 @@
+// nothing for now
diff --git a/cromite_flags/components/history/core/browser/features_cc/placeholder.txt b/cromite_flags/components/history/core/browser/features_cc/placeholder.txt
new file mode 100755
--- /dev/null
+++ b/cromite_flags/components/history/core/browser/features_cc/placeholder.txt
@@ -0,0 +1 @@
+this file is intentionally empty
diff --git a/cromite_flags/components/history_clusters/core/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc b/cromite_flags/components/history_clusters/core/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/components/history_clusters/core/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
@@ -0,0 +1,5 @@
+SET_CROMITE_FEATURE_DISABLED_W_NAMESPACE(internal, kHistoryClustersInternalsPage);
+SET_CROMITE_FEATURE_DISABLED_W_NAMESPACE(internal, kHistoryClustersNavigationContextClustering);
+SET_CROMITE_FEATURE_DISABLED_W_NAMESPACE(internal, kJourneys);
+SET_CROMITE_FEATURE_DISABLED_W_NAMESPACE(internal, kOmniboxAction);
+SET_CROMITE_FEATURE_DISABLED_W_NAMESPACE(internal, kOmniboxHistoryClusterProvider);
diff --git a/cromite_flags/components/history_clusters/core/features_cc/placeholder.txt b/cromite_flags/components/history_clusters/core/features_cc/placeholder.txt
new file mode 100755
--- /dev/null
+++ b/cromite_flags/components/history_clusters/core/features_cc/placeholder.txt
@@ -0,0 +1 @@
+this file is intentionally empty
diff --git a/cromite_flags/components/history_clusters/core/on_device_clustering_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc b/cromite_flags/components/history_clusters/core/on_device_clustering_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/components/history_clusters/core/on_device_clustering_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
@@ -0,0 +1,2 @@
+SET_CROMITE_FEATURE_DISABLED(kOnDeviceClustering);
+SET_CROMITE_FEATURE_DISABLED(kOnDeviceClusteringKeywordFiltering);
diff --git a/cromite_flags/components/history_clusters/core/on_device_clustering_features_cc/placeholder.txt b/cromite_flags/components/history_clusters/core/on_device_clustering_features_cc/placeholder.txt
new file mode 100755
--- /dev/null
+++ b/cromite_flags/components/history_clusters/core/on_device_clustering_features_cc/placeholder.txt
@@ -0,0 +1 @@
+this file is intentionally empty
diff --git a/cromite_flags/components/metrics/metrics_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc b/cromite_flags/components/metrics/metrics_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/components/metrics/metrics_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
@@ -0,0 +1 @@
+SET_CROMITE_FEATURE_DISABLED(kStructuredMetrics);
diff --git a/cromite_flags/components/metrics/metrics_features_cc/placeholder.txt b/cromite_flags/components/metrics/metrics_features_cc/placeholder.txt
new file mode 100755
--- /dev/null
+++ b/cromite_flags/components/metrics/metrics_features_cc/placeholder.txt
@@ -0,0 +1 @@
+this file is intentionally empty
diff --git a/cromite_flags/components/metrics/structured/structured_metrics_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc b/cromite_flags/components/metrics/structured/structured_metrics_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/components/metrics/structured/structured_metrics_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
@@ -0,0 +1,2 @@
+SET_CROMITE_FEATURE_DISABLED(kEnabledStructuredMetricsService);
+SET_CROMITE_FEATURE_DISABLED(kPhoneHubStructuredMetrics);
diff --git a/cromite_flags/components/metrics/structured/structured_metrics_features_cc/placeholder.txt b/cromite_flags/components/metrics/structured/structured_metrics_features_cc/placeholder.txt
new file mode 100755
--- /dev/null
+++ b/cromite_flags/components/metrics/structured/structured_metrics_features_cc/placeholder.txt
@@ -0,0 +1 @@
+this file is intentionally empty
diff --git a/cromite_flags/components/network_time/network_time_tracker_cc/Bring-in-Brave-feature-states-for-privacy-security.inc b/cromite_flags/components/network_time/network_time_tracker_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/components/network_time/network_time_tracker_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
@@ -0,0 +1 @@
+// in ungoogled-chromium-Disable-Network-Time-Tracker.patch: SET_CROMITE_FEATURE_DISABLED(kNetworkTimeServiceQuerying);
diff --git a/cromite_flags/components/network_time/network_time_tracker_cc/placeholder.txt b/cromite_flags/components/network_time/network_time_tracker_cc/placeholder.txt
new file mode 100755
--- /dev/null
+++ b/cromite_flags/components/network_time/network_time_tracker_cc/placeholder.txt
@@ -0,0 +1 @@
+this file is intentionally empty
diff --git a/cromite_flags/components/omnibox/common/omnibox_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc b/cromite_flags/components/omnibox/common/omnibox_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/components/omnibox/common/omnibox_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
@@ -0,0 +1,4 @@
+SET_CROMITE_FEATURE_DISABLED(kDocumentProviderNoSyncRequirement);
+SET_CROMITE_FEATURE_DISABLED(kMlUrlScoring);
+SET_CROMITE_FEATURE_DISABLED(kRichAutocompletion);
+SET_CROMITE_FEATURE_DISABLED(kZeroSuggestPrefetching);
diff --git a/cromite_flags/components/omnibox/common/omnibox_features_cc/placeholder.txt b/cromite_flags/components/omnibox/common/omnibox_features_cc/placeholder.txt
new file mode 100755
--- /dev/null
+++ b/cromite_flags/components/omnibox/common/omnibox_features_cc/placeholder.txt
@@ -0,0 +1 @@
+this file is intentionally empty
diff --git a/cromite_flags/components/optimization_guide/core/optimization_guide_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc b/cromite_flags/components/optimization_guide/core/optimization_guide_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/components/optimization_guide/core/optimization_guide_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
@@ -0,0 +1 @@
+SET_CROMITE_FEATURE_DISABLED(kOptimizationGuidePersonalizedFetching);
diff --git a/cromite_flags/components/optimization_guide/core/optimization_guide_features_cc/placeholder.txt b/cromite_flags/components/optimization_guide/core/optimization_guide_features_cc/placeholder.txt
new file mode 100755
--- /dev/null
+++ b/cromite_flags/components/optimization_guide/core/optimization_guide_features_cc/placeholder.txt
@@ -0,0 +1 @@
+this file is intentionally empty
diff --git a/cromite_flags/components/page_image_service/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc b/cromite_flags/components/page_image_service/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/components/page_image_service/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
@@ -0,0 +1,2 @@
+SET_CROMITE_FEATURE_DISABLED(kImageService);
+SET_CROMITE_FEATURE_DISABLED(kImageServiceSuggestPoweredImages);
diff --git a/cromite_flags/components/page_image_service/features_cc/placeholder.txt b/cromite_flags/components/page_image_service/features_cc/placeholder.txt
new file mode 100755
--- /dev/null
+++ b/cromite_flags/components/page_image_service/features_cc/placeholder.txt
@@ -0,0 +1 @@
+this file is intentionally empty
diff --git a/cromite_flags/components/password_manager/core/common/password_manager_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc b/cromite_flags/components/password_manager/core/common/password_manager_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/components/password_manager/core/common/password_manager_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
@@ -0,0 +1,3 @@
+#if BUILDFLAG(IS_ANDROID)
+SET_CROMITE_FEATURE_DISABLED(kUnifiedPasswordManagerLocalPasswordsMigrationWarning);
+#endif
diff --git a/cromite_flags/components/password_manager/core/common/password_manager_features_cc/placeholder.txt b/cromite_flags/components/password_manager/core/common/password_manager_features_cc/placeholder.txt
new file mode 100755
--- /dev/null
+++ b/cromite_flags/components/password_manager/core/common/password_manager_features_cc/placeholder.txt
@@ -0,0 +1 @@
+this file is intentionally empty
diff --git a/cromite_flags/components/permissions/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc b/cromite_flags/components/permissions/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/components/permissions/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
@@ -0,0 +1,2 @@
+SET_CROMITE_FEATURE_DISABLED(kShowRelatedWebsiteSetsPermissionGrants);
+// in Disable-all-predictors-code.patch: SET_CROMITE_FEATURE_DISABLED(kPermissionPredictionsV2);
diff --git a/cromite_flags/components/privacy_sandbox/privacy_sandbox_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc b/cromite_flags/components/privacy_sandbox/privacy_sandbox_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/components/privacy_sandbox/privacy_sandbox_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
@@ -0,0 +1,3 @@
+SET_CROMITE_FEATURE_DISABLED(kOverridePrivacySandboxSettingsLocalTesting);
+// in components/privacy_sandbox/privacy_sandbox_features.cc: SET_CROMITE_FEATURE_DISABLED(kPrivacySandboxFirstPartySetsUI);
+SET_CROMITE_FEATURE_DISABLED(kTrackingProtectionContentSettingUbControl);
diff --git a/cromite_flags/components/privacy_sandbox/privacy_sandbox_features_cc/placeholder.txt b/cromite_flags/components/privacy_sandbox/privacy_sandbox_features_cc/placeholder.txt
new file mode 100755
--- /dev/null
+++ b/cromite_flags/components/privacy_sandbox/privacy_sandbox_features_cc/placeholder.txt
@@ -0,0 +1 @@
+this file is intentionally empty
diff --git a/cromite_flags/components/safe_browsing/core/common/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc b/cromite_flags/components/safe_browsing/core/common/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/components/safe_browsing/core/common/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
@@ -0,0 +1,2 @@
+SET_CROMITE_FEATURE_DISABLED(kExtensionTelemetryForEnterprise);
+SET_CROMITE_FEATURE_DISABLED(kGooglePlayProtectInApkTelemetry);
diff --git a/cromite_flags/components/safe_browsing/core/common/features_cc/placeholder.txt b/cromite_flags/components/safe_browsing/core/common/features_cc/placeholder.txt
new file mode 100755
--- /dev/null
+++ b/cromite_flags/components/safe_browsing/core/common/features_cc/placeholder.txt
@@ -0,0 +1 @@
+this file is intentionally empty
diff --git a/cromite_flags/components/search/ntp_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc b/cromite_flags/components/search/ntp_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/components/search/ntp_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
@@ -0,0 +1,6 @@
+SET_CROMITE_FEATURE_DISABLED(kCustomizeChromeSidePanelExtensionsCard);
+SET_CROMITE_FEATURE_DISABLED(kCustomizeChromeWallpaperSearch);
+SET_CROMITE_FEATURE_DISABLED(kNtpAlphaBackgroundCollections);
+SET_CROMITE_FEATURE_DISABLED(kNtpBackgroundImageErrorDetection);
+SET_CROMITE_FEATURE_DISABLED(kNtpChromeCartModule);
+SET_CROMITE_FEATURE_DISABLED(kNtpModulesMaxColumnCount);
diff --git a/cromite_flags/components/search/ntp_features_cc/placeholder.txt b/cromite_flags/components/search/ntp_features_cc/placeholder.txt
new file mode 100755
--- /dev/null
+++ b/cromite_flags/components/search/ntp_features_cc/placeholder.txt
@@ -0,0 +1 @@
+this file is intentionally empty
diff --git a/cromite_flags/components/segmentation_platform/public/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc b/cromite_flags/components/segmentation_platform/public/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/components/segmentation_platform/public/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
@@ -0,0 +1,3 @@
+SET_CROMITE_FEATURE_DISABLED(kSegmentationPlatformCollectTabRankData);
+SET_CROMITE_FEATURE_DISABLED(kSegmentationPlatformDeviceTier);
+SET_CROMITE_FEATURE_DISABLED(kSegmentationPlatformTimeDelaySampling);
diff --git a/cromite_flags/components/segmentation_platform/public/features_cc/placeholder.txt b/cromite_flags/components/segmentation_platform/public/features_cc/placeholder.txt
new file mode 100755
--- /dev/null
+++ b/cromite_flags/components/segmentation_platform/public/features_cc/placeholder.txt
@@ -0,0 +1 @@
+this file is intentionally empty
diff --git a/cromite_flags/components/shared_highlighting/core/common/shared_highlighting_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc b/cromite_flags/components/shared_highlighting/core/common/shared_highlighting_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/components/shared_highlighting/core/common/shared_highlighting_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
@@ -0,0 +1 @@
+SET_CROMITE_FEATURE_DISABLED(kSharedHighlightingManager);
diff --git a/cromite_flags/components/shared_highlighting/core/common/shared_highlighting_features_cc/placeholder.txt b/cromite_flags/components/shared_highlighting/core/common/shared_highlighting_features_cc/placeholder.txt
new file mode 100755
--- /dev/null
+++ b/cromite_flags/components/shared_highlighting/core/common/shared_highlighting_features_cc/placeholder.txt
@@ -0,0 +1 @@
+this file is intentionally empty
diff --git a/cromite_flags/components/subresource_filter/core/common/common_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc b/cromite_flags/components/subresource_filter/core/common/common_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/components/subresource_filter/core/common/common_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
@@ -0,0 +1 @@
+SET_CROMITE_FEATURE_DISABLED(kAdTagging);
diff --git a/cromite_flags/components/subresource_filter/core/common/common_features_cc/placeholder.txt b/cromite_flags/components/subresource_filter/core/common/common_features_cc/placeholder.txt
new file mode 100755
--- /dev/null
+++ b/cromite_flags/components/subresource_filter/core/common/common_features_cc/placeholder.txt
@@ -0,0 +1 @@
+this file is intentionally empty
diff --git a/cromite_flags/content/browser/preloading/prefetch/prefetch_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc b/cromite_flags/content/browser/preloading/prefetch/prefetch_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/content/browser/preloading/prefetch/prefetch_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
@@ -0,0 +1 @@
+// nothing for now
diff --git a/cromite_flags/content/browser/preloading/prefetch/prefetch_features_cc/placeholder.txt b/cromite_flags/content/browser/preloading/prefetch/prefetch_features_cc/placeholder.txt
new file mode 100755
--- /dev/null
+++ b/cromite_flags/content/browser/preloading/prefetch/prefetch_features_cc/placeholder.txt
@@ -0,0 +1 @@
+this file is intentionally empty
diff --git a/cromite_flags/content/common/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc b/cromite_flags/content/common/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/content/common/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
@@ -0,0 +1 @@
+// nothing for now
diff --git a/cromite_flags/content/public/common/content_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc b/cromite_flags/content/public/common/content_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/content/public/common/content_features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
@@ -0,0 +1,5 @@
+SET_CROMITE_FEATURE_DISABLED(kCookieDeprecationFacilitatedTesting);
+SET_CROMITE_FEATURE_DISABLED(kDigitalGoodsApi);
+SET_CROMITE_FEATURE_DISABLED(kServiceWorkerAutoPreload);
+SET_CROMITE_FEATURE_DISABLED(kWebIdentityDigitalCredentials);
+SET_CROMITE_FEATURE_DISABLED(kWebOTP);
diff --git a/cromite_flags/net/base/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc b/cromite_flags/net/base/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/net/base/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
@@ -0,0 +1,3 @@
+SET_CROMITE_FEATURE_DISABLED(kEnableWebTransportDraft07);
+SET_CROMITE_FEATURE_DISABLED(kTpcdMetadataGrants);
+SET_CROMITE_FEATURE_DISABLED(kWaitForFirstPartySetsInit);
diff --git a/cromite_flags/services/network/public/cpp/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc b/cromite_flags/services/network/public/cpp/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/services/network/public/cpp/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
@@ -0,0 +1,2 @@
+// in Disable-PrivateStateTokens-API.inc: SET_CROMITE_FEATURE_DISABLED(kFledgePst);
+// in Disable-PrivateStateTokens-API.inc: SET_CROMITE_FEATURE_DISABLED(kPrivateStateTokens);
diff --git a/cromite_flags/third_party/blink/common/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc b/cromite_flags/third_party/blink/common/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/third_party/blink/common/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
@@ -0,0 +1,13 @@
+// in Disable-conversion-measurement-api.inc: SET_CROMITE_FEATURE_DISABLED(kAllowURNsInIframes);
+// in Keep-disabled-FetchLaterAPI.inc: SET_CROMITE_FEATURE_DISABLED(kAttributionReportingInBrowserMigration);
+SET_CROMITE_FEATURE_DISABLED(kBackgroundResourceFetch);
+// in Disable-conversion-measurement-api.inc SET_CROMITE_FEATURE_DISABLED(kBiddingAndScoringDebugReportingAPI);
+SET_CROMITE_FEATURE_DISABLED(kControlledFrame);
+// in Disable-conversion-measurement-api.inc: SET_CROMITE_FEATURE_DISABLED(kFledge);
+SET_CROMITE_FEATURE_DISABLED(kFledgeConsiderKAnonymity);
+SET_CROMITE_FEATURE_DISABLED(kFledgeEnforceKAnonymity);
+// in Disable-privacy-sandbox.inc: SET_CROMITE_FEATURE_DISABLED(kSharedStorageAPI);
+SET_CROMITE_FEATURE_DISABLED(kSpeculationRulesPrefetchFuture);
+SET_CROMITE_FEATURE_ENABLED(kMixedContentAutoupgrade);
+SET_CROMITE_FEATURE_ENABLED(kReducedReferrerGranularity);
+SET_CROMITE_FEATURE_ENABLED(kUACHOverrideBlank);
diff --git a/cromite_flags/ui/base/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc b/cromite_flags/ui/base/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/ui/base/features_cc/Bring-in-Brave-feature-states-for-privacy-security.inc
@@ -0,0 +1 @@
+// Nothing anymore, but maybe later.
diff --git a/third_party/blink/renderer/core/html/html_script_element.cc b/third_party/blink/renderer/core/html/html_script_element.cc
--- a/third_party/blink/renderer/core/html/html_script_element.cc
+++ b/third_party/blink/renderer/core/html/html_script_element.cc
@@ -393,8 +393,8 @@ bool HTMLScriptElement::supports(const AtomicString& type) {
   if (type == script_type_names::kImportmap)
     return true;
 
-  if (type == script_type_names::kSpeculationrules) {
-    return true;
+  if (type == script_type_names::kSpeculationrules) {  // disabled
+    return false;                                      // in Brave
   }
   if (type == script_type_names::kWebbundle)
     return true;
diff --git a/third_party/blink/renderer/platform/runtime_enabled_features.json5 b/third_party/blink/renderer/platform/runtime_enabled_features.json5
--- a/third_party/blink/renderer/platform/runtime_enabled_features.json5
+++ b/third_party/blink/renderer/platform/runtime_enabled_features.json5
@@ -294,7 +294,6 @@
       name: "AdInterestGroupAPI", // keep disabled
       status: "experimental",     // keep disabled
       origin_trial_feature_name: "AdInterestGroupAPI",
-      implied_by: ["Fledge", "Parakeet"],
       public: true,
     },
     // Adjust the end of the next paragraph if the end position for the
@@ -310,9 +309,9 @@
       status: "stable",
     },
     {
-      name: "AdTagging",
+      name: "AdTagging", // disabled
+      status: {},        // in Brave
       public: true,
-      status: "test",
       base_feature: "none",
     },
     {
@@ -421,8 +420,10 @@
       name: "AnimationWorklet",
     },
     {
-      name: "AnonymousIframe",
-      status: "stable",
+      name: "AnonymousIframe", // disabled
+      status: {},              // in Brave
+      public: true,
+      base_feature: "none",
     },
     {
       name: "AOMAriaRelationshipProperties",
@@ -1382,8 +1383,8 @@
       implied_by: ["CSSStickyContainerQueries", "CSSSnapContainerQueries", "CSSScrollableContainerQueries"],
     },
     {
-      name: "CSSSelectorFragmentAnchor",
-      status: "experimental",
+      name: "CSSSelectorFragmentAnchor", // disabled
+      status: {},                        // in Brave
       base_feature: "CssSelectorFragmentAnchor",
     },
     {
@@ -2099,8 +2100,8 @@
       status: "stable",
     },
     {
-      name: "Fledge",
-      status: "stable",
+      name: "Fledge", // disabled
+      status: {},     // in Brave
       base_feature: "none",
       public: true,
     },
@@ -2147,7 +2148,8 @@
       name: "FledgeDirectFromSellerSignalsWebBundles",
     },
     {
-      name: "FledgeMultiBid",
+      name: "FledgeMultiBid", // disabled
+      status: {},             // in Brave
       public: true,
       status: "stable",
     },
@@ -3271,7 +3273,8 @@
     },
     {
       // PARAKEET ad serving runtime flag/JS API.
-      name: "Parakeet",
+      name: "Parakeet", // disabled
+      status: {},       // in Brave
       origin_trial_feature_name: "Parakeet",
     },
     {
@@ -3445,8 +3448,8 @@
       // preloading.) See https://crbug.com/1494471.
       //
       // It also has some feature params defined throughout the codebase.
-      name: "Prerender2",
-      status: "test",
+      name: "Prerender2", // disabled
+      status: {},         // in Brave
     },
     {
       name: "Presentation",
@@ -5074,8 +5077,8 @@
     {
       // WebGPU experimental features are meant for features that would
       // eventually land in the WebGPU spec.
-      name: "WebGPUExperimentalFeatures",
-      status: "experimental",
+      name: "WebGPUExperimentalFeatures", // disabled
+      status: {},                         // in Brave
       public: true,
     },
     {
-- 

