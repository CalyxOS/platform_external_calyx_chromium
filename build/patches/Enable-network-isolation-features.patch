From: csagan5 <32685696+csagan5@users.noreply.github.com>
Date: Thu, 10 Dec 2020 21:52:35 +0100
Subject: Enable network isolation features

Enable SplitCacheByNetworkIsolationKey, kSplitHostCacheByNetworkIsolationKey,
kPartitionConnectionsByNetworkIsolationKey, kPartitionHttpServerPropertiesByNetworkIsolationKey,
kPartitionSSLSessionsByNetworkIsolationKey, PartitionExpectCTStateByNetworkIsolationKey,
PartitionNelAndReportingByNetworkIsolationKey

License: GPL-3.0-only - https://spdx.org/licenses/GPL-3.0-only.html

Change-Id: Iae5bf07bc19de8f37435812c0cd860d2584ad9c2
---
 net/base/features.cc                    | 48 ++++++++++++-------------
 services/network/public/cpp/features.cc |  2 +-
 2 files changed, 25 insertions(+), 25 deletions(-)

diff --git a/net/base/features.cc b/net/base/features.cc
--- a/net/base/features.cc
+++ b/net/base/features.cc
@@ -95,37 +95,37 @@ BASE_FEATURE(kSplitCacheByIncludeCredentials,
              "SplitCacheByIncludeCredentials",
              base::FEATURE_DISABLED_BY_DEFAULT);
 
-BASE_FEATURE(kSplitCacheByNetworkIsolationKey,
-             "SplitCacheByNetworkIsolationKey",
-             base::FEATURE_DISABLED_BY_DEFAULT);
+BASE_FEATURE(kSplitCacheByNetworkIsolationKey,             // must be enabled
+             "SplitCacheByNetworkIsolationKey",            // enabled
+             base::FEATURE_ENABLED_BY_DEFAULT);            // in Bromite
 
-BASE_FEATURE(kSplitCodeCacheByNetworkIsolationKey,
-             "SplitCodeCacheByNetworkIsolationKey",
-             base::FEATURE_DISABLED_BY_DEFAULT);
+BASE_FEATURE(kSplitCodeCacheByNetworkIsolationKey,         // must be enabled
+             "SplitCodeCacheByNetworkIsolationKey",        // enabled
+             base::FEATURE_ENABLED_BY_DEFAULT);            // in Bromite
 
-BASE_FEATURE(kSplitHostCacheByNetworkIsolationKey,
-             "SplitHostCacheByNetworkIsolationKey",
-             base::FEATURE_DISABLED_BY_DEFAULT);
+BASE_FEATURE(kSplitHostCacheByNetworkIsolationKey,         // must be
+             "SplitHostCacheByNetworkIsolationKey",        // enabled
+             base::FEATURE_ENABLED_BY_DEFAULT);            // in Bromite
 
-BASE_FEATURE(kPartitionConnectionsByNetworkIsolationKey,
-             "PartitionConnectionsByNetworkIsolationKey",
-             base::FEATURE_DISABLED_BY_DEFAULT);
+BASE_FEATURE(kPartitionConnectionsByNetworkIsolationKey,   // must be
+             "PartitionConnectionsByNetworkIsolationKey",  // enabled
+             base::FEATURE_ENABLED_BY_DEFAULT);            // in Bromite
 
-BASE_FEATURE(kPartitionHttpServerPropertiesByNetworkIsolationKey,
-             "PartitionHttpServerPropertiesByNetworkIsolationKey",
-             base::FEATURE_DISABLED_BY_DEFAULT);
+BASE_FEATURE(kPartitionHttpServerPropertiesByNetworkIsolationKey,     // must be
+             "PartitionHttpServerPropertiesByNetworkIsolationKey",    // enabled
+             base::FEATURE_ENABLED_BY_DEFAULT);                       // in Bromite
 
-BASE_FEATURE(kPartitionSSLSessionsByNetworkIsolationKey,
-             "PartitionSSLSessionsByNetworkIsolationKey",
-             base::FEATURE_DISABLED_BY_DEFAULT);
+BASE_FEATURE(kPartitionSSLSessionsByNetworkIsolationKey,              // must be
+             "PartitionSSLSessionsByNetworkIsolationKey",             // enabled
+             base::FEATURE_ENABLED_BY_DEFAULT);                       // in Bromite
 
-BASE_FEATURE(kPartitionNelAndReportingByNetworkIsolationKey,
-             "PartitionNelAndReportingByNetworkIsolationKey",
-             base::FEATURE_DISABLED_BY_DEFAULT);
+BASE_FEATURE(kPartitionNelAndReportingByNetworkIsolationKey,          // must be
+             "PartitionNelAndReportingByNetworkIsolationKey",         // enabled
+             base::FEATURE_ENABLED_BY_DEFAULT);                       // in Bromite
 
-BASE_FEATURE(kEnableCrossSiteFlagNetworkIsolationKey,
-             "EnableCrossSiteFlagNetworkIsolationKey",
-             base::FEATURE_DISABLED_BY_DEFAULT);
+BASE_FEATURE(kEnableCrossSiteFlagNetworkIsolationKey,             // must be
+             "EnableCrossSiteFlagNetworkIsolationKey",            // disabled
+             base::FEATURE_DISABLED_BY_DEFAULT);                  // in Bromite
 
 BASE_FEATURE(kTLS13KeyUpdate,
              "TLS13KeyUpdate",
diff --git a/services/network/public/cpp/features.cc b/services/network/public/cpp/features.cc
--- a/services/network/public/cpp/features.cc
+++ b/services/network/public/cpp/features.cc
@@ -90,7 +90,7 @@ BASE_FEATURE(kCoopRestrictPropertiesOriginTrial,
 // HttpAuthCache.
 BASE_FEATURE(kSplitAuthCacheByNetworkIsolationKey,
              "SplitAuthCacheByNetworkIsolationKey",
-             base::FEATURE_DISABLED_BY_DEFAULT);
+             base::FEATURE_ENABLED_BY_DEFAULT);
 
 // Enable usage of hardcoded DoH upgrade mapping for use in automatic mode.
 BASE_FEATURE(kDnsOverHttpsUpgrade,
-- 

