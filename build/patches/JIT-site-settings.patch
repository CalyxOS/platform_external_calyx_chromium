From: fgei <fgei@gmail.com>
Date: Sat, 29 Jan 2022 15:22:45 +0000
Subject: JIT site settings

Adds a content setting to manage Javascript JIT, disabled by default.
Since the interface of the content settings foresees an eTLD origin
it requires the activation of SitePerProcess and StrictOriginIsolation
to make sure that the instantiated RenderProcess can have JIT correctly set.
Without those features, the RenderProcess would be shared between all eTLD+1.

note: needs SitePerProcess and StrictOriginIsolation flags enabled
---
 .../browser_ui/site_settings/android/BUILD.gn |  5 +++++
 .../res/xml/site_settings_preferences.xml     |  4 ++++
 .../ContentSettingsResources.java             |  7 +++++++
 .../site_settings/SingleCategorySettings.java |  7 +++++++
 .../site_settings/SingleWebsiteSettings.java  | 21 +++++++++++++++++++
 .../site_settings/SiteSettingsCategory.java   |  9 ++++++--
 .../site_settings/SiteSettingsUtil.java       |  1 +
 .../browser_ui/site_settings/Website.java     |  6 ++++++
 .../android/website_preference_bridge.cc      |  1 +
 .../strings/android/site_settings.grdp        | 17 +++++++++++++++
 .../core/browser/content_settings_registry.cc |  2 +-
 .../android/page_info_controller_android.cc   |  3 +++
 components/page_info/page_info.cc             |  6 ++++++
 components/page_info/page_info_ui.cc          |  2 ++
 components/site_settings_strings.grdp         |  6 ++++++
 15 files changed, 94 insertions(+), 3 deletions(-)

diff --git a/components/browser_ui/site_settings/android/BUILD.gn b/components/browser_ui/site_settings/android/BUILD.gn
--- a/components/browser_ui/site_settings/android/BUILD.gn
+++ b/components/browser_ui/site_settings/android/BUILD.gn
@@ -122,6 +122,7 @@ android_resources("java_resources") {
     "java/res/drawable-hdpi/ic_volume_up_grey600_24dp.png",
     "java/res/drawable-hdpi/permission_background_sync.png",
     "java/res/drawable-hdpi/permission_javascript.png",
+    "java/res/drawable-hdpi/permission_javascript_jit.png",
     "java/res/drawable-hdpi/permission_popups.png",
     "java/res/drawable-hdpi/permission_protected_media.png",
     "java/res/drawable-hdpi/settings_sensors.png",
@@ -129,6 +130,7 @@ android_resources("java_resources") {
     "java/res/drawable-mdpi/ic_volume_up_grey600_24dp.png",
     "java/res/drawable-mdpi/permission_background_sync.png",
     "java/res/drawable-mdpi/permission_javascript.png",
+    "java/res/drawable-mdpi/permission_javascript_jit.png",
     "java/res/drawable-mdpi/permission_popups.png",
     "java/res/drawable-mdpi/permission_protected_media.png",
     "java/res/drawable-mdpi/settings_sensors.png",
@@ -136,6 +138,7 @@ android_resources("java_resources") {
     "java/res/drawable-xhdpi/ic_volume_up_grey600_24dp.png",
     "java/res/drawable-xhdpi/permission_background_sync.png",
     "java/res/drawable-xhdpi/permission_javascript.png",
+    "java/res/drawable-xhdpi/permission_javascript_jit.png",
     "java/res/drawable-xhdpi/permission_popups.png",
     "java/res/drawable-xhdpi/permission_protected_media.png",
     "java/res/drawable-xhdpi/settings_sensors.png",
@@ -143,6 +146,7 @@ android_resources("java_resources") {
     "java/res/drawable-xxhdpi/ic_volume_up_grey600_24dp.png",
     "java/res/drawable-xxhdpi/permission_background_sync.png",
     "java/res/drawable-xxhdpi/permission_javascript.png",
+    "java/res/drawable-xxhdpi/permission_javascript_jit.png",
     "java/res/drawable-xxhdpi/permission_popups.png",
     "java/res/drawable-xxhdpi/permission_protected_media.png",
     "java/res/drawable-xxhdpi/settings_sensors.png",
@@ -150,6 +154,7 @@ android_resources("java_resources") {
     "java/res/drawable-xxxhdpi/ic_volume_up_grey600_24dp.png",
     "java/res/drawable-xxxhdpi/permission_background_sync.png",
     "java/res/drawable-xxxhdpi/permission_javascript.png",
+    "java/res/drawable-xxxhdpi/permission_javascript_jit.png",
     "java/res/drawable-xxxhdpi/permission_popups.png",
     "java/res/drawable-xxxhdpi/permission_protected_media.png",
     "java/res/drawable-xxxhdpi/settings_sensors.png",
diff --git a/components/browser_ui/site_settings/android/java/res/xml/site_settings_preferences.xml b/components/browser_ui/site_settings/android/java/res/xml/site_settings_preferences.xml
--- a/components/browser_ui/site_settings/android/java/res/xml/site_settings_preferences.xml
+++ b/components/browser_ui/site_settings/android/java/res/xml/site_settings_preferences.xml
@@ -37,6 +37,10 @@
     <org.chromium.components.browser_ui.settings.ChromeBasePreference
         android:fragment="org.chromium.components.browser_ui.site_settings.SingleCategorySettings"
         android:key="notifications" />
+    <!-- JavaScript-JIT -->
+    <org.chromium.components.browser_ui.settings.ChromeBasePreference
+        android:fragment="org.chromium.components.browser_ui.site_settings.SingleCategorySettings"
+        android:key="javascript_jit" />
     <!-- JavaScript -->
     <org.chromium.components.browser_ui.settings.ChromeBasePreference
         android:fragment="org.chromium.components.browser_ui.site_settings.SingleCategorySettings"
diff --git a/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/ContentSettingsResources.java b/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/ContentSettingsResources.java
--- a/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/ContentSettingsResources.java
+++ b/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/ContentSettingsResources.java
@@ -185,6 +185,13 @@ public class ContentSettingsResources {
                         ContentSettingValues.BLOCK,
                         R.string.website_settings_category_javascript_allowed, 0);
 
+            case ContentSettingsType.JAVASCRIPT_JIT:
+                return new ResourceItem(R.drawable.permission_javascript_jit,
+                        R.string.javascript_jit_permission_title, ContentSettingValues.ALLOW,
+                        ContentSettingValues.BLOCK,
+                        R.string.website_settings_category_javascript_jit_allowed,
+                        R.string.website_settings_category_javascript_jit_blocked);
+
             case ContentSettingsType.MEDIASTREAM_CAMERA:
                 return new ResourceItem(R.drawable.gm_filled_videocam_24,
                         R.string.website_settings_use_camera, ContentSettingValues.ASK,
diff --git a/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/SingleCategorySettings.java b/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/SingleCategorySettings.java
--- a/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/SingleCategorySettings.java
+++ b/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/SingleCategorySettings.java
@@ -590,6 +590,11 @@ public class SingleCategorySettings extends SiteSettingsPreferenceFragment
                                browserContextHandle, ContentSettingsType.JAVASCRIPT)
                     ? R.string.website_settings_add_site_description_javascript_block
                     : R.string.website_settings_add_site_description_javascript_allow;
+        } else if (mCategory.showSites(SiteSettingsCategory.Type.JAVASCRIPT_JIT)) {
+            resource = WebsitePreferenceBridge.isCategoryEnabled(
+                               browserContextHandle, ContentSettingsType.JAVASCRIPT_JIT)
+                    ? R.string.website_settings_add_site_description_javascript_jit_block
+                    : R.string.website_settings_add_site_description_javascript_jit_allow;
         } else if (mCategory.showSites(SiteSettingsCategory.Type.SOUND)) {
             resource = WebsitePreferenceBridge.isCategoryEnabled(
                                browserContextHandle, ContentSettingsType.SOUND)
@@ -707,6 +712,8 @@ public class SingleCategorySettings extends SiteSettingsPreferenceFragment
             allowSpecifyingExceptions = true;
         } else if (mCategory.showSites(SiteSettingsCategory.Type.JAVASCRIPT)) {
             allowSpecifyingExceptions = true;
+        } else if (mCategory.showSites(SiteSettingsCategory.Type.JAVASCRIPT_JIT)) {
+            allowSpecifyingExceptions = true;
         } else if (mCategory.showSites(SiteSettingsCategory.Type.COOKIES)) {
             allowSpecifyingExceptions = true;
         } else if (mCategory.showSites(SiteSettingsCategory.Type.BACKGROUND_SYNC)
diff --git a/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/SingleWebsiteSettings.java b/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/SingleWebsiteSettings.java
--- a/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/SingleWebsiteSettings.java
+++ b/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/SingleWebsiteSettings.java
@@ -130,6 +130,8 @@ public class SingleWebsiteSettings extends SiteSettingsPreferenceFragment
                 return "idle_detection_permission_list";
             case ContentSettingsType.JAVASCRIPT:
                 return "javascript_permission_list";
+            case ContentSettingsType.JAVASCRIPT_JIT:
+                return "javascript_jit_permission_list";
             case ContentSettingsType.POPUPS:
                 return "popup_permission_list";
             case ContentSettingsType.SOUND:
@@ -502,6 +504,8 @@ public class SingleWebsiteSettings extends SiteSettingsPreferenceFragment
                 setUpCookiesPreference(preference);
             } else if (type == ContentSettingsType.GEOLOCATION) {
                 setUpLocationPreference(preference);
+            } else if (type == ContentSettingsType.JAVASCRIPT_JIT) {
+                setUpJavascriptJitPreference(preference);
             } else if (type == ContentSettingsType.NOTIFICATIONS) {
                 setUpNotificationsPreference(preference, isPermissionEmbargoed(type));
             } else {
@@ -1028,6 +1032,23 @@ public class SingleWebsiteSettings extends SiteSettingsPreferenceFragment
         setupContentSettingsPreference(preference, currentValue, false /* isEmbargoed */);
      }
 
+    private void setUpJavascriptJitPreference(Preference preference) {
+        BrowserContextHandle browserContextHandle =
+                getSiteSettingsDelegate().getBrowserContextHandle();
+        @ContentSettingValues
+        @Nullable
+        Integer currentValue =
+                mSite.getContentSetting(browserContextHandle, ContentSettingsType.JAVASCRIPT_JIT);
+        if (currentValue == null || currentValue == ContentSettingValues.DEFAULT) {
+            currentValue = WebsitePreferenceBridge.isCategoryEnabled(
+                                   browserContextHandle, ContentSettingsType.JAVASCRIPT_JIT)
+                    ? ContentSettingValues.ALLOW
+                    : ContentSettingValues.BLOCK;
+        }
+        // Not possible to embargo JAVASCRIPT_JIT.
+        setupContentSettingsPreference(preference, currentValue, false /* isEmbargoed */);
+    }
+
     /**
      * Updates the ads list preference based on whether the site is a candidate for blocking. This
      * has some custom behavior.
diff --git a/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/SiteSettingsCategory.java b/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/SiteSettingsCategory.java
--- a/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/SiteSettingsCategory.java
+++ b/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/SiteSettingsCategory.java
@@ -43,7 +43,7 @@ public class SiteSettingsCategory {
             Type.JAVASCRIPT, Type.MICROPHONE, Type.NFC, Type.NOTIFICATIONS, Type.POPUPS,
             Type.PROTECTED_MEDIA, Type.SENSORS, Type.SOUND, Type.USB, Type.VIRTUAL_REALITY,
             Type.USE_STORAGE, Type.AUTO_DARK_WEB_CONTENT, Type.REQUEST_DESKTOP_SITE,
-            Type.FEDERATED_IDENTITY_API, Type.TIMEZONE_OVERRIDE, Type.AUTOPLAY})
+            Type.FEDERATED_IDENTITY_API, Type.TIMEZONE_OVERRIDE, Type.AUTOPLAY, Type.JAVASCRIPT_JIT})
     @Retention(RetentionPolicy.SOURCE)
     public @interface Type {
         // All updates here must also be reflected in {@link #preferenceKey(int)
@@ -76,10 +76,11 @@ public class SiteSettingsCategory {
         int FEDERATED_IDENTITY_API = 25;
         int TIMEZONE_OVERRIDE = 26;
         int AUTOPLAY = 27;
+        int JAVASCRIPT_JIT = 28;
         /**
          * Number of handled categories used for calculating array sizes.
          */
-        int NUM_ENTRIES = 28;
+        int NUM_ENTRIES = 29;
     }
 
     private final BrowserContextHandle mBrowserContextHandle;
@@ -186,6 +187,8 @@ public class SiteSettingsCategory {
                 return ContentSettingsType.IDLE_DETECTION;
             case Type.JAVASCRIPT:
                 return ContentSettingsType.JAVASCRIPT;
+            case Type.JAVASCRIPT_JIT:
+                return ContentSettingsType.JAVASCRIPT_JIT;
             case Type.MICROPHONE:
                 return ContentSettingsType.MEDIASTREAM_MIC;
             case Type.NFC:
@@ -270,6 +273,8 @@ public class SiteSettingsCategory {
                 return "javascript";
             case Type.MICROPHONE:
                 return "microphone";
+            case Type.JAVASCRIPT_JIT:
+                return "javascript_jit";
             case Type.NFC:
                 return "nfc";
             case Type.NOTIFICATIONS:
diff --git a/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/SiteSettingsUtil.java b/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/SiteSettingsUtil.java
--- a/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/SiteSettingsUtil.java
+++ b/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/SiteSettingsUtil.java
@@ -23,6 +23,7 @@ public class SiteSettingsUtil {
             ContentSettingsType.MEDIASTREAM_MIC,
             ContentSettingsType.NOTIFICATIONS,
             ContentSettingsType.JAVASCRIPT,
+            ContentSettingsType.JAVASCRIPT_JIT,
             ContentSettingsType.POPUPS,
             ContentSettingsType.ADS,
             ContentSettingsType.BACKGROUND_SYNC,
diff --git a/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/Website.java b/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/Website.java
--- a/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/Website.java
+++ b/components/browser_ui/site_settings/android/java/src/org/chromium/components/browser_ui/site_settings/Website.java
@@ -216,6 +216,12 @@ public final class Website implements Serializable {
             } else {
                 RecordUserAction.record("JavascriptContentSetting.DisableBy.SiteSettings");
             }
+        } else if (type == ContentSettingsType.JAVASCRIPT_JIT) {
+            if (exception == null) {
+                exception = new ContentSettingException(
+                        ContentSettingsType.JAVASCRIPT_JIT, getAddress().getHost(), value, "");
+                setContentSettingException(type, exception);
+            }
         } else if (type == ContentSettingsType.AUTOPLAY) {
             // It is possible to set the permission without having an existing exception,
             // because we always show the autoplay permission in Site Settings.
diff --git a/components/browser_ui/site_settings/android/website_preference_bridge.cc b/components/browser_ui/site_settings/android/website_preference_bridge.cc
--- a/components/browser_ui/site_settings/android/website_preference_bridge.cc
+++ b/components/browser_ui/site_settings/android/website_preference_bridge.cc
@@ -767,6 +767,7 @@ static void JNI_WebsitePreferenceBridge_SetContentSettingEnabled(
       case ContentSettingsType::COOKIES:
       case ContentSettingsType::FEDERATED_IDENTITY_API:
       case ContentSettingsType::JAVASCRIPT:
+      case ContentSettingsType::JAVASCRIPT_JIT:
       case ContentSettingsType::POPUPS:
       case ContentSettingsType::REQUEST_DESKTOP_SITE:
       case ContentSettingsType::SENSORS:
diff --git a/components/browser_ui/strings/android/site_settings.grdp b/components/browser_ui/strings/android/site_settings.grdp
--- a/components/browser_ui/strings/android/site_settings.grdp
+++ b/components/browser_ui/strings/android/site_settings.grdp
@@ -45,6 +45,9 @@
   <message name="IDS_JAVASCRIPT_PERMISSION_TITLE" desc="Title of the permission to run javascript [CHAR_LIMIT=32]">
     JavaScript
   </message>
+  <message name="IDS_JAVASCRIPT_JIT_PERMISSION_TITLE" desc="Title of the permission to run javascript [CHAR_LIMIT=32]">
+    JavaScript JIT
+  </message>
   <message name="IDS_WEBSITE_SETTINGS_DEVICE_LOCATION" desc="Title for Location settings, which control which websites can access your location." meaning="Geolocation">
     Location
   </message>
@@ -407,6 +410,20 @@
     Block JavaScript for a specific site.
   </message>
 
+  <!-- JavaScript JIT -->
+  <message name="IDS_WEBSITE_SETTINGS_CATEGORY_JAVASCRIPT_JIT_ALLOWED" desc="Summary text explaining that sites are allowed to compile JavaScript in JIT mode.">
+    Allow sites to use just-in-time compilation; more performant but a constant source of security vulnerabilities.
+  </message>
+  <message name="IDS_WEBSITE_SETTINGS_CATEGORY_JAVASCRIPT_JIT_BLOCKED" desc="Summary text explaining that sites are running JavaScript in JITless mode.">
+    Block sites from using just-in-time compilation, using only interpreted JavaScript; less performant but more secure against security vulnerabilities.
+  </message>
+  <message name="IDS_WEBSITE_SETTINGS_ADD_SITE_DESCRIPTION_JAVASCRIPT_JIT_ALLOW" desc="The description for the allow Javascript JIT for website dialog.">
+    Allow JIT on a specific site.
+  </message>
+  <message name="IDS_WEBSITE_SETTINGS_ADD_SITE_DESCRIPTION_JAVASCRIPT_JIT_BLOCK" desc="The description for the block Javascript JIT for website dialog.">
+    Block JIT on a specific site.
+  </message>
+
   <!-- Location -->
 
   <message name="IDS_WEBSITE_SETTINGS_CATEGORY_LOCATION_ASK" desc="Summary text explaining that sites need to ask for permission before knowing location and that it is the recommended setting.">
diff --git a/components/content_settings/core/browser/content_settings_registry.cc b/components/content_settings/core/browser/content_settings_registry.cc
--- a/components/content_settings/core/browser/content_settings_registry.cc
+++ b/components/content_settings/core/browser/content_settings_registry.cc
@@ -615,7 +615,7 @@ void ContentSettingsRegistry::Init() {
            ContentSettingsInfo::EXCEPTIONS_ON_SECURE_ORIGINS_ONLY);
 
   Register(ContentSettingsType::JAVASCRIPT_JIT, "javascript-jit",
-           CONTENT_SETTING_ALLOW, WebsiteSettingsInfo::UNSYNCABLE,
+           CONTENT_SETTING_BLOCK, WebsiteSettingsInfo::UNSYNCABLE,
            AllowlistedSchemes(),
            ValidSettings(CONTENT_SETTING_ALLOW, CONTENT_SETTING_BLOCK),
            WebsiteSettingsInfo::SINGLE_ORIGIN_ONLY_SCOPE,
diff --git a/components/page_info/android/page_info_controller_android.cc b/components/page_info/android/page_info_controller_android.cc
--- a/components/page_info/android/page_info_controller_android.cc
+++ b/components/page_info/android/page_info_controller_android.cc
@@ -141,6 +141,7 @@ void PageInfoControllerAndroid::SetPermissionInfo(
   permissions_to_display.push_back(ContentSettingsType::IDLE_DETECTION);
   permissions_to_display.push_back(ContentSettingsType::IMAGES);
   permissions_to_display.push_back(ContentSettingsType::JAVASCRIPT);
+  permissions_to_display.push_back(ContentSettingsType::JAVASCRIPT_JIT);
   permissions_to_display.push_back(ContentSettingsType::POPUPS);
   permissions_to_display.push_back(ContentSettingsType::ADS);
   permissions_to_display.push_back(
@@ -220,6 +221,8 @@ absl::optional<ContentSetting> PageInfoControllerAndroid::GetSettingToDisplay(
     // The javascript content setting should show up if it is blocked globally
     // to give users an easy way to create exceptions.
     return permission.default_setting;
+  } else if (permission.type == ContentSettingsType::JAVASCRIPT_JIT) {
+    return permission.default_setting;
   } else if (permission.type == ContentSettingsType::SOUND) {
     // The sound content setting should always show up when the tab has played
     // audio since last navigation.
diff --git a/components/page_info/page_info.cc b/components/page_info/page_info.cc
--- a/components/page_info/page_info.cc
+++ b/components/page_info/page_info.cc
@@ -122,6 +122,7 @@ ContentSettingsType kPermissionType[] = {
     ContentSettingsType::AR,
     ContentSettingsType::IDLE_DETECTION,
     ContentSettingsType::FEDERATED_IDENTITY_API,
+    ContentSettingsType::JAVASCRIPT_JIT,
 };
 
 // Determines whether to show permission |type| in the Page Info UI. Only
@@ -155,6 +156,11 @@ bool ShouldShowPermission(const PageInfo::PermissionInfo& info,
       return true;
   }
 
+  // Always show JIT settings UI when when it has a site-specific override.
+  if (info.type == ContentSettingsType::JAVASCRIPT_JIT) {
+    return true;
+  }
+
   const bool is_incognito = web_contents->GetBrowserContext()->IsOffTheRecord();
 #if BUILDFLAG(IS_ANDROID)
   // Special geolocation DSE settings apply only on Android, so make sure it
diff --git a/components/page_info/page_info_ui.cc b/components/page_info/page_info_ui.cc
--- a/components/page_info/page_info_ui.cc
+++ b/components/page_info/page_info_ui.cc
@@ -136,6 +136,8 @@ base::span<const PageInfoUI::PermissionUIInfo> GetContentSettingsUIInfo() {
      IDS_SITE_SETTINGS_TYPE_COOKIES_MID_SENTENCE},
     {ContentSettingsType::JAVASCRIPT, IDS_SITE_SETTINGS_TYPE_JAVASCRIPT,
      IDS_SITE_SETTINGS_TYPE_JAVASCRIPT_MID_SENTENCE},
+    {ContentSettingsType::JAVASCRIPT_JIT, IDS_SITE_SETTINGS_TYPE_JAVASCRIPT_JIT,
+     IDS_SITE_SETTINGS_TYPE_JAVASCRIPT_JIT_MID_SENTENCE},
     {ContentSettingsType::POPUPS, IDS_SITE_SETTINGS_TYPE_POPUPS_REDIRECTS,
      IDS_SITE_SETTINGS_TYPE_POPUPS_REDIRECTS_MID_SENTENCE},
     {ContentSettingsType::GEOLOCATION, IDS_SITE_SETTINGS_TYPE_LOCATION,
diff --git a/components/site_settings_strings.grdp b/components/site_settings_strings.grdp
--- a/components/site_settings_strings.grdp
+++ b/components/site_settings_strings.grdp
@@ -73,6 +73,12 @@
   <message name="IDS_SITE_SETTINGS_TYPE_JAVASCRIPT_MID_SENTENCE" desc="The label used for JavaScript site settings controls when used mid-sentence.">
     javascript
   </message>
+  <message name="IDS_SITE_SETTINGS_TYPE_JAVASCRIPT_JIT" desc="The label used for JavaScript JIT site settings controls.">
+    JavaScript JIT
+  </message>
+  <message name="IDS_SITE_SETTINGS_TYPE_JAVASCRIPT_JIT_MID_SENTENCE" desc="The label used for JavaScript JIT site settings controls when used mid-sentence.">
+    javascript JIT
+  </message>
   <message name="IDS_SITE_SETTINGS_TYPE_LOCATION" desc="The label used for geolocation site settings controls." meaning="Geolocation">
     Location
   </message>
-- 
2.36.1

